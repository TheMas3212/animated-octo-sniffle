{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home API Reference Packages Package Description bitburner","title":"Home"},{"location":"#api-reference","text":"","title":"API Reference"},{"location":"#packages","text":"Package Description bitburner","title":"Packages"},{"location":"bitburner.activefragment.highestcharge/","text":"Home > bitburner > ActiveFragment > highestCharge ActiveFragment.highestCharge property Signature: highestCharge: number;","title":"Bitburner.activefragment.highestcharge"},{"location":"bitburner.activefragment.highestcharge/#activefragmenthighestcharge-property","text":"Signature: highestCharge: number;","title":"ActiveFragment.highestCharge property"},{"location":"bitburner.activefragment.id/","text":"Home > bitburner > ActiveFragment > id ActiveFragment.id property Signature: id: number;","title":"Bitburner.activefragment.id"},{"location":"bitburner.activefragment.id/#activefragmentid-property","text":"Signature: id: number;","title":"ActiveFragment.id property"},{"location":"bitburner.activefragment/","text":"Home > bitburner > ActiveFragment ActiveFragment interface Signature: export interface ActiveFragment Properties Property Type Description highestCharge number id number numCharge number rotation number x number y number","title":"Bitburner.activefragment"},{"location":"bitburner.activefragment/#activefragment-interface","text":"Signature: export interface ActiveFragment","title":"ActiveFragment interface"},{"location":"bitburner.activefragment/#properties","text":"Property Type Description highestCharge number id number numCharge number rotation number x number y number","title":"Properties"},{"location":"bitburner.activefragment.numcharge/","text":"Home > bitburner > ActiveFragment > numCharge ActiveFragment.numCharge property Signature: numCharge: number;","title":"Bitburner.activefragment.numcharge"},{"location":"bitburner.activefragment.numcharge/#activefragmentnumcharge-property","text":"Signature: numCharge: number;","title":"ActiveFragment.numCharge property"},{"location":"bitburner.activefragment.rotation/","text":"Home > bitburner > ActiveFragment > rotation ActiveFragment.rotation property Signature: rotation: number;","title":"Bitburner.activefragment.rotation"},{"location":"bitburner.activefragment.rotation/#activefragmentrotation-property","text":"Signature: rotation: number;","title":"ActiveFragment.rotation property"},{"location":"bitburner.activefragment.x/","text":"Home > bitburner > ActiveFragment > x ActiveFragment.x property Signature: x: number;","title":"Bitburner.activefragment.x"},{"location":"bitburner.activefragment.x/#activefragmentx-property","text":"Signature: x: number;","title":"ActiveFragment.x property"},{"location":"bitburner.activefragment.y/","text":"Home > bitburner > ActiveFragment > y ActiveFragment.y property Signature: y: number;","title":"Bitburner.activefragment.y"},{"location":"bitburner.activefragment.y/#activefragmenty-property","text":"Signature: y: number;","title":"ActiveFragment.y property"},{"location":"bitburner.augmentpair.cost/","text":"Home > bitburner > AugmentPair > cost AugmentPair.cost property augmentation cost Signature: cost: number;","title":"Bitburner.augmentpair.cost"},{"location":"bitburner.augmentpair.cost/#augmentpaircost-property","text":"augmentation cost Signature: cost: number;","title":"AugmentPair.cost property"},{"location":"bitburner.augmentpair/","text":"Home > bitburner > AugmentPair AugmentPair interface Return value of getSleevePurchasableAugs Signature: export interface AugmentPair Properties Property Type Description cost number augmentation cost name string augmentation name","title":"Bitburner.augmentpair"},{"location":"bitburner.augmentpair/#augmentpair-interface","text":"Return value of getSleevePurchasableAugs Signature: export interface AugmentPair","title":"AugmentPair interface"},{"location":"bitburner.augmentpair/#properties","text":"Property Type Description cost number augmentation cost name string augmentation name","title":"Properties"},{"location":"bitburner.augmentpair.name/","text":"Home > bitburner > AugmentPair > name AugmentPair.name property augmentation name Signature: name: string;","title":"Bitburner.augmentpair.name"},{"location":"bitburner.augmentpair.name/#augmentpairname-property","text":"augmentation name Signature: name: string;","title":"AugmentPair.name property"},{"location":"bitburner.autocompletedata.flags/","text":"Home > bitburner > AutocompleteData > flags AutocompleteData.flags() method Signature: flags(schema: [string, string | number | boolean | string[]][]): { [key: string]: ScriptArg | string[] }; Parameters Parameter Type Description schema [string, string | number | boolean | string[]][] Returns: { [key: string]: ScriptArg | string[] }","title":"Bitburner.autocompletedata.flags"},{"location":"bitburner.autocompletedata.flags/#autocompletedataflags-method","text":"Signature: flags(schema: [string, string | number | boolean | string[]][]): { [key: string]: ScriptArg | string[] };","title":"AutocompleteData.flags() method"},{"location":"bitburner.autocompletedata.flags/#parameters","text":"Parameter Type Description schema [string, string | number | boolean | string[]][] Returns: { [key: string]: ScriptArg | string[] }","title":"Parameters"},{"location":"bitburner.autocompletedata/","text":"Home > bitburner > AutocompleteData AutocompleteData interface Used for autocompletion Signature: interface AutocompleteData Properties Property Type Description scripts string[] servers string[] txts string[] Methods Method Description flags(schema)","title":"Bitburner.autocompletedata"},{"location":"bitburner.autocompletedata/#autocompletedata-interface","text":"Used for autocompletion Signature: interface AutocompleteData","title":"AutocompleteData interface"},{"location":"bitburner.autocompletedata/#properties","text":"Property Type Description scripts string[] servers string[] txts string[]","title":"Properties"},{"location":"bitburner.autocompletedata/#methods","text":"Method Description flags(schema)","title":"Methods"},{"location":"bitburner.autocompletedata.scripts/","text":"Home > bitburner > AutocompleteData > scripts AutocompleteData.scripts property Signature: scripts: string[];","title":"Bitburner.autocompletedata.scripts"},{"location":"bitburner.autocompletedata.scripts/#autocompletedatascripts-property","text":"Signature: scripts: string[];","title":"AutocompleteData.scripts property"},{"location":"bitburner.autocompletedata.servers/","text":"Home > bitburner > AutocompleteData > servers AutocompleteData.servers property Signature: servers: string[];","title":"Bitburner.autocompletedata.servers"},{"location":"bitburner.autocompletedata.servers/#autocompletedataservers-property","text":"Signature: servers: string[];","title":"AutocompleteData.servers property"},{"location":"bitburner.autocompletedata.txts/","text":"Home > bitburner > AutocompleteData > txts AutocompleteData.txts property Signature: txts: string[];","title":"Bitburner.autocompletedata.txts"},{"location":"bitburner.autocompletedata.txts/#autocompletedatatxts-property","text":"Signature: txts: string[];","title":"AutocompleteData.txts property"},{"location":"bitburner.basichgwoptions/","text":"Home > bitburner > BasicHGWOptions BasicHGWOptions interface Options to affect the behavior of hack , grow , and weaken . Signature: export interface BasicHGWOptions Properties Property Type Description stock? boolean (Optional) Set to true this action will affect the stock market. threads? number (Optional) Number of threads to use for this function. Must be less than or equal to the number of threads the script is running with.","title":"Bitburner.basichgwoptions"},{"location":"bitburner.basichgwoptions/#basichgwoptions-interface","text":"Options to affect the behavior of hack , grow , and weaken . Signature: export interface BasicHGWOptions","title":"BasicHGWOptions interface"},{"location":"bitburner.basichgwoptions/#properties","text":"Property Type Description stock? boolean (Optional) Set to true this action will affect the stock market. threads? number (Optional) Number of threads to use for this function. Must be less than or equal to the number of threads the script is running with.","title":"Properties"},{"location":"bitburner.basichgwoptions.stock/","text":"Home > bitburner > BasicHGWOptions > stock BasicHGWOptions.stock property Set to true this action will affect the stock market. Signature: stock?: boolean;","title":"Bitburner.basichgwoptions.stock"},{"location":"bitburner.basichgwoptions.stock/#basichgwoptionsstock-property","text":"Set to true this action will affect the stock market. Signature: stock?: boolean;","title":"BasicHGWOptions.stock property"},{"location":"bitburner.basichgwoptions.threads/","text":"Home > bitburner > BasicHGWOptions > threads BasicHGWOptions.threads property Number of threads to use for this function. Must be less than or equal to the number of threads the script is running with. Signature: threads?: number;","title":"Bitburner.basichgwoptions.threads"},{"location":"bitburner.basichgwoptions.threads/#basichgwoptionsthreads-property","text":"Number of threads to use for this function. Must be less than or equal to the number of threads the script is running with. Signature: threads?: number;","title":"BasicHGWOptions.threads property"},{"location":"bitburner.bitnodemultipliers.agilitylevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > AgilityLevelMultiplier BitNodeMultipliers.AgilityLevelMultiplier property Influences how quickly the player's agility level (not exp) scales Signature: AgilityLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.agilitylevelmultiplier"},{"location":"bitburner.bitnodemultipliers.agilitylevelmultiplier/#bitnodemultipliersagilitylevelmultiplier-property","text":"Influences how quickly the player's agility level (not exp) scales Signature: AgilityLevelMultiplier: number;","title":"BitNodeMultipliers.AgilityLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.augmentationmoneycost/","text":"Home > bitburner > BitNodeMultipliers > AugmentationMoneyCost BitNodeMultipliers.AugmentationMoneyCost property Influences the base cost to purchase an augmentation. Signature: AugmentationMoneyCost: number;","title":"Bitburner.bitnodemultipliers.augmentationmoneycost"},{"location":"bitburner.bitnodemultipliers.augmentationmoneycost/#bitnodemultipliersaugmentationmoneycost-property","text":"Influences the base cost to purchase an augmentation. Signature: AugmentationMoneyCost: number;","title":"BitNodeMultipliers.AugmentationMoneyCost property"},{"location":"bitburner.bitnodemultipliers.augmentationrepcost/","text":"Home > bitburner > BitNodeMultipliers > AugmentationRepCost BitNodeMultipliers.AugmentationRepCost property Influences the base rep the player must have with a faction to purchase an augmentation. Signature: AugmentationRepCost: number;","title":"Bitburner.bitnodemultipliers.augmentationrepcost"},{"location":"bitburner.bitnodemultipliers.augmentationrepcost/#bitnodemultipliersaugmentationrepcost-property","text":"Influences the base rep the player must have with a faction to purchase an augmentation. Signature: AugmentationRepCost: number;","title":"BitNodeMultipliers.AugmentationRepCost property"},{"location":"bitburner.bitnodemultipliers.bladeburnerrank/","text":"Home > bitburner > BitNodeMultipliers > BladeburnerRank BitNodeMultipliers.BladeburnerRank property Influences how quickly the player can gain rank within Bladeburner. Signature: BladeburnerRank: number;","title":"Bitburner.bitnodemultipliers.bladeburnerrank"},{"location":"bitburner.bitnodemultipliers.bladeburnerrank/#bitnodemultipliersbladeburnerrank-property","text":"Influences how quickly the player can gain rank within Bladeburner. Signature: BladeburnerRank: number;","title":"BitNodeMultipliers.BladeburnerRank property"},{"location":"bitburner.bitnodemultipliers.bladeburnerskillcost/","text":"Home > bitburner > BitNodeMultipliers > BladeburnerSkillCost BitNodeMultipliers.BladeburnerSkillCost property Influences the cost of skill levels from Bladeburner. Signature: BladeburnerSkillCost: number;","title":"Bitburner.bitnodemultipliers.bladeburnerskillcost"},{"location":"bitburner.bitnodemultipliers.bladeburnerskillcost/#bitnodemultipliersbladeburnerskillcost-property","text":"Influences the cost of skill levels from Bladeburner. Signature: BladeburnerSkillCost: number;","title":"BitNodeMultipliers.BladeburnerSkillCost property"},{"location":"bitburner.bitnodemultipliers.charismalevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > CharismaLevelMultiplier BitNodeMultipliers.CharismaLevelMultiplier property Influences how quickly the player's charisma level (not exp) scales Signature: CharismaLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.charismalevelmultiplier"},{"location":"bitburner.bitnodemultipliers.charismalevelmultiplier/#bitnodemultiplierscharismalevelmultiplier-property","text":"Influences how quickly the player's charisma level (not exp) scales Signature: CharismaLevelMultiplier: number;","title":"BitNodeMultipliers.CharismaLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.classgymexpgain/","text":"Home > bitburner > BitNodeMultipliers > ClassGymExpGain BitNodeMultipliers.ClassGymExpGain property Influences the experience gained for each ability when a player completes a class. Signature: ClassGymExpGain: number;","title":"Bitburner.bitnodemultipliers.classgymexpgain"},{"location":"bitburner.bitnodemultipliers.classgymexpgain/#bitnodemultipliersclassgymexpgain-property","text":"Influences the experience gained for each ability when a player completes a class. Signature: ClassGymExpGain: number;","title":"BitNodeMultipliers.ClassGymExpGain property"},{"location":"bitburner.bitnodemultipliers.codingcontractmoney/","text":"Home > bitburner > BitNodeMultipliers > CodingContractMoney BitNodeMultipliers.CodingContractMoney property Influences the amount of money gained from completing Coding Contracts Signature: CodingContractMoney: number;","title":"Bitburner.bitnodemultipliers.codingcontractmoney"},{"location":"bitburner.bitnodemultipliers.codingcontractmoney/#bitnodemultiplierscodingcontractmoney-property","text":"Influences the amount of money gained from completing Coding Contracts Signature: CodingContractMoney: number;","title":"BitNodeMultipliers.CodingContractMoney property"},{"location":"bitburner.bitnodemultipliers.companyworkexpgain/","text":"Home > bitburner > BitNodeMultipliers > CompanyWorkExpGain BitNodeMultipliers.CompanyWorkExpGain property Influences the experience gained for each ability when the player completes working their job. Signature: CompanyWorkExpGain: number;","title":"Bitburner.bitnodemultipliers.companyworkexpgain"},{"location":"bitburner.bitnodemultipliers.companyworkexpgain/#bitnodemultiplierscompanyworkexpgain-property","text":"Influences the experience gained for each ability when the player completes working their job. Signature: CompanyWorkExpGain: number;","title":"BitNodeMultipliers.CompanyWorkExpGain property"},{"location":"bitburner.bitnodemultipliers.companyworkmoney/","text":"Home > bitburner > BitNodeMultipliers > CompanyWorkMoney BitNodeMultipliers.CompanyWorkMoney property Influences how much money the player earns when completing working their job. Signature: CompanyWorkMoney: number;","title":"Bitburner.bitnodemultipliers.companyworkmoney"},{"location":"bitburner.bitnodemultipliers.companyworkmoney/#bitnodemultiplierscompanyworkmoney-property","text":"Influences how much money the player earns when completing working their job. Signature: CompanyWorkMoney: number;","title":"BitNodeMultipliers.CompanyWorkMoney property"},{"location":"bitburner.bitnodemultipliers.corporationsoftcap/","text":"Home > bitburner > BitNodeMultipliers > CorporationSoftcap BitNodeMultipliers.CorporationSoftcap property Influences the money gain from dividends of corporations created by the player. Signature: CorporationSoftcap: number;","title":"Bitburner.bitnodemultipliers.corporationsoftcap"},{"location":"bitburner.bitnodemultipliers.corporationsoftcap/#bitnodemultiplierscorporationsoftcap-property","text":"Influences the money gain from dividends of corporations created by the player. Signature: CorporationSoftcap: number;","title":"BitNodeMultipliers.CorporationSoftcap property"},{"location":"bitburner.bitnodemultipliers.corporationvaluation/","text":"Home > bitburner > BitNodeMultipliers > CorporationValuation BitNodeMultipliers.CorporationValuation property Influences the valuation of corporations created by the player. Signature: CorporationValuation: number;","title":"Bitburner.bitnodemultipliers.corporationvaluation"},{"location":"bitburner.bitnodemultipliers.corporationvaluation/#bitnodemultiplierscorporationvaluation-property","text":"Influences the valuation of corporations created by the player. Signature: CorporationValuation: number;","title":"BitNodeMultipliers.CorporationValuation property"},{"location":"bitburner.bitnodemultipliers.crimeexpgain/","text":"Home > bitburner > BitNodeMultipliers > CrimeExpGain BitNodeMultipliers.CrimeExpGain property Influences the base experience gained for each ability when the player commits a crime. Signature: CrimeExpGain: number;","title":"Bitburner.bitnodemultipliers.crimeexpgain"},{"location":"bitburner.bitnodemultipliers.crimeexpgain/#bitnodemultiplierscrimeexpgain-property","text":"Influences the base experience gained for each ability when the player commits a crime. Signature: CrimeExpGain: number;","title":"BitNodeMultipliers.CrimeExpGain property"},{"location":"bitburner.bitnodemultipliers.crimemoney/","text":"Home > bitburner > BitNodeMultipliers > CrimeMoney BitNodeMultipliers.CrimeMoney property Influences the base money gained when the player commits a crime. Signature: CrimeMoney: number;","title":"Bitburner.bitnodemultipliers.crimemoney"},{"location":"bitburner.bitnodemultipliers.crimemoney/#bitnodemultiplierscrimemoney-property","text":"Influences the base money gained when the player commits a crime. Signature: CrimeMoney: number;","title":"BitNodeMultipliers.CrimeMoney property"},{"location":"bitburner.bitnodemultipliers.daedalusaugsrequirement/","text":"Home > bitburner > BitNodeMultipliers > DaedalusAugsRequirement BitNodeMultipliers.DaedalusAugsRequirement property Influences how many Augmentations you need in order to get invited to the Daedalus faction Signature: DaedalusAugsRequirement: number;","title":"Bitburner.bitnodemultipliers.daedalusaugsrequirement"},{"location":"bitburner.bitnodemultipliers.daedalusaugsrequirement/#bitnodemultipliersdaedalusaugsrequirement-property","text":"Influences how many Augmentations you need in order to get invited to the Daedalus faction Signature: DaedalusAugsRequirement: number;","title":"BitNodeMultipliers.DaedalusAugsRequirement property"},{"location":"bitburner.bitnodemultipliers.defenselevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > DefenseLevelMultiplier BitNodeMultipliers.DefenseLevelMultiplier property Influences how quickly the player's defense level (not exp) scales Signature: DefenseLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.defenselevelmultiplier"},{"location":"bitburner.bitnodemultipliers.defenselevelmultiplier/#bitnodemultipliersdefenselevelmultiplier-property","text":"Influences how quickly the player's defense level (not exp) scales Signature: DefenseLevelMultiplier: number;","title":"BitNodeMultipliers.DefenseLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.dexteritylevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > DexterityLevelMultiplier BitNodeMultipliers.DexterityLevelMultiplier property Influences how quickly the player's dexterity level (not exp) scales Signature: DexterityLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.dexteritylevelmultiplier"},{"location":"bitburner.bitnodemultipliers.dexteritylevelmultiplier/#bitnodemultipliersdexteritylevelmultiplier-property","text":"Influences how quickly the player's dexterity level (not exp) scales Signature: DexterityLevelMultiplier: number;","title":"BitNodeMultipliers.DexterityLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.factionpassiverepgain/","text":"Home > bitburner > BitNodeMultipliers > FactionPassiveRepGain BitNodeMultipliers.FactionPassiveRepGain property Influences how much rep the player gains in each faction simply by being a member. Signature: FactionPassiveRepGain: number;","title":"Bitburner.bitnodemultipliers.factionpassiverepgain"},{"location":"bitburner.bitnodemultipliers.factionpassiverepgain/#bitnodemultipliersfactionpassiverepgain-property","text":"Influences how much rep the player gains in each faction simply by being a member. Signature: FactionPassiveRepGain: number;","title":"BitNodeMultipliers.FactionPassiveRepGain property"},{"location":"bitburner.bitnodemultipliers.factionworkexpgain/","text":"Home > bitburner > BitNodeMultipliers > FactionWorkExpGain BitNodeMultipliers.FactionWorkExpGain property Influences the experience gained for each ability when the player completes work for a Faction. Signature: FactionWorkExpGain: number;","title":"Bitburner.bitnodemultipliers.factionworkexpgain"},{"location":"bitburner.bitnodemultipliers.factionworkexpgain/#bitnodemultipliersfactionworkexpgain-property","text":"Influences the experience gained for each ability when the player completes work for a Faction. Signature: FactionWorkExpGain: number;","title":"BitNodeMultipliers.FactionWorkExpGain property"},{"location":"bitburner.bitnodemultipliers.factionworkrepgain/","text":"Home > bitburner > BitNodeMultipliers > FactionWorkRepGain BitNodeMultipliers.FactionWorkRepGain property Influences how much rep the player gains when performing work for a faction. Signature: FactionWorkRepGain: number;","title":"Bitburner.bitnodemultipliers.factionworkrepgain"},{"location":"bitburner.bitnodemultipliers.factionworkrepgain/#bitnodemultipliersfactionworkrepgain-property","text":"Influences how much rep the player gains when performing work for a faction. Signature: FactionWorkRepGain: number;","title":"BitNodeMultipliers.FactionWorkRepGain property"},{"location":"bitburner.bitnodemultipliers.foursigmamarketdataapicost/","text":"Home > bitburner > BitNodeMultipliers > FourSigmaMarketDataApiCost BitNodeMultipliers.FourSigmaMarketDataApiCost property Influences how much it costs to unlock the stock market's 4S Market Data API Signature: FourSigmaMarketDataApiCost: number;","title":"Bitburner.bitnodemultipliers.foursigmamarketdataapicost"},{"location":"bitburner.bitnodemultipliers.foursigmamarketdataapicost/#bitnodemultipliersfoursigmamarketdataapicost-property","text":"Influences how much it costs to unlock the stock market's 4S Market Data API Signature: FourSigmaMarketDataApiCost: number;","title":"BitNodeMultipliers.FourSigmaMarketDataApiCost property"},{"location":"bitburner.bitnodemultipliers.foursigmamarketdatacost/","text":"Home > bitburner > BitNodeMultipliers > FourSigmaMarketDataCost BitNodeMultipliers.FourSigmaMarketDataCost property Influences how much it costs to unlock the stock market's 4S Market Data (NOT API) Signature: FourSigmaMarketDataCost: number;","title":"Bitburner.bitnodemultipliers.foursigmamarketdatacost"},{"location":"bitburner.bitnodemultipliers.foursigmamarketdatacost/#bitnodemultipliersfoursigmamarketdatacost-property","text":"Influences how much it costs to unlock the stock market's 4S Market Data (NOT API) Signature: FourSigmaMarketDataCost: number;","title":"BitNodeMultipliers.FourSigmaMarketDataCost property"},{"location":"bitburner.bitnodemultipliers.gangsoftcap/","text":"Home > bitburner > BitNodeMultipliers > GangSoftcap BitNodeMultipliers.GangSoftcap property Influences the respect gain and money gain of your gang. Signature: GangSoftcap: number;","title":"Bitburner.bitnodemultipliers.gangsoftcap"},{"location":"bitburner.bitnodemultipliers.gangsoftcap/#bitnodemultipliersgangsoftcap-property","text":"Influences the respect gain and money gain of your gang. Signature: GangSoftcap: number;","title":"BitNodeMultipliers.GangSoftcap property"},{"location":"bitburner.bitnodemultipliers.hackexpgain/","text":"Home > bitburner > BitNodeMultipliers > HackExpGain BitNodeMultipliers.HackExpGain property Influences the experienced gained when hacking a server. Signature: HackExpGain: number;","title":"Bitburner.bitnodemultipliers.hackexpgain"},{"location":"bitburner.bitnodemultipliers.hackexpgain/#bitnodemultipliershackexpgain-property","text":"Influences the experienced gained when hacking a server. Signature: HackExpGain: number;","title":"BitNodeMultipliers.HackExpGain property"},{"location":"bitburner.bitnodemultipliers.hackinglevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > HackingLevelMultiplier BitNodeMultipliers.HackingLevelMultiplier property Influences how quickly the player's hacking level (not experience) scales Signature: HackingLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.hackinglevelmultiplier"},{"location":"bitburner.bitnodemultipliers.hackinglevelmultiplier/#bitnodemultipliershackinglevelmultiplier-property","text":"Influences how quickly the player's hacking level (not experience) scales Signature: HackingLevelMultiplier: number;","title":"BitNodeMultipliers.HackingLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.hacknetnodemoney/","text":"Home > bitburner > BitNodeMultipliers > HacknetNodeMoney BitNodeMultipliers.HacknetNodeMoney property Influences how much money is produced by Hacknet Nodes and the hash rate of Hacknet Servers (unlocked in BitNode-9) Signature: HacknetNodeMoney: number;","title":"Bitburner.bitnodemultipliers.hacknetnodemoney"},{"location":"bitburner.bitnodemultipliers.hacknetnodemoney/#bitnodemultipliershacknetnodemoney-property","text":"Influences how much money is produced by Hacknet Nodes and the hash rate of Hacknet Servers (unlocked in BitNode-9) Signature: HacknetNodeMoney: number;","title":"BitNodeMultipliers.HacknetNodeMoney property"},{"location":"bitburner.bitnodemultipliers.homecomputerramcost/","text":"Home > bitburner > BitNodeMultipliers > HomeComputerRamCost BitNodeMultipliers.HomeComputerRamCost property Influences how much money it costs to upgrade your home computer's RAM Signature: HomeComputerRamCost: number;","title":"Bitburner.bitnodemultipliers.homecomputerramcost"},{"location":"bitburner.bitnodemultipliers.homecomputerramcost/#bitnodemultipliershomecomputerramcost-property","text":"Influences how much money it costs to upgrade your home computer's RAM Signature: HomeComputerRamCost: number;","title":"BitNodeMultipliers.HomeComputerRamCost property"},{"location":"bitburner.bitnodemultipliers.infiltrationmoney/","text":"Home > bitburner > BitNodeMultipliers > InfiltrationMoney BitNodeMultipliers.InfiltrationMoney property Influences how much money is gained when the player infiltrates a company. Signature: InfiltrationMoney: number;","title":"Bitburner.bitnodemultipliers.infiltrationmoney"},{"location":"bitburner.bitnodemultipliers.infiltrationmoney/#bitnodemultipliersinfiltrationmoney-property","text":"Influences how much money is gained when the player infiltrates a company. Signature: InfiltrationMoney: number;","title":"BitNodeMultipliers.InfiltrationMoney property"},{"location":"bitburner.bitnodemultipliers.infiltrationrep/","text":"Home > bitburner > BitNodeMultipliers > InfiltrationRep BitNodeMultipliers.InfiltrationRep property Influences how much rep the player can gain from factions when selling stolen documents and secrets Signature: InfiltrationRep: number;","title":"Bitburner.bitnodemultipliers.infiltrationrep"},{"location":"bitburner.bitnodemultipliers.infiltrationrep/#bitnodemultipliersinfiltrationrep-property","text":"Influences how much rep the player can gain from factions when selling stolen documents and secrets Signature: InfiltrationRep: number;","title":"BitNodeMultipliers.InfiltrationRep property"},{"location":"bitburner.bitnodemultipliers.manualhackmoney/","text":"Home > bitburner > BitNodeMultipliers > ManualHackMoney BitNodeMultipliers.ManualHackMoney property Influences how much money can be stolen from a server when the player performs a hack against it through the Terminal. Signature: ManualHackMoney: number;","title":"Bitburner.bitnodemultipliers.manualhackmoney"},{"location":"bitburner.bitnodemultipliers.manualhackmoney/#bitnodemultipliersmanualhackmoney-property","text":"Influences how much money can be stolen from a server when the player performs a hack against it through the Terminal. Signature: ManualHackMoney: number;","title":"BitNodeMultipliers.ManualHackMoney property"},{"location":"bitburner.bitnodemultipliers/","text":"Home > bitburner > BitNodeMultipliers BitNodeMultipliers interface All multipliers affecting the difficulty of the current challenge. Signature: export interface BitNodeMultipliers Properties Property Type Description AgilityLevelMultiplier number Influences how quickly the player's agility level (not exp) scales AugmentationMoneyCost number Influences the base cost to purchase an augmentation. AugmentationRepCost number Influences the base rep the player must have with a faction to purchase an augmentation. BladeburnerRank number Influences how quickly the player can gain rank within Bladeburner. BladeburnerSkillCost number Influences the cost of skill levels from Bladeburner. CharismaLevelMultiplier number Influences how quickly the player's charisma level (not exp) scales ClassGymExpGain number Influences the experience gained for each ability when a player completes a class. CodingContractMoney number Influences the amount of money gained from completing Coding Contracts CompanyWorkExpGain number Influences the experience gained for each ability when the player completes working their job. CompanyWorkMoney number Influences how much money the player earns when completing working their job. CorporationSoftcap number Influences the money gain from dividends of corporations created by the player. CorporationValuation number Influences the valuation of corporations created by the player. CrimeExpGain number Influences the base experience gained for each ability when the player commits a crime. CrimeMoney number Influences the base money gained when the player commits a crime. DaedalusAugsRequirement number Influences how many Augmentations you need in order to get invited to the Daedalus faction DefenseLevelMultiplier number Influences how quickly the player's defense level (not exp) scales DexterityLevelMultiplier number Influences how quickly the player's dexterity level (not exp) scales FactionPassiveRepGain number Influences how much rep the player gains in each faction simply by being a member. FactionWorkExpGain number Influences the experience gained for each ability when the player completes work for a Faction. FactionWorkRepGain number Influences how much rep the player gains when performing work for a faction. FourSigmaMarketDataApiCost number Influences how much it costs to unlock the stock market's 4S Market Data API FourSigmaMarketDataCost number Influences how much it costs to unlock the stock market's 4S Market Data (NOT API) GangSoftcap number Influences the respect gain and money gain of your gang. HackExpGain number Influences the experienced gained when hacking a server. HackingLevelMultiplier number Influences how quickly the player's hacking level (not experience) scales HacknetNodeMoney number Influences how much money is produced by Hacknet Nodes and the hash rate of Hacknet Servers (unlocked in BitNode-9) HomeComputerRamCost number Influences how much money it costs to upgrade your home computer's RAM InfiltrationMoney number Influences how much money is gained when the player infiltrates a company. InfiltrationRep number Influences how much rep the player can gain from factions when selling stolen documents and secrets ManualHackMoney number Influences how much money can be stolen from a server when the player performs a hack against it through the Terminal. PurchasedServerCost number Influence how much it costs to purchase a server PurchasedServerLimit number Influences the maximum number of purchased servers you can have PurchasedServerMaxRam number Influences the maximum allowed RAM for a purchased server PurchasedServerSoftcap number Influences cost of any purchased server at or above 128GB RepToDonateToFaction number Influences the minimum favor the player must have with a faction before they can donate to gain rep. ScriptHackMoney number Influences how much the money on a server can be reduced when a script performs a hack against it. ScriptHackMoneyGain number Influences how much of the money stolen by a scripted hack will be added to the player's money. ServerGrowthRate number Influences the growth percentage per cycle against a server. ServerMaxMoney number Influences the maximum money that a server can grow to. ServerStartingMoney number Influences the initial money that a server starts with. ServerStartingSecurity number Influences the initial security level (hackDifficulty) of a server. ServerWeakenRate number Influences the weaken amount per invocation against a server. StaneksGiftExtraSize number Influences the size of the gift StaneksGiftPowerMultiplier number Influences the power of the gift StrengthLevelMultiplier number Influences how quickly the player's strength level (not exp) scales WorldDaemonDifficulty number Influences the hacking skill required to backdoor the world daemon.","title":"Bitburner.bitnodemultipliers"},{"location":"bitburner.bitnodemultipliers/#bitnodemultipliers-interface","text":"All multipliers affecting the difficulty of the current challenge. Signature: export interface BitNodeMultipliers","title":"BitNodeMultipliers interface"},{"location":"bitburner.bitnodemultipliers/#properties","text":"Property Type Description AgilityLevelMultiplier number Influences how quickly the player's agility level (not exp) scales AugmentationMoneyCost number Influences the base cost to purchase an augmentation. AugmentationRepCost number Influences the base rep the player must have with a faction to purchase an augmentation. BladeburnerRank number Influences how quickly the player can gain rank within Bladeburner. BladeburnerSkillCost number Influences the cost of skill levels from Bladeburner. CharismaLevelMultiplier number Influences how quickly the player's charisma level (not exp) scales ClassGymExpGain number Influences the experience gained for each ability when a player completes a class. CodingContractMoney number Influences the amount of money gained from completing Coding Contracts CompanyWorkExpGain number Influences the experience gained for each ability when the player completes working their job. CompanyWorkMoney number Influences how much money the player earns when completing working their job. CorporationSoftcap number Influences the money gain from dividends of corporations created by the player. CorporationValuation number Influences the valuation of corporations created by the player. CrimeExpGain number Influences the base experience gained for each ability when the player commits a crime. CrimeMoney number Influences the base money gained when the player commits a crime. DaedalusAugsRequirement number Influences how many Augmentations you need in order to get invited to the Daedalus faction DefenseLevelMultiplier number Influences how quickly the player's defense level (not exp) scales DexterityLevelMultiplier number Influences how quickly the player's dexterity level (not exp) scales FactionPassiveRepGain number Influences how much rep the player gains in each faction simply by being a member. FactionWorkExpGain number Influences the experience gained for each ability when the player completes work for a Faction. FactionWorkRepGain number Influences how much rep the player gains when performing work for a faction. FourSigmaMarketDataApiCost number Influences how much it costs to unlock the stock market's 4S Market Data API FourSigmaMarketDataCost number Influences how much it costs to unlock the stock market's 4S Market Data (NOT API) GangSoftcap number Influences the respect gain and money gain of your gang. HackExpGain number Influences the experienced gained when hacking a server. HackingLevelMultiplier number Influences how quickly the player's hacking level (not experience) scales HacknetNodeMoney number Influences how much money is produced by Hacknet Nodes and the hash rate of Hacknet Servers (unlocked in BitNode-9) HomeComputerRamCost number Influences how much money it costs to upgrade your home computer's RAM InfiltrationMoney number Influences how much money is gained when the player infiltrates a company. InfiltrationRep number Influences how much rep the player can gain from factions when selling stolen documents and secrets ManualHackMoney number Influences how much money can be stolen from a server when the player performs a hack against it through the Terminal. PurchasedServerCost number Influence how much it costs to purchase a server PurchasedServerLimit number Influences the maximum number of purchased servers you can have PurchasedServerMaxRam number Influences the maximum allowed RAM for a purchased server PurchasedServerSoftcap number Influences cost of any purchased server at or above 128GB RepToDonateToFaction number Influences the minimum favor the player must have with a faction before they can donate to gain rep. ScriptHackMoney number Influences how much the money on a server can be reduced when a script performs a hack against it. ScriptHackMoneyGain number Influences how much of the money stolen by a scripted hack will be added to the player's money. ServerGrowthRate number Influences the growth percentage per cycle against a server. ServerMaxMoney number Influences the maximum money that a server can grow to. ServerStartingMoney number Influences the initial money that a server starts with. ServerStartingSecurity number Influences the initial security level (hackDifficulty) of a server. ServerWeakenRate number Influences the weaken amount per invocation against a server. StaneksGiftExtraSize number Influences the size of the gift StaneksGiftPowerMultiplier number Influences the power of the gift StrengthLevelMultiplier number Influences how quickly the player's strength level (not exp) scales WorldDaemonDifficulty number Influences the hacking skill required to backdoor the world daemon.","title":"Properties"},{"location":"bitburner.bitnodemultipliers.purchasedservercost/","text":"Home > bitburner > BitNodeMultipliers > PurchasedServerCost BitNodeMultipliers.PurchasedServerCost property Influence how much it costs to purchase a server Signature: PurchasedServerCost: number;","title":"Bitburner.bitnodemultipliers.purchasedservercost"},{"location":"bitburner.bitnodemultipliers.purchasedservercost/#bitnodemultiplierspurchasedservercost-property","text":"Influence how much it costs to purchase a server Signature: PurchasedServerCost: number;","title":"BitNodeMultipliers.PurchasedServerCost property"},{"location":"bitburner.bitnodemultipliers.purchasedserverlimit/","text":"Home > bitburner > BitNodeMultipliers > PurchasedServerLimit BitNodeMultipliers.PurchasedServerLimit property Influences the maximum number of purchased servers you can have Signature: PurchasedServerLimit: number;","title":"Bitburner.bitnodemultipliers.purchasedserverlimit"},{"location":"bitburner.bitnodemultipliers.purchasedserverlimit/#bitnodemultiplierspurchasedserverlimit-property","text":"Influences the maximum number of purchased servers you can have Signature: PurchasedServerLimit: number;","title":"BitNodeMultipliers.PurchasedServerLimit property"},{"location":"bitburner.bitnodemultipliers.purchasedservermaxram/","text":"Home > bitburner > BitNodeMultipliers > PurchasedServerMaxRam BitNodeMultipliers.PurchasedServerMaxRam property Influences the maximum allowed RAM for a purchased server Signature: PurchasedServerMaxRam: number;","title":"Bitburner.bitnodemultipliers.purchasedservermaxram"},{"location":"bitburner.bitnodemultipliers.purchasedservermaxram/#bitnodemultiplierspurchasedservermaxram-property","text":"Influences the maximum allowed RAM for a purchased server Signature: PurchasedServerMaxRam: number;","title":"BitNodeMultipliers.PurchasedServerMaxRam property"},{"location":"bitburner.bitnodemultipliers.purchasedserversoftcap/","text":"Home > bitburner > BitNodeMultipliers > PurchasedServerSoftcap BitNodeMultipliers.PurchasedServerSoftcap property Influences cost of any purchased server at or above 128GB Signature: PurchasedServerSoftcap: number;","title":"Bitburner.bitnodemultipliers.purchasedserversoftcap"},{"location":"bitburner.bitnodemultipliers.purchasedserversoftcap/#bitnodemultiplierspurchasedserversoftcap-property","text":"Influences cost of any purchased server at or above 128GB Signature: PurchasedServerSoftcap: number;","title":"BitNodeMultipliers.PurchasedServerSoftcap property"},{"location":"bitburner.bitnodemultipliers.reptodonatetofaction/","text":"Home > bitburner > BitNodeMultipliers > RepToDonateToFaction BitNodeMultipliers.RepToDonateToFaction property Influences the minimum favor the player must have with a faction before they can donate to gain rep. Signature: RepToDonateToFaction: number;","title":"Bitburner.bitnodemultipliers.reptodonatetofaction"},{"location":"bitburner.bitnodemultipliers.reptodonatetofaction/#bitnodemultipliersreptodonatetofaction-property","text":"Influences the minimum favor the player must have with a faction before they can donate to gain rep. Signature: RepToDonateToFaction: number;","title":"BitNodeMultipliers.RepToDonateToFaction property"},{"location":"bitburner.bitnodemultipliers.scripthackmoney/","text":"Home > bitburner > BitNodeMultipliers > ScriptHackMoney BitNodeMultipliers.ScriptHackMoney property Influences how much the money on a server can be reduced when a script performs a hack against it. Signature: ScriptHackMoney: number;","title":"Bitburner.bitnodemultipliers.scripthackmoney"},{"location":"bitburner.bitnodemultipliers.scripthackmoney/#bitnodemultipliersscripthackmoney-property","text":"Influences how much the money on a server can be reduced when a script performs a hack against it. Signature: ScriptHackMoney: number;","title":"BitNodeMultipliers.ScriptHackMoney property"},{"location":"bitburner.bitnodemultipliers.scripthackmoneygain/","text":"Home > bitburner > BitNodeMultipliers > ScriptHackMoneyGain BitNodeMultipliers.ScriptHackMoneyGain property Influences how much of the money stolen by a scripted hack will be added to the player's money. Signature: ScriptHackMoneyGain: number;","title":"Bitburner.bitnodemultipliers.scripthackmoneygain"},{"location":"bitburner.bitnodemultipliers.scripthackmoneygain/#bitnodemultipliersscripthackmoneygain-property","text":"Influences how much of the money stolen by a scripted hack will be added to the player's money. Signature: ScriptHackMoneyGain: number;","title":"BitNodeMultipliers.ScriptHackMoneyGain property"},{"location":"bitburner.bitnodemultipliers.servergrowthrate/","text":"Home > bitburner > BitNodeMultipliers > ServerGrowthRate BitNodeMultipliers.ServerGrowthRate property Influences the growth percentage per cycle against a server. Signature: ServerGrowthRate: number;","title":"Bitburner.bitnodemultipliers.servergrowthrate"},{"location":"bitburner.bitnodemultipliers.servergrowthrate/#bitnodemultipliersservergrowthrate-property","text":"Influences the growth percentage per cycle against a server. Signature: ServerGrowthRate: number;","title":"BitNodeMultipliers.ServerGrowthRate property"},{"location":"bitburner.bitnodemultipliers.servermaxmoney/","text":"Home > bitburner > BitNodeMultipliers > ServerMaxMoney BitNodeMultipliers.ServerMaxMoney property Influences the maximum money that a server can grow to. Signature: ServerMaxMoney: number;","title":"Bitburner.bitnodemultipliers.servermaxmoney"},{"location":"bitburner.bitnodemultipliers.servermaxmoney/#bitnodemultipliersservermaxmoney-property","text":"Influences the maximum money that a server can grow to. Signature: ServerMaxMoney: number;","title":"BitNodeMultipliers.ServerMaxMoney property"},{"location":"bitburner.bitnodemultipliers.serverstartingmoney/","text":"Home > bitburner > BitNodeMultipliers > ServerStartingMoney BitNodeMultipliers.ServerStartingMoney property Influences the initial money that a server starts with. Signature: ServerStartingMoney: number;","title":"Bitburner.bitnodemultipliers.serverstartingmoney"},{"location":"bitburner.bitnodemultipliers.serverstartingmoney/#bitnodemultipliersserverstartingmoney-property","text":"Influences the initial money that a server starts with. Signature: ServerStartingMoney: number;","title":"BitNodeMultipliers.ServerStartingMoney property"},{"location":"bitburner.bitnodemultipliers.serverstartingsecurity/","text":"Home > bitburner > BitNodeMultipliers > ServerStartingSecurity BitNodeMultipliers.ServerStartingSecurity property Influences the initial security level (hackDifficulty) of a server. Signature: ServerStartingSecurity: number;","title":"Bitburner.bitnodemultipliers.serverstartingsecurity"},{"location":"bitburner.bitnodemultipliers.serverstartingsecurity/#bitnodemultipliersserverstartingsecurity-property","text":"Influences the initial security level (hackDifficulty) of a server. Signature: ServerStartingSecurity: number;","title":"BitNodeMultipliers.ServerStartingSecurity property"},{"location":"bitburner.bitnodemultipliers.serverweakenrate/","text":"Home > bitburner > BitNodeMultipliers > ServerWeakenRate BitNodeMultipliers.ServerWeakenRate property Influences the weaken amount per invocation against a server. Signature: ServerWeakenRate: number;","title":"Bitburner.bitnodemultipliers.serverweakenrate"},{"location":"bitburner.bitnodemultipliers.serverweakenrate/#bitnodemultipliersserverweakenrate-property","text":"Influences the weaken amount per invocation against a server. Signature: ServerWeakenRate: number;","title":"BitNodeMultipliers.ServerWeakenRate property"},{"location":"bitburner.bitnodemultipliers.staneksgiftextrasize/","text":"Home > bitburner > BitNodeMultipliers > StaneksGiftExtraSize BitNodeMultipliers.StaneksGiftExtraSize property Influences the size of the gift Signature: StaneksGiftExtraSize: number;","title":"Bitburner.bitnodemultipliers.staneksgiftextrasize"},{"location":"bitburner.bitnodemultipliers.staneksgiftextrasize/#bitnodemultipliersstaneksgiftextrasize-property","text":"Influences the size of the gift Signature: StaneksGiftExtraSize: number;","title":"BitNodeMultipliers.StaneksGiftExtraSize property"},{"location":"bitburner.bitnodemultipliers.staneksgiftpowermultiplier/","text":"Home > bitburner > BitNodeMultipliers > StaneksGiftPowerMultiplier BitNodeMultipliers.StaneksGiftPowerMultiplier property Influences the power of the gift Signature: StaneksGiftPowerMultiplier: number;","title":"Bitburner.bitnodemultipliers.staneksgiftpowermultiplier"},{"location":"bitburner.bitnodemultipliers.staneksgiftpowermultiplier/#bitnodemultipliersstaneksgiftpowermultiplier-property","text":"Influences the power of the gift Signature: StaneksGiftPowerMultiplier: number;","title":"BitNodeMultipliers.StaneksGiftPowerMultiplier property"},{"location":"bitburner.bitnodemultipliers.strengthlevelmultiplier/","text":"Home > bitburner > BitNodeMultipliers > StrengthLevelMultiplier BitNodeMultipliers.StrengthLevelMultiplier property Influences how quickly the player's strength level (not exp) scales Signature: StrengthLevelMultiplier: number;","title":"Bitburner.bitnodemultipliers.strengthlevelmultiplier"},{"location":"bitburner.bitnodemultipliers.strengthlevelmultiplier/#bitnodemultipliersstrengthlevelmultiplier-property","text":"Influences how quickly the player's strength level (not exp) scales Signature: StrengthLevelMultiplier: number;","title":"BitNodeMultipliers.StrengthLevelMultiplier property"},{"location":"bitburner.bitnodemultipliers.worlddaemondifficulty/","text":"Home > bitburner > BitNodeMultipliers > WorldDaemonDifficulty BitNodeMultipliers.WorldDaemonDifficulty property Influences the hacking skill required to backdoor the world daemon. Signature: WorldDaemonDifficulty: number;","title":"Bitburner.bitnodemultipliers.worlddaemondifficulty"},{"location":"bitburner.bitnodemultipliers.worlddaemondifficulty/#bitnodemultipliersworlddaemondifficulty-property","text":"Influences the hacking skill required to backdoor the world daemon. Signature: WorldDaemonDifficulty: number;","title":"BitNodeMultipliers.WorldDaemonDifficulty property"},{"location":"bitburner.bladeburner.getactionautolevel/","text":"Home > bitburner > Bladeburner > getActionAutolevel Bladeburner.getActionAutolevel() method Get whether an action is set to autolevel. Signature: getActionAutolevel(type: string, name: string): boolean; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: boolean True if the action is set to autolevel, and false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not this action is currently set to autolevel. Returns false if an invalid action is specified.","title":"Bitburner.bladeburner.getactionautolevel"},{"location":"bitburner.bladeburner.getactionautolevel/#bladeburnergetactionautolevel-method","text":"Get whether an action is set to autolevel. Signature: getActionAutolevel(type: string, name: string): boolean;","title":"Bladeburner.getActionAutolevel() method"},{"location":"bitburner.bladeburner.getactionautolevel/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: boolean True if the action is set to autolevel, and false otherwise.","title":"Parameters"},{"location":"bitburner.bladeburner.getactionautolevel/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not this action is currently set to autolevel. Returns false if an invalid action is specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getactioncountremaining/","text":"Home > bitburner > Bladeburner > getActionCountRemaining Bladeburner.getActionCountRemaining() method Get action count remaining. Signature: getActionCountRemaining(type: string, name: string): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Remaining count of the specified action. Remarks RAM cost: 4 GB Returns the remaining count of the specified action. Note that this is meant to be used for Contracts and Operations. This function will return \u2018Infinity\u2019 for actions such as Training and Field Analysis. This function will return 1 for BlackOps not yet completed regardless of whether the player has the required rank to attempt the mission or not.","title":"Bitburner.bladeburner.getactioncountremaining"},{"location":"bitburner.bladeburner.getactioncountremaining/#bladeburnergetactioncountremaining-method","text":"Get action count remaining. Signature: getActionCountRemaining(type: string, name: string): number;","title":"Bladeburner.getActionCountRemaining() method"},{"location":"bitburner.bladeburner.getactioncountremaining/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Remaining count of the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactioncountremaining/#remarks","text":"RAM cost: 4 GB Returns the remaining count of the specified action. Note that this is meant to be used for Contracts and Operations. This function will return \u2018Infinity\u2019 for actions such as Training and Field Analysis. This function will return 1 for BlackOps not yet completed regardless of whether the player has the required rank to attempt the mission or not.","title":"Remarks"},{"location":"bitburner.bladeburner.getactioncurrentlevel/","text":"Home > bitburner > Bladeburner > getActionCurrentLevel Bladeburner.getActionCurrentLevel() method Get the current level of an action. Signature: getActionCurrentLevel(type: string, name: string): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Current level of the specified action. Remarks RAM cost: 4 GB Returns the current level of this action. Returns -1 if an invalid action is specified.","title":"Bitburner.bladeburner.getactioncurrentlevel"},{"location":"bitburner.bladeburner.getactioncurrentlevel/#bladeburnergetactioncurrentlevel-method","text":"Get the current level of an action. Signature: getActionCurrentLevel(type: string, name: string): number;","title":"Bladeburner.getActionCurrentLevel() method"},{"location":"bitburner.bladeburner.getactioncurrentlevel/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Current level of the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactioncurrentlevel/#remarks","text":"RAM cost: 4 GB Returns the current level of this action. Returns -1 if an invalid action is specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getactioncurrenttime/","text":"Home > bitburner > Bladeburner > getActionCurrentTime Bladeburner.getActionCurrentTime() method Get the time elapsed on current action. Signature: getActionCurrentTime(): number; Returns: number Number of milliseconds already spent on the current action. Remarks RAM cost: 4 GB Returns the number of milliseconds already spent on the current action.","title":"Bitburner.bladeburner.getactioncurrenttime"},{"location":"bitburner.bladeburner.getactioncurrenttime/#bladeburnergetactioncurrenttime-method","text":"Get the time elapsed on current action. Signature: getActionCurrentTime(): number; Returns: number Number of milliseconds already spent on the current action.","title":"Bladeburner.getActionCurrentTime() method"},{"location":"bitburner.bladeburner.getactioncurrenttime/#remarks","text":"RAM cost: 4 GB Returns the number of milliseconds already spent on the current action.","title":"Remarks"},{"location":"bitburner.bladeburner.getactionestimatedsuccesschance/","text":"Home > bitburner > Bladeburner > getActionEstimatedSuccessChance Bladeburner.getActionEstimatedSuccessChance() method Get estimate success chance of an action. Signature: getActionEstimatedSuccessChance(type: string, name: string): [number, number]; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: [number, number] Estimated success chance for the specified action. Remarks RAM cost: 4 GB Returns the estimated success chance for the specified action. This chance is returned as a decimal value, NOT a percentage (e.g. if you have an estimated success chance of 80%, then this function will return 0.80, NOT 80).","title":"Bitburner.bladeburner.getactionestimatedsuccesschance"},{"location":"bitburner.bladeburner.getactionestimatedsuccesschance/#bladeburnergetactionestimatedsuccesschance-method","text":"Get estimate success chance of an action. Signature: getActionEstimatedSuccessChance(type: string, name: string): [number, number];","title":"Bladeburner.getActionEstimatedSuccessChance() method"},{"location":"bitburner.bladeburner.getactionestimatedsuccesschance/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: [number, number] Estimated success chance for the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactionestimatedsuccesschance/#remarks","text":"RAM cost: 4 GB Returns the estimated success chance for the specified action. This chance is returned as a decimal value, NOT a percentage (e.g. if you have an estimated success chance of 80%, then this function will return 0.80, NOT 80).","title":"Remarks"},{"location":"bitburner.bladeburner.getactionmaxlevel/","text":"Home > bitburner > Bladeburner > getActionMaxLevel Bladeburner.getActionMaxLevel() method Get the maximum level of an action. Signature: getActionMaxLevel(type: string, name: string): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Maximum level of the specified action. Remarks RAM cost: 4 GB Returns the maximum level for this action. Returns -1 if an invalid action is specified.","title":"Bitburner.bladeburner.getactionmaxlevel"},{"location":"bitburner.bladeburner.getactionmaxlevel/#bladeburnergetactionmaxlevel-method","text":"Get the maximum level of an action. Signature: getActionMaxLevel(type: string, name: string): number;","title":"Bladeburner.getActionMaxLevel() method"},{"location":"bitburner.bladeburner.getactionmaxlevel/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Maximum level of the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactionmaxlevel/#remarks","text":"RAM cost: 4 GB Returns the maximum level for this action. Returns -1 if an invalid action is specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getactionrepgain/","text":"Home > bitburner > Bladeburner > getActionRepGain Bladeburner.getActionRepGain() method Get the reputation gain of an action. Signature: getActionRepGain(type: string, name: string, level: number): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. level number Optional action level at which to calculate the gain Returns: number Average Bladeburner reputation gain for successfully completing the specified action. Remarks RAM cost: 4 GB Returns the average Bladeburner reputation gain for successfully completing the specified action. Note that this value is an \u2018average\u2019 and the real reputation gain may vary slightly from this value.","title":"Bitburner.bladeburner.getactionrepgain"},{"location":"bitburner.bladeburner.getactionrepgain/#bladeburnergetactionrepgain-method","text":"Get the reputation gain of an action. Signature: getActionRepGain(type: string, name: string, level: number): number;","title":"Bladeburner.getActionRepGain() method"},{"location":"bitburner.bladeburner.getactionrepgain/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. level number Optional action level at which to calculate the gain Returns: number Average Bladeburner reputation gain for successfully completing the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactionrepgain/#remarks","text":"RAM cost: 4 GB Returns the average Bladeburner reputation gain for successfully completing the specified action. Note that this value is an \u2018average\u2019 and the real reputation gain may vary slightly from this value.","title":"Remarks"},{"location":"bitburner.bladeburner.getactiontime/","text":"Home > bitburner > Bladeburner > getActionTime Bladeburner.getActionTime() method Get the time to complete an action. Signature: getActionTime(type: string, name: string): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Number of milliseconds it takes to complete the specified action. Remarks RAM cost: 4 GB Returns the number of milliseconds it takes to complete the specified action","title":"Bitburner.bladeburner.getactiontime"},{"location":"bitburner.bladeburner.getactiontime/#bladeburnergetactiontime-method","text":"Get the time to complete an action. Signature: getActionTime(type: string, name: string): number;","title":"Bladeburner.getActionTime() method"},{"location":"bitburner.bladeburner.getactiontime/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Number of milliseconds it takes to complete the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getactiontime/#remarks","text":"RAM cost: 4 GB Returns the number of milliseconds it takes to complete the specified action","title":"Remarks"},{"location":"bitburner.bladeburner.getblackopnames/","text":"Home > bitburner > Bladeburner > getBlackOpNames Bladeburner.getBlackOpNames() method List all black ops. Signature: getBlackOpNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner Black Ops. Remarks RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner Black Ops.","title":"Bitburner.bladeburner.getblackopnames"},{"location":"bitburner.bladeburner.getblackopnames/#bladeburnergetblackopnames-method","text":"List all black ops. Signature: getBlackOpNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner Black Ops.","title":"Bladeburner.getBlackOpNames() method"},{"location":"bitburner.bladeburner.getblackopnames/#remarks","text":"RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner Black Ops.","title":"Remarks"},{"location":"bitburner.bladeburner.getblackoprank/","text":"Home > bitburner > Bladeburner > getBlackOpRank Bladeburner.getBlackOpRank() method Get black op required rank. Signature: getBlackOpRank(name: string): number; Parameters Parameter Type Description name string Name of BlackOp. Must be an exact match. Returns: number Rank required to complete this BlackOp. Remarks RAM cost: 2 GB Returns the rank required to complete this BlackOp. Returns -1 if an invalid action is specified.","title":"Bitburner.bladeburner.getblackoprank"},{"location":"bitburner.bladeburner.getblackoprank/#bladeburnergetblackoprank-method","text":"Get black op required rank. Signature: getBlackOpRank(name: string): number;","title":"Bladeburner.getBlackOpRank() method"},{"location":"bitburner.bladeburner.getblackoprank/#parameters","text":"Parameter Type Description name string Name of BlackOp. Must be an exact match. Returns: number Rank required to complete this BlackOp.","title":"Parameters"},{"location":"bitburner.bladeburner.getblackoprank/#remarks","text":"RAM cost: 2 GB Returns the rank required to complete this BlackOp. Returns -1 if an invalid action is specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getbonustime/","text":"Home > bitburner > Bladeburner > getBonusTime Bladeburner.getBonusTime() method Get bladeburner bonus time. Signature: getBonusTime(): number; Returns: number Amount of accumulated \u201cbonus time\u201d (milliseconds) for the Bladeburner mechanic. Remarks RAM cost: 0 GB Returns the amount of accumulated \u201cbonus time\u201d (milliseconds) for the Bladeburner mechanic. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster, up to 5x the normal speed. For example, if an action takes 30 seconds to complete but you\u2019ve accumulated over 30 seconds in bonus time, then the action will only take 6 seconds in real life to complete.","title":"Bitburner.bladeburner.getbonustime"},{"location":"bitburner.bladeburner.getbonustime/#bladeburnergetbonustime-method","text":"Get bladeburner bonus time. Signature: getBonusTime(): number; Returns: number Amount of accumulated \u201cbonus time\u201d (milliseconds) for the Bladeburner mechanic.","title":"Bladeburner.getBonusTime() method"},{"location":"bitburner.bladeburner.getbonustime/#remarks","text":"RAM cost: 0 GB Returns the amount of accumulated \u201cbonus time\u201d (milliseconds) for the Bladeburner mechanic. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster, up to 5x the normal speed. For example, if an action takes 30 seconds to complete but you\u2019ve accumulated over 30 seconds in bonus time, then the action will only take 6 seconds in real life to complete.","title":"Remarks"},{"location":"bitburner.bladeburner.getcity/","text":"Home > bitburner > Bladeburner > getCity Bladeburner.getCity() method Get current city. Signature: getCity(): string; Returns: string City that the player is currently in (for Bladeburner). Remarks RAM cost: 4 GB Returns the city that the player is currently in (for Bladeburner).","title":"Bitburner.bladeburner.getcity"},{"location":"bitburner.bladeburner.getcity/#bladeburnergetcity-method","text":"Get current city. Signature: getCity(): string; Returns: string City that the player is currently in (for Bladeburner).","title":"Bladeburner.getCity() method"},{"location":"bitburner.bladeburner.getcity/#remarks","text":"RAM cost: 4 GB Returns the city that the player is currently in (for Bladeburner).","title":"Remarks"},{"location":"bitburner.bladeburner.getcitychaos/","text":"Home > bitburner > Bladeburner > getCityChaos Bladeburner.getCityChaos() method Get chaos of a city. Signature: getCityChaos(name: string): number; Parameters Parameter Type Description name string Returns: number Chaos in the specified city. Remarks RAM cost: 4 GB Returns the chaos in the specified city, or -1 if an invalid city was specified.","title":"Bitburner.bladeburner.getcitychaos"},{"location":"bitburner.bladeburner.getcitychaos/#bladeburnergetcitychaos-method","text":"Get chaos of a city. Signature: getCityChaos(name: string): number;","title":"Bladeburner.getCityChaos() method"},{"location":"bitburner.bladeburner.getcitychaos/#parameters","text":"Parameter Type Description name string Returns: number Chaos in the specified city.","title":"Parameters"},{"location":"bitburner.bladeburner.getcitychaos/#remarks","text":"RAM cost: 4 GB Returns the chaos in the specified city, or -1 if an invalid city was specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getcitycommunities/","text":"Home > bitburner > Bladeburner > getCityCommunities Bladeburner.getCityCommunities() method Get number of communities in a city. Signature: getCityCommunities(name: string): number; Parameters Parameter Type Description name string Returns: number Number of Synthoids communities in the specified city. Remarks RAM cost: 4 GB Returns the estimated number of Synthoid communities in the specified city, or -1 if an invalid city was specified.","title":"Bitburner.bladeburner.getcitycommunities"},{"location":"bitburner.bladeburner.getcitycommunities/#bladeburnergetcitycommunities-method","text":"Get number of communities in a city. Signature: getCityCommunities(name: string): number;","title":"Bladeburner.getCityCommunities() method"},{"location":"bitburner.bladeburner.getcitycommunities/#parameters","text":"Parameter Type Description name string Returns: number Number of Synthoids communities in the specified city.","title":"Parameters"},{"location":"bitburner.bladeburner.getcitycommunities/#remarks","text":"RAM cost: 4 GB Returns the estimated number of Synthoid communities in the specified city, or -1 if an invalid city was specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getcityestimatedpopulation/","text":"Home > bitburner > Bladeburner > getCityEstimatedPopulation Bladeburner.getCityEstimatedPopulation() method Get estimated population in city. Signature: getCityEstimatedPopulation(name: string): number; Parameters Parameter Type Description name string Returns: number Estimated number of Synthoids in the specified city. Remarks RAM cost: 4 GB Returns the estimated number of Synthoids in the specified city, or -1 if an invalid city was specified.","title":"Bitburner.bladeburner.getcityestimatedpopulation"},{"location":"bitburner.bladeburner.getcityestimatedpopulation/#bladeburnergetcityestimatedpopulation-method","text":"Get estimated population in city. Signature: getCityEstimatedPopulation(name: string): number;","title":"Bladeburner.getCityEstimatedPopulation() method"},{"location":"bitburner.bladeburner.getcityestimatedpopulation/#parameters","text":"Parameter Type Description name string Returns: number Estimated number of Synthoids in the specified city.","title":"Parameters"},{"location":"bitburner.bladeburner.getcityestimatedpopulation/#remarks","text":"RAM cost: 4 GB Returns the estimated number of Synthoids in the specified city, or -1 if an invalid city was specified.","title":"Remarks"},{"location":"bitburner.bladeburner.getcontractnames/","text":"Home > bitburner > Bladeburner > getContractNames Bladeburner.getContractNames() method List all contracts. Signature: getContractNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner contracts. Remarks RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner contracts.","title":"Bitburner.bladeburner.getcontractnames"},{"location":"bitburner.bladeburner.getcontractnames/#bladeburnergetcontractnames-method","text":"List all contracts. Signature: getContractNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner contracts.","title":"Bladeburner.getContractNames() method"},{"location":"bitburner.bladeburner.getcontractnames/#remarks","text":"RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner contracts.","title":"Remarks"},{"location":"bitburner.bladeburner.getcurrentaction/","text":"Home > bitburner > Bladeburner > getCurrentAction Bladeburner.getCurrentAction() method Get current action. Signature: getCurrentAction(): BladeburnerCurAction; Returns: BladeburnerCurAction Object that represents the player\u2019s current Bladeburner action. Remarks RAM cost: 1 GB Returns an object that represents the player\u2019s current Bladeburner action. If the player is not performing an action, the function will return an object with the \u2018type\u2019 property set to \u201cIdle\u201d.","title":"Bitburner.bladeburner.getcurrentaction"},{"location":"bitburner.bladeburner.getcurrentaction/#bladeburnergetcurrentaction-method","text":"Get current action. Signature: getCurrentAction(): BladeburnerCurAction; Returns: BladeburnerCurAction Object that represents the player\u2019s current Bladeburner action.","title":"Bladeburner.getCurrentAction() method"},{"location":"bitburner.bladeburner.getcurrentaction/#remarks","text":"RAM cost: 1 GB Returns an object that represents the player\u2019s current Bladeburner action. If the player is not performing an action, the function will return an object with the \u2018type\u2019 property set to \u201cIdle\u201d.","title":"Remarks"},{"location":"bitburner.bladeburner.getgeneralactionnames/","text":"Home > bitburner > Bladeburner > getGeneralActionNames Bladeburner.getGeneralActionNames() method List all general actions. Signature: getGeneralActionNames(): string[]; Returns: string[] Array of strings containing the names of all general Bladeburner actions. Remarks RAM cost: 0.4 GB Returns an array of strings containing the names of all general Bladeburner actions.","title":"Bitburner.bladeburner.getgeneralactionnames"},{"location":"bitburner.bladeburner.getgeneralactionnames/#bladeburnergetgeneralactionnames-method","text":"List all general actions. Signature: getGeneralActionNames(): string[]; Returns: string[] Array of strings containing the names of all general Bladeburner actions.","title":"Bladeburner.getGeneralActionNames() method"},{"location":"bitburner.bladeburner.getgeneralactionnames/#remarks","text":"RAM cost: 0.4 GB Returns an array of strings containing the names of all general Bladeburner actions.","title":"Remarks"},{"location":"bitburner.bladeburner.getoperationnames/","text":"Home > bitburner > Bladeburner > getOperationNames Bladeburner.getOperationNames() method List all operations. Signature: getOperationNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner operations. Remarks RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner operations.","title":"Bitburner.bladeburner.getoperationnames"},{"location":"bitburner.bladeburner.getoperationnames/#bladeburnergetoperationnames-method","text":"List all operations. Signature: getOperationNames(): string[]; Returns: string[] Array of strings containing the names of all Bladeburner operations.","title":"Bladeburner.getOperationNames() method"},{"location":"bitburner.bladeburner.getoperationnames/#remarks","text":"RAM cost: 0.4 GB Returns an array of strings containing the names of all Bladeburner operations.","title":"Remarks"},{"location":"bitburner.bladeburner.getrank/","text":"Home > bitburner > Bladeburner > getRank Bladeburner.getRank() method Get player bladeburner rank. Signature: getRank(): number; Returns: number Player\u2019s Bladeburner Rank. Remarks RAM cost: 4 GB Returns the player\u2019s Bladeburner Rank.","title":"Bitburner.bladeburner.getrank"},{"location":"bitburner.bladeburner.getrank/#bladeburnergetrank-method","text":"Get player bladeburner rank. Signature: getRank(): number; Returns: number Player\u2019s Bladeburner Rank.","title":"Bladeburner.getRank() method"},{"location":"bitburner.bladeburner.getrank/#remarks","text":"RAM cost: 4 GB Returns the player\u2019s Bladeburner Rank.","title":"Remarks"},{"location":"bitburner.bladeburner.getskilllevel/","text":"Home > bitburner > Bladeburner > getSkillLevel Bladeburner.getSkillLevel() method Get skill level. Signature: getSkillLevel(name: string): number; Parameters Parameter Type Description name string Returns: number Level in the specified skill. Remarks RAM cost: 4 GB This function returns your level in the specified skill. The function returns -1 if an invalid skill name is passed in.","title":"Bitburner.bladeburner.getskilllevel"},{"location":"bitburner.bladeburner.getskilllevel/#bladeburnergetskilllevel-method","text":"Get skill level. Signature: getSkillLevel(name: string): number;","title":"Bladeburner.getSkillLevel() method"},{"location":"bitburner.bladeburner.getskilllevel/#parameters","text":"Parameter Type Description name string Returns: number Level in the specified skill.","title":"Parameters"},{"location":"bitburner.bladeburner.getskilllevel/#remarks","text":"RAM cost: 4 GB This function returns your level in the specified skill. The function returns -1 if an invalid skill name is passed in.","title":"Remarks"},{"location":"bitburner.bladeburner.getskillnames/","text":"Home > bitburner > Bladeburner > getSkillNames Bladeburner.getSkillNames() method List all skills. Signature: getSkillNames(): string[]; Returns: string[] Array of strings containing the names of all general Bladeburner skills. Remarks RAM cost: 0.4 GB Returns an array of strings containing the names of all general Bladeburner skills.","title":"Bitburner.bladeburner.getskillnames"},{"location":"bitburner.bladeburner.getskillnames/#bladeburnergetskillnames-method","text":"List all skills. Signature: getSkillNames(): string[]; Returns: string[] Array of strings containing the names of all general Bladeburner skills.","title":"Bladeburner.getSkillNames() method"},{"location":"bitburner.bladeburner.getskillnames/#remarks","text":"RAM cost: 0.4 GB Returns an array of strings containing the names of all general Bladeburner skills.","title":"Remarks"},{"location":"bitburner.bladeburner.getskillpoints/","text":"Home > bitburner > Bladeburner > getSkillPoints Bladeburner.getSkillPoints() method Get bladeburner skill points. Signature: getSkillPoints(): number; Returns: number Number of Bladeburner skill points you have. Remarks RAM cost: 4 GB Returns the number of Bladeburner skill points you have.","title":"Bitburner.bladeburner.getskillpoints"},{"location":"bitburner.bladeburner.getskillpoints/#bladeburnergetskillpoints-method","text":"Get bladeburner skill points. Signature: getSkillPoints(): number; Returns: number Number of Bladeburner skill points you have.","title":"Bladeburner.getSkillPoints() method"},{"location":"bitburner.bladeburner.getskillpoints/#remarks","text":"RAM cost: 4 GB Returns the number of Bladeburner skill points you have.","title":"Remarks"},{"location":"bitburner.bladeburner.getskillupgradecost/","text":"Home > bitburner > Bladeburner > getSkillUpgradeCost Bladeburner.getSkillUpgradeCost() method Get cost to upgrade skill. Signature: getSkillUpgradeCost(name: string, count?: number): number; Parameters Parameter Type Description name string count number Number of times to upgrade the skill. Defaults to 1 if not specified. Returns: number Number of skill points needed to upgrade the specified skill. Remarks RAM cost: 4 GB This function returns the number of skill points needed to upgrade the specified skill the specified number of times. The function returns -1 if an invalid skill name is passed in.","title":"Bitburner.bladeburner.getskillupgradecost"},{"location":"bitburner.bladeburner.getskillupgradecost/#bladeburnergetskillupgradecost-method","text":"Get cost to upgrade skill. Signature: getSkillUpgradeCost(name: string, count?: number): number;","title":"Bladeburner.getSkillUpgradeCost() method"},{"location":"bitburner.bladeburner.getskillupgradecost/#parameters","text":"Parameter Type Description name string count number Number of times to upgrade the skill. Defaults to 1 if not specified. Returns: number Number of skill points needed to upgrade the specified skill.","title":"Parameters"},{"location":"bitburner.bladeburner.getskillupgradecost/#remarks","text":"RAM cost: 4 GB This function returns the number of skill points needed to upgrade the specified skill the specified number of times. The function returns -1 if an invalid skill name is passed in.","title":"Remarks"},{"location":"bitburner.bladeburner.getstamina/","text":"Home > bitburner > Bladeburner > getStamina Bladeburner.getStamina() method Get bladeburner stamina. Signature: getStamina(): [number, number]; Returns: [number, number] Array containing current stamina and max stamina. Remarks RAM cost: 4 GB Returns an array with two elements: * [Current stamina, Max stamina] Example 1 // NS1: function getStaminaPercentage() { var res = bladeburner.getStamina(); return res[0] / res[1]; } Example 2 // NS2: function getStaminaPercentage() { const [current, max] = ns.bladeburner.getStamina(); return current / max; }","title":"Bitburner.bladeburner.getstamina"},{"location":"bitburner.bladeburner.getstamina/#bladeburnergetstamina-method","text":"Get bladeburner stamina. Signature: getStamina(): [number, number]; Returns: [number, number] Array containing current stamina and max stamina.","title":"Bladeburner.getStamina() method"},{"location":"bitburner.bladeburner.getstamina/#remarks","text":"RAM cost: 4 GB Returns an array with two elements: * [Current stamina, Max stamina]","title":"Remarks"},{"location":"bitburner.bladeburner.getstamina/#example-1","text":"// NS1: function getStaminaPercentage() { var res = bladeburner.getStamina(); return res[0] / res[1]; }","title":"Example 1"},{"location":"bitburner.bladeburner.getstamina/#example-2","text":"// NS2: function getStaminaPercentage() { const [current, max] = ns.bladeburner.getStamina(); return current / max; }","title":"Example 2"},{"location":"bitburner.bladeburner.getteamsize/","text":"Home > bitburner > Bladeburner > getTeamSize Bladeburner.getTeamSize() method Get team size. Signature: getTeamSize(type: string, name: string): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Number of Bladeburner team members that were assigned to the specified action. Remarks RAM cost: 4 GB Returns the number of Bladeburner team members you have assigned to the specified action. Setting a team is only applicable for Operations and BlackOps. This function will return 0 for other action types.","title":"Bitburner.bladeburner.getteamsize"},{"location":"bitburner.bladeburner.getteamsize/#bladeburnergetteamsize-method","text":"Get team size. Signature: getTeamSize(type: string, name: string): number;","title":"Bladeburner.getTeamSize() method"},{"location":"bitburner.bladeburner.getteamsize/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. Returns: number Number of Bladeburner team members that were assigned to the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.getteamsize/#remarks","text":"RAM cost: 4 GB Returns the number of Bladeburner team members you have assigned to the specified action. Setting a team is only applicable for Operations and BlackOps. This function will return 0 for other action types.","title":"Remarks"},{"location":"bitburner.bladeburner.joinbladeburnerdivision/","text":"Home > bitburner > Bladeburner > joinBladeburnerDivision Bladeburner.joinBladeburnerDivision() method Join the bladeburner division. Signature: joinBladeburnerDivision(): boolean; Returns: boolean True if you successfully join the Bladeburner division, or if you are already a member, false otherwise. Remarks RAM cost: 4 GB Attempts to join the Bladeburner division. Returns true if you successfully join the Bladeburner division, or if you are already a member. Returns false otherwise.","title":"Bitburner.bladeburner.joinbladeburnerdivision"},{"location":"bitburner.bladeburner.joinbladeburnerdivision/#bladeburnerjoinbladeburnerdivision-method","text":"Join the bladeburner division. Signature: joinBladeburnerDivision(): boolean; Returns: boolean True if you successfully join the Bladeburner division, or if you are already a member, false otherwise.","title":"Bladeburner.joinBladeburnerDivision() method"},{"location":"bitburner.bladeburner.joinbladeburnerdivision/#remarks","text":"RAM cost: 4 GB Attempts to join the Bladeburner division. Returns true if you successfully join the Bladeburner division, or if you are already a member. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.bladeburner.joinbladeburnerfaction/","text":"Home > bitburner > Bladeburner > joinBladeburnerFaction Bladeburner.joinBladeburnerFaction() method Join the bladeburner faction. Signature: joinBladeburnerFaction(): boolean; Returns: boolean True if you successfully join the Bladeburner faction, or if you are already a member, false otherwise. Remarks RAM cost: 4 GB Attempts to join the Bladeburner faction. Returns true if you successfully join the Bladeburner faction, or if you are already a member. Returns false otherwise.","title":"Bitburner.bladeburner.joinbladeburnerfaction"},{"location":"bitburner.bladeburner.joinbladeburnerfaction/#bladeburnerjoinbladeburnerfaction-method","text":"Join the bladeburner faction. Signature: joinBladeburnerFaction(): boolean; Returns: boolean True if you successfully join the Bladeburner faction, or if you are already a member, false otherwise.","title":"Bladeburner.joinBladeburnerFaction() method"},{"location":"bitburner.bladeburner.joinbladeburnerfaction/#remarks","text":"RAM cost: 4 GB Attempts to join the Bladeburner faction. Returns true if you successfully join the Bladeburner faction, or if you are already a member. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.bladeburner/","text":"Home > bitburner > Bladeburner Bladeburner interface Bladeburner API Signature: export interface Bladeburner Remarks You have to be employed in the Bladeburner division and be in BitNode-7 or have Source-File 7 in order to use this API. Methods Method Description getActionAutolevel(type, name) Get whether an action is set to autolevel. getActionCountRemaining(type, name) Get action count remaining. getActionCurrentLevel(type, name) Get the current level of an action. getActionCurrentTime() Get the time elapsed on current action. getActionEstimatedSuccessChance(type, name) Get estimate success chance of an action. getActionMaxLevel(type, name) Get the maximum level of an action. getActionRepGain(type, name, level) Get the reputation gain of an action. getActionTime(type, name) Get the time to complete an action. getBlackOpNames() List all black ops. getBlackOpRank(name) Get black op required rank. getBonusTime() Get bladeburner bonus time. getCity() Get current city. getCityChaos(name) Get chaos of a city. getCityCommunities(name) Get number of communities in a city. getCityEstimatedPopulation(name) Get estimated population in city. getContractNames() List all contracts. getCurrentAction() Get current action. getGeneralActionNames() List all general actions. getOperationNames() List all operations. getRank() Get player bladeburner rank. getSkillLevel(name) Get skill level. getSkillNames() List all skills. getSkillPoints() Get bladeburner skill points. getSkillUpgradeCost(name, count) Get cost to upgrade skill. getStamina() Get bladeburner stamina. getTeamSize(type, name) Get team size. joinBladeburnerDivision() Join the bladeburner division. joinBladeburnerFaction() Join the bladeburner faction. setActionAutolevel(type, name, autoLevel) Set an action autolevel. setActionLevel(type, name, level) Set the level of an action. setTeamSize(type, name, size) Set team size. startAction(type, name) Start an action. stopBladeburnerAction() Stop current action. switchCity(name) Travel to another city in bladeburner. upgradeSkill(name, count) Upgrade skill.","title":"Bitburner.bladeburner"},{"location":"bitburner.bladeburner/#bladeburner-interface","text":"Bladeburner API Signature: export interface Bladeburner","title":"Bladeburner interface"},{"location":"bitburner.bladeburner/#remarks","text":"You have to be employed in the Bladeburner division and be in BitNode-7 or have Source-File 7 in order to use this API.","title":"Remarks"},{"location":"bitburner.bladeburner/#methods","text":"Method Description getActionAutolevel(type, name) Get whether an action is set to autolevel. getActionCountRemaining(type, name) Get action count remaining. getActionCurrentLevel(type, name) Get the current level of an action. getActionCurrentTime() Get the time elapsed on current action. getActionEstimatedSuccessChance(type, name) Get estimate success chance of an action. getActionMaxLevel(type, name) Get the maximum level of an action. getActionRepGain(type, name, level) Get the reputation gain of an action. getActionTime(type, name) Get the time to complete an action. getBlackOpNames() List all black ops. getBlackOpRank(name) Get black op required rank. getBonusTime() Get bladeburner bonus time. getCity() Get current city. getCityChaos(name) Get chaos of a city. getCityCommunities(name) Get number of communities in a city. getCityEstimatedPopulation(name) Get estimated population in city. getContractNames() List all contracts. getCurrentAction() Get current action. getGeneralActionNames() List all general actions. getOperationNames() List all operations. getRank() Get player bladeburner rank. getSkillLevel(name) Get skill level. getSkillNames() List all skills. getSkillPoints() Get bladeburner skill points. getSkillUpgradeCost(name, count) Get cost to upgrade skill. getStamina() Get bladeburner stamina. getTeamSize(type, name) Get team size. joinBladeburnerDivision() Join the bladeburner division. joinBladeburnerFaction() Join the bladeburner faction. setActionAutolevel(type, name, autoLevel) Set an action autolevel. setActionLevel(type, name, level) Set the level of an action. setTeamSize(type, name, size) Set team size. startAction(type, name) Start an action. stopBladeburnerAction() Stop current action. switchCity(name) Travel to another city in bladeburner. upgradeSkill(name, count) Upgrade skill.","title":"Methods"},{"location":"bitburner.bladeburner.setactionautolevel/","text":"Home > bitburner > Bladeburner > setActionAutolevel Bladeburner.setActionAutolevel() method Set an action autolevel. Signature: setActionAutolevel(type: string, name: string, autoLevel: boolean): void; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. autoLevel boolean Whether or not to autolevel this action Returns: void Remarks RAM cost: 4 GB Enable/disable autoleveling for the specified action.","title":"Bitburner.bladeburner.setactionautolevel"},{"location":"bitburner.bladeburner.setactionautolevel/#bladeburnersetactionautolevel-method","text":"Set an action autolevel. Signature: setActionAutolevel(type: string, name: string, autoLevel: boolean): void;","title":"Bladeburner.setActionAutolevel() method"},{"location":"bitburner.bladeburner.setactionautolevel/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. autoLevel boolean Whether or not to autolevel this action Returns: void","title":"Parameters"},{"location":"bitburner.bladeburner.setactionautolevel/#remarks","text":"RAM cost: 4 GB Enable/disable autoleveling for the specified action.","title":"Remarks"},{"location":"bitburner.bladeburner.setactionlevel/","text":"Home > bitburner > Bladeburner > setActionLevel Bladeburner.setActionLevel() method Set the level of an action. Signature: setActionLevel(type: string, name: string, level: number): void; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. level number Level to set this action to. Returns: void Remarks RAM cost: 4 GB Set the level for the specified action.","title":"Bitburner.bladeburner.setactionlevel"},{"location":"bitburner.bladeburner.setactionlevel/#bladeburnersetactionlevel-method","text":"Set the level of an action. Signature: setActionLevel(type: string, name: string, level: number): void;","title":"Bladeburner.setActionLevel() method"},{"location":"bitburner.bladeburner.setactionlevel/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. level number Level to set this action to. Returns: void","title":"Parameters"},{"location":"bitburner.bladeburner.setactionlevel/#remarks","text":"RAM cost: 4 GB Set the level for the specified action.","title":"Remarks"},{"location":"bitburner.bladeburner.setteamsize/","text":"Home > bitburner > Bladeburner > setTeamSize Bladeburner.setTeamSize() method Set team size. Signature: setTeamSize(type: string, name: string, size: number): number; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. size number Number of team members to set. Will be converted using Math.round(). Returns: number Number of Bladeburner team members you assigned to the specified action. Remarks RAM cost: 4 GB Set the team size for the specified Bladeburner action. Returns the team size that was set, or -1 if the function failed.","title":"Bitburner.bladeburner.setteamsize"},{"location":"bitburner.bladeburner.setteamsize/#bladeburnersetteamsize-method","text":"Set team size. Signature: setTeamSize(type: string, name: string, size: number): number;","title":"Bladeburner.setTeamSize() method"},{"location":"bitburner.bladeburner.setteamsize/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match. size number Number of team members to set. Will be converted using Math.round(). Returns: number Number of Bladeburner team members you assigned to the specified action.","title":"Parameters"},{"location":"bitburner.bladeburner.setteamsize/#remarks","text":"RAM cost: 4 GB Set the team size for the specified Bladeburner action. Returns the team size that was set, or -1 if the function failed.","title":"Remarks"},{"location":"bitburner.bladeburner.startaction/","text":"Home > bitburner > Bladeburner > startAction Bladeburner.startAction() method Start an action. Signature: startAction(type: string, name: string): boolean; Parameters Parameter Type Description type string Type of action. name string Name of action. Must be an exact match Returns: boolean True if the action was started successfully, and false otherwise. Remarks RAM cost: 4 GB Attempts to start the specified Bladeburner action. Returns true if the action was started successfully, and false otherwise.","title":"Bitburner.bladeburner.startaction"},{"location":"bitburner.bladeburner.startaction/#bladeburnerstartaction-method","text":"Start an action. Signature: startAction(type: string, name: string): boolean;","title":"Bladeburner.startAction() method"},{"location":"bitburner.bladeburner.startaction/#parameters","text":"Parameter Type Description type string Type of action. name string Name of action. Must be an exact match Returns: boolean True if the action was started successfully, and false otherwise.","title":"Parameters"},{"location":"bitburner.bladeburner.startaction/#remarks","text":"RAM cost: 4 GB Attempts to start the specified Bladeburner action. Returns true if the action was started successfully, and false otherwise.","title":"Remarks"},{"location":"bitburner.bladeburner.stopbladeburneraction/","text":"Home > bitburner > Bladeburner > stopBladeburnerAction Bladeburner.stopBladeburnerAction() method Stop current action. Signature: stopBladeburnerAction(): void; Returns: void Remarks RAM cost: 2 GB Stops the current Bladeburner action.","title":"Bitburner.bladeburner.stopbladeburneraction"},{"location":"bitburner.bladeburner.stopbladeburneraction/#bladeburnerstopbladeburneraction-method","text":"Stop current action. Signature: stopBladeburnerAction(): void; Returns: void","title":"Bladeburner.stopBladeburnerAction() method"},{"location":"bitburner.bladeburner.stopbladeburneraction/#remarks","text":"RAM cost: 2 GB Stops the current Bladeburner action.","title":"Remarks"},{"location":"bitburner.bladeburner.switchcity/","text":"Home > bitburner > Bladeburner > switchCity Bladeburner.switchCity() method Travel to another city in bladeburner. Signature: switchCity(name: string): boolean; Parameters Parameter Type Description name string Returns: boolean true if successful, and false otherwise Remarks RAM cost: 4 GB Attempts to switch to the specified city (for Bladeburner only). Returns true if successful, and false otherwise","title":"Bitburner.bladeburner.switchcity"},{"location":"bitburner.bladeburner.switchcity/#bladeburnerswitchcity-method","text":"Travel to another city in bladeburner. Signature: switchCity(name: string): boolean;","title":"Bladeburner.switchCity() method"},{"location":"bitburner.bladeburner.switchcity/#parameters","text":"Parameter Type Description name string Returns: boolean true if successful, and false otherwise","title":"Parameters"},{"location":"bitburner.bladeburner.switchcity/#remarks","text":"RAM cost: 4 GB Attempts to switch to the specified city (for Bladeburner only). Returns true if successful, and false otherwise","title":"Remarks"},{"location":"bitburner.bladeburner.upgradeskill/","text":"Home > bitburner > Bladeburner > upgradeSkill Bladeburner.upgradeSkill() method Upgrade skill. Signature: upgradeSkill(name: string, count?: number): boolean; Parameters Parameter Type Description name string count number Number of times to upgrade the skill. Defaults to 1 if not specified. Returns: boolean true if the skill is successfully upgraded, and false otherwise. Remarks RAM cost: 4 GB Attempts to upgrade the specified Bladeburner skill the specified number of times. Returns true if the skill is successfully upgraded, and false otherwise.","title":"Bitburner.bladeburner.upgradeskill"},{"location":"bitburner.bladeburner.upgradeskill/#bladeburnerupgradeskill-method","text":"Upgrade skill. Signature: upgradeSkill(name: string, count?: number): boolean;","title":"Bladeburner.upgradeSkill() method"},{"location":"bitburner.bladeburner.upgradeskill/#parameters","text":"Parameter Type Description name string count number Number of times to upgrade the skill. Defaults to 1 if not specified. Returns: boolean true if the skill is successfully upgraded, and false otherwise.","title":"Parameters"},{"location":"bitburner.bladeburner.upgradeskill/#remarks","text":"RAM cost: 4 GB Attempts to upgrade the specified Bladeburner skill the specified number of times. Returns true if the skill is successfully upgraded, and false otherwise.","title":"Remarks"},{"location":"bitburner.bladeburnercuraction/","text":"Home > bitburner > BladeburnerCurAction BladeburnerCurAction interface Bladeburner current action. Signature: export interface BladeburnerCurAction Properties Property Type Description name string Name of Action type string Type of Action","title":"Bitburner.bladeburnercuraction"},{"location":"bitburner.bladeburnercuraction/#bladeburnercuraction-interface","text":"Bladeburner current action. Signature: export interface BladeburnerCurAction","title":"BladeburnerCurAction interface"},{"location":"bitburner.bladeburnercuraction/#properties","text":"Property Type Description name string Name of Action type string Type of Action","title":"Properties"},{"location":"bitburner.bladeburnercuraction.name/","text":"Home > bitburner > BladeburnerCurAction > name BladeburnerCurAction.name property Name of Action Signature: name: string;","title":"Bitburner.bladeburnercuraction.name"},{"location":"bitburner.bladeburnercuraction.name/#bladeburnercuractionname-property","text":"Name of Action Signature: name: string;","title":"BladeburnerCurAction.name property"},{"location":"bitburner.bladeburnercuraction.type/","text":"Home > bitburner > BladeburnerCurAction > type BladeburnerCurAction.type property Type of Action Signature: type: string;","title":"Bitburner.bladeburnercuraction.type"},{"location":"bitburner.bladeburnercuraction.type/#bladeburnercuractiontype-property","text":"Type of Action Signature: type: string;","title":"BladeburnerCurAction.type property"},{"location":"bitburner.charactermult.agility/","text":"Home > bitburner > CharacterMult > agility CharacterMult.agility property Agility stat Signature: agility: number;","title":"Bitburner.charactermult.agility"},{"location":"bitburner.charactermult.agility/#charactermultagility-property","text":"Agility stat Signature: agility: number;","title":"CharacterMult.agility property"},{"location":"bitburner.charactermult.agilityexp/","text":"Home > bitburner > CharacterMult > agilityExp CharacterMult.agilityExp property Agility exp Signature: agilityExp: number;","title":"Bitburner.charactermult.agilityexp"},{"location":"bitburner.charactermult.agilityexp/#charactermultagilityexp-property","text":"Agility exp Signature: agilityExp: number;","title":"CharacterMult.agilityExp property"},{"location":"bitburner.charactermult.charisma/","text":"Home > bitburner > CharacterMult > charisma CharacterMult.charisma property Charisma stat Signature: charisma: number;","title":"Bitburner.charactermult.charisma"},{"location":"bitburner.charactermult.charisma/#charactermultcharisma-property","text":"Charisma stat Signature: charisma: number;","title":"CharacterMult.charisma property"},{"location":"bitburner.charactermult.charismaexp/","text":"Home > bitburner > CharacterMult > charismaExp CharacterMult.charismaExp property Charisma exp Signature: charismaExp: number;","title":"Bitburner.charactermult.charismaexp"},{"location":"bitburner.charactermult.charismaexp/#charactermultcharismaexp-property","text":"Charisma exp Signature: charismaExp: number;","title":"CharacterMult.charismaExp property"},{"location":"bitburner.charactermult.companyrep/","text":"Home > bitburner > CharacterMult > companyRep CharacterMult.companyRep property Company reputation Signature: companyRep: number;","title":"Bitburner.charactermult.companyrep"},{"location":"bitburner.charactermult.companyrep/#charactermultcompanyrep-property","text":"Company reputation Signature: companyRep: number;","title":"CharacterMult.companyRep property"},{"location":"bitburner.charactermult.crimemoney/","text":"Home > bitburner > CharacterMult > crimeMoney CharacterMult.crimeMoney property Money earned from crimes Signature: crimeMoney: number;","title":"Bitburner.charactermult.crimemoney"},{"location":"bitburner.charactermult.crimemoney/#charactermultcrimemoney-property","text":"Money earned from crimes Signature: crimeMoney: number;","title":"CharacterMult.crimeMoney property"},{"location":"bitburner.charactermult.crimesuccess/","text":"Home > bitburner > CharacterMult > crimeSuccess CharacterMult.crimeSuccess property Crime success chance Signature: crimeSuccess: number;","title":"Bitburner.charactermult.crimesuccess"},{"location":"bitburner.charactermult.crimesuccess/#charactermultcrimesuccess-property","text":"Crime success chance Signature: crimeSuccess: number;","title":"CharacterMult.crimeSuccess property"},{"location":"bitburner.charactermult.defense/","text":"Home > bitburner > CharacterMult > defense CharacterMult.defense property Defense stat Signature: defense: number;","title":"Bitburner.charactermult.defense"},{"location":"bitburner.charactermult.defense/#charactermultdefense-property","text":"Defense stat Signature: defense: number;","title":"CharacterMult.defense property"},{"location":"bitburner.charactermult.defenseexp/","text":"Home > bitburner > CharacterMult > defenseExp CharacterMult.defenseExp property Defense exp Signature: defenseExp: number;","title":"Bitburner.charactermult.defenseexp"},{"location":"bitburner.charactermult.defenseexp/#charactermultdefenseexp-property","text":"Defense exp Signature: defenseExp: number;","title":"CharacterMult.defenseExp property"},{"location":"bitburner.charactermult.dexterity/","text":"Home > bitburner > CharacterMult > dexterity CharacterMult.dexterity property Dexterity stat Signature: dexterity: number;","title":"Bitburner.charactermult.dexterity"},{"location":"bitburner.charactermult.dexterity/#charactermultdexterity-property","text":"Dexterity stat Signature: dexterity: number;","title":"CharacterMult.dexterity property"},{"location":"bitburner.charactermult.dexterityexp/","text":"Home > bitburner > CharacterMult > dexterityExp CharacterMult.dexterityExp property Dexterity exp Signature: dexterityExp: number;","title":"Bitburner.charactermult.dexterityexp"},{"location":"bitburner.charactermult.dexterityexp/#charactermultdexterityexp-property","text":"Dexterity exp Signature: dexterityExp: number;","title":"CharacterMult.dexterityExp property"},{"location":"bitburner.charactermult.factionrep/","text":"Home > bitburner > CharacterMult > factionRep CharacterMult.factionRep property Faction reputation Signature: factionRep: number;","title":"Bitburner.charactermult.factionrep"},{"location":"bitburner.charactermult.factionrep/#charactermultfactionrep-property","text":"Faction reputation Signature: factionRep: number;","title":"CharacterMult.factionRep property"},{"location":"bitburner.charactermult.hacking/","text":"Home > bitburner > CharacterMult > hacking CharacterMult.hacking property Hacking stat Signature: hacking: number;","title":"Bitburner.charactermult.hacking"},{"location":"bitburner.charactermult.hacking/#charactermulthacking-property","text":"Hacking stat Signature: hacking: number;","title":"CharacterMult.hacking property"},{"location":"bitburner.charactermult.hackingexp/","text":"Home > bitburner > CharacterMult > hackingExp CharacterMult.hackingExp property Hacking exp Signature: hackingExp: number;","title":"Bitburner.charactermult.hackingexp"},{"location":"bitburner.charactermult.hackingexp/#charactermulthackingexp-property","text":"Hacking exp Signature: hackingExp: number;","title":"CharacterMult.hackingExp property"},{"location":"bitburner.charactermult/","text":"Home > bitburner > CharacterMult CharacterMult interface Signature: export interface CharacterMult Properties Property Type Description agility number Agility stat agilityExp number Agility exp charisma number Charisma stat charismaExp number Charisma exp companyRep number Company reputation crimeMoney number Money earned from crimes crimeSuccess number Crime success chance defense number Defense stat defenseExp number Defense exp dexterity number Dexterity stat dexterityExp number Dexterity exp factionRep number Faction reputation hacking number Hacking stat hackingExp number Hacking exp strength number Strength stat strengthExp number Strength exp workMoney number Money earned from jobs","title":"Bitburner.charactermult"},{"location":"bitburner.charactermult/#charactermult-interface","text":"Signature: export interface CharacterMult","title":"CharacterMult interface"},{"location":"bitburner.charactermult/#properties","text":"Property Type Description agility number Agility stat agilityExp number Agility exp charisma number Charisma stat charismaExp number Charisma exp companyRep number Company reputation crimeMoney number Money earned from crimes crimeSuccess number Crime success chance defense number Defense stat defenseExp number Defense exp dexterity number Dexterity stat dexterityExp number Dexterity exp factionRep number Faction reputation hacking number Hacking stat hackingExp number Hacking exp strength number Strength stat strengthExp number Strength exp workMoney number Money earned from jobs","title":"Properties"},{"location":"bitburner.charactermult.strength/","text":"Home > bitburner > CharacterMult > strength CharacterMult.strength property Strength stat Signature: strength: number;","title":"Bitburner.charactermult.strength"},{"location":"bitburner.charactermult.strength/#charactermultstrength-property","text":"Strength stat Signature: strength: number;","title":"CharacterMult.strength property"},{"location":"bitburner.charactermult.strengthexp/","text":"Home > bitburner > CharacterMult > strengthExp CharacterMult.strengthExp property Strength exp Signature: strengthExp: number;","title":"Bitburner.charactermult.strengthexp"},{"location":"bitburner.charactermult.strengthexp/#charactermultstrengthexp-property","text":"Strength exp Signature: strengthExp: number;","title":"CharacterMult.strengthExp property"},{"location":"bitburner.charactermult.workmoney/","text":"Home > bitburner > CharacterMult > workMoney CharacterMult.workMoney property Money earned from jobs Signature: workMoney: number;","title":"Bitburner.charactermult.workmoney"},{"location":"bitburner.charactermult.workmoney/#charactermultworkmoney-property","text":"Money earned from jobs Signature: workMoney: number;","title":"CharacterMult.workMoney property"},{"location":"bitburner.codingattemptoptions/","text":"Home > bitburner > CodingAttemptOptions CodingAttemptOptions interface Options to affect the behavior of CodingContract attempt. Signature: export interface CodingAttemptOptions Properties Property Type Description returnReward boolean If truthy, then the function will return a string that states the contract\u2019s reward when it is successfully solved.","title":"Bitburner.codingattemptoptions"},{"location":"bitburner.codingattemptoptions/#codingattemptoptions-interface","text":"Options to affect the behavior of CodingContract attempt. Signature: export interface CodingAttemptOptions","title":"CodingAttemptOptions interface"},{"location":"bitburner.codingattemptoptions/#properties","text":"Property Type Description returnReward boolean If truthy, then the function will return a string that states the contract\u2019s reward when it is successfully solved.","title":"Properties"},{"location":"bitburner.codingattemptoptions.returnreward/","text":"Home > bitburner > CodingAttemptOptions > returnReward CodingAttemptOptions.returnReward property If truthy, then the function will return a string that states the contract\u2019s reward when it is successfully solved. Signature: returnReward: boolean;","title":"Bitburner.codingattemptoptions.returnreward"},{"location":"bitburner.codingattemptoptions.returnreward/#codingattemptoptionsreturnreward-property","text":"If truthy, then the function will return a string that states the contract\u2019s reward when it is successfully solved. Signature: returnReward: boolean;","title":"CodingAttemptOptions.returnReward property"},{"location":"bitburner.codingcontract.attempt/","text":"Home > bitburner > CodingContract > attempt CodingContract.attempt() method Attempts a coding contract. Signature: attempt( answer: string | number | any[], filename: string, host?: string, opts?: CodingAttemptOptions, ): boolean | string; Parameters Parameter Type Description answer string | number | any[] Solution for the contract. filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. opts CodingAttemptOptions Optional parameters for configuring function behavior. Returns: boolean | string True if the solution was correct, false otherwise. If the returnReward option is configured, then the function will instead return a string. If the contract is successfully solved, the string will contain a description of the contract\u2019s reward. Otherwise, it will be an empty string. Remarks RAM cost: 10 GB Attempts to solve the Coding Contract with the provided solution.","title":"Bitburner.codingcontract.attempt"},{"location":"bitburner.codingcontract.attempt/#codingcontractattempt-method","text":"Attempts a coding contract. Signature: attempt( answer: string | number | any[], filename: string, host?: string, opts?: CodingAttemptOptions, ): boolean | string;","title":"CodingContract.attempt() method"},{"location":"bitburner.codingcontract.attempt/#parameters","text":"Parameter Type Description answer string | number | any[] Solution for the contract. filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. opts CodingAttemptOptions Optional parameters for configuring function behavior. Returns: boolean | string True if the solution was correct, false otherwise. If the returnReward option is configured, then the function will instead return a string. If the contract is successfully solved, the string will contain a description of the contract\u2019s reward. Otherwise, it will be an empty string.","title":"Parameters"},{"location":"bitburner.codingcontract.attempt/#remarks","text":"RAM cost: 10 GB Attempts to solve the Coding Contract with the provided solution.","title":"Remarks"},{"location":"bitburner.codingcontract.createdummycontract/","text":"Home > bitburner > CodingContract > createDummyContract CodingContract.createDummyContract() method Generate a dummy contract. Signature: createDummyContract(type: string): void; Parameters Parameter Type Description type string Type of contract to generate Returns: void Remarks RAM cost: 2 GB Generate a dummy contract on the home computer with no reward. Used to test various algorithms.","title":"Bitburner.codingcontract.createdummycontract"},{"location":"bitburner.codingcontract.createdummycontract/#codingcontractcreatedummycontract-method","text":"Generate a dummy contract. Signature: createDummyContract(type: string): void;","title":"CodingContract.createDummyContract() method"},{"location":"bitburner.codingcontract.createdummycontract/#parameters","text":"Parameter Type Description type string Type of contract to generate Returns: void","title":"Parameters"},{"location":"bitburner.codingcontract.createdummycontract/#remarks","text":"RAM cost: 2 GB Generate a dummy contract on the home computer with no reward. Used to test various algorithms.","title":"Remarks"},{"location":"bitburner.codingcontract.getcontracttype/","text":"Home > bitburner > CodingContract > getContractType CodingContract.getContractType() method Get the type of a coding contract. Signature: getContractType(filename: string, host?: string): string; Parameters Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: string Name describing the type of problem posed by the Coding Contract. Remarks RAM cost: 5 GB Returns a name describing the type of problem posed by the Coding Contract. (e.g. Find Largest Prime Factor, Total Ways to Sum, etc.)","title":"Bitburner.codingcontract.getcontracttype"},{"location":"bitburner.codingcontract.getcontracttype/#codingcontractgetcontracttype-method","text":"Get the type of a coding contract. Signature: getContractType(filename: string, host?: string): string;","title":"CodingContract.getContractType() method"},{"location":"bitburner.codingcontract.getcontracttype/#parameters","text":"Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: string Name describing the type of problem posed by the Coding Contract.","title":"Parameters"},{"location":"bitburner.codingcontract.getcontracttype/#remarks","text":"RAM cost: 5 GB Returns a name describing the type of problem posed by the Coding Contract. (e.g. Find Largest Prime Factor, Total Ways to Sum, etc.)","title":"Remarks"},{"location":"bitburner.codingcontract.getcontracttypes/","text":"Home > bitburner > CodingContract > getContractTypes CodingContract.getContractTypes() method List all contract types. Signature: getContractTypes(): string[]; Returns: string[] Remarks RAM cost: 2 GB","title":"Bitburner.codingcontract.getcontracttypes"},{"location":"bitburner.codingcontract.getcontracttypes/#codingcontractgetcontracttypes-method","text":"List all contract types. Signature: getContractTypes(): string[]; Returns: string[]","title":"CodingContract.getContractTypes() method"},{"location":"bitburner.codingcontract.getcontracttypes/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.codingcontract.getdata/","text":"Home > bitburner > CodingContract > getData CodingContract.getData() method Get the input data. Signature: getData(filename: string, host?: string): CodingContractData; Parameters Parameter Type Description filename string Filename of the contract. host string Host of the server containing the contract. Optional. Defaults to current server if not provided. Returns: CodingContractData The specified contract\u2019s data, data type depends on contract type. Remarks RAM cost: 5 GB Get the data associated with the specific Coding Contract. Note that this is not the same as the contract\u2019s description. This is just the data that the contract wants you to act on in order to solve the contract.","title":"Bitburner.codingcontract.getdata"},{"location":"bitburner.codingcontract.getdata/#codingcontractgetdata-method","text":"Get the input data. Signature: getData(filename: string, host?: string): CodingContractData;","title":"CodingContract.getData() method"},{"location":"bitburner.codingcontract.getdata/#parameters","text":"Parameter Type Description filename string Filename of the contract. host string Host of the server containing the contract. Optional. Defaults to current server if not provided. Returns: CodingContractData The specified contract\u2019s data, data type depends on contract type.","title":"Parameters"},{"location":"bitburner.codingcontract.getdata/#remarks","text":"RAM cost: 5 GB Get the data associated with the specific Coding Contract. Note that this is not the same as the contract\u2019s description. This is just the data that the contract wants you to act on in order to solve the contract.","title":"Remarks"},{"location":"bitburner.codingcontract.getdescription/","text":"Home > bitburner > CodingContract > getDescription CodingContract.getDescription() method Get the description. Signature: getDescription(filename: string, host?: string): string; Parameters Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: string Contract\u2019s text description. Remarks RAM cost: 5 GB Get the full text description for the problem posed by the Coding Contract.","title":"Bitburner.codingcontract.getdescription"},{"location":"bitburner.codingcontract.getdescription/#codingcontractgetdescription-method","text":"Get the description. Signature: getDescription(filename: string, host?: string): string;","title":"CodingContract.getDescription() method"},{"location":"bitburner.codingcontract.getdescription/#parameters","text":"Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: string Contract\u2019s text description.","title":"Parameters"},{"location":"bitburner.codingcontract.getdescription/#remarks","text":"RAM cost: 5 GB Get the full text description for the problem posed by the Coding Contract.","title":"Remarks"},{"location":"bitburner.codingcontract.getnumtriesremaining/","text":"Home > bitburner > CodingContract > getNumTriesRemaining CodingContract.getNumTriesRemaining() method Get the number of attempts remaining. Signature: getNumTriesRemaining(filename: string, host?: string): number; Parameters Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: number How many attempts are remaining for the contract. Remarks RAM cost: 2 GB Get the number of tries remaining on the contract before it self-destructs.","title":"Bitburner.codingcontract.getnumtriesremaining"},{"location":"bitburner.codingcontract.getnumtriesremaining/#codingcontractgetnumtriesremaining-method","text":"Get the number of attempts remaining. Signature: getNumTriesRemaining(filename: string, host?: string): number;","title":"CodingContract.getNumTriesRemaining() method"},{"location":"bitburner.codingcontract.getnumtriesremaining/#parameters","text":"Parameter Type Description filename string Filename of the contract. host string Hostname of the server containing the contract. Optional. Defaults to current server if not provided. Returns: number How many attempts are remaining for the contract.","title":"Parameters"},{"location":"bitburner.codingcontract.getnumtriesremaining/#remarks","text":"RAM cost: 2 GB Get the number of tries remaining on the contract before it self-destructs.","title":"Remarks"},{"location":"bitburner.codingcontract/","text":"Home > bitburner > CodingContract CodingContract interface Coding Contract API Signature: export interface CodingContract Methods Method Description attempt(answer, filename, host, opts) Attempts a coding contract. createDummyContract(type) Generate a dummy contract. getContractType(filename, host) Get the type of a coding contract. getContractTypes() List all contract types. getData(filename, host) Get the input data. getDescription(filename, host) Get the description. getNumTriesRemaining(filename, host) Get the number of attempts remaining.","title":"Bitburner.codingcontract"},{"location":"bitburner.codingcontract/#codingcontract-interface","text":"Coding Contract API Signature: export interface CodingContract","title":"CodingContract interface"},{"location":"bitburner.codingcontract/#methods","text":"Method Description attempt(answer, filename, host, opts) Attempts a coding contract. createDummyContract(type) Generate a dummy contract. getContractType(filename, host) Get the type of a coding contract. getContractTypes() List all contract types. getData(filename, host) Get the input data. getDescription(filename, host) Get the description. getNumTriesRemaining(filename, host) Get the number of attempts remaining.","title":"Methods"},{"location":"bitburner.codingcontractdata/","text":"Home > bitburner > CodingContractData CodingContractData type Coding contract data will differ depending on coding contract. Signature: type CodingContractData = any;","title":"Bitburner.codingcontractdata"},{"location":"bitburner.codingcontractdata/#codingcontractdata-type","text":"Coding contract data will differ depending on coding contract. Signature: type CodingContractData = any;","title":"CodingContractData type"},{"location":"bitburner.corporation.acceptinvestmentoffer/","text":"Home > bitburner > Corporation > acceptInvestmentOffer Corporation.acceptInvestmentOffer() method Accept investment based on you companies current valuation Signature: acceptInvestmentOffer(): boolean; Returns: boolean An offer of investment Remarks Is based on current valuation and will not honer a specific Offer","title":"Bitburner.corporation.acceptinvestmentoffer"},{"location":"bitburner.corporation.acceptinvestmentoffer/#corporationacceptinvestmentoffer-method","text":"Accept investment based on you companies current valuation Signature: acceptInvestmentOffer(): boolean; Returns: boolean An offer of investment","title":"Corporation.acceptInvestmentOffer() method"},{"location":"bitburner.corporation.acceptinvestmentoffer/#remarks","text":"Is based on current valuation and will not honer a specific Offer","title":"Remarks"},{"location":"bitburner.corporation.bribe/","text":"Home > bitburner > Corporation > bribe Corporation.bribe() method Bribe a faction Signature: bribe(factionName: string, amountCash: number): boolean; Parameters Parameter Type Description factionName string Faction name amountCash number Amount of money to bribe Returns: boolean True if successful, false if not","title":"Bitburner.corporation.bribe"},{"location":"bitburner.corporation.bribe/#corporationbribe-method","text":"Bribe a faction Signature: bribe(factionName: string, amountCash: number): boolean;","title":"Corporation.bribe() method"},{"location":"bitburner.corporation.bribe/#parameters","text":"Parameter Type Description factionName string Faction name amountCash number Amount of money to bribe Returns: boolean True if successful, false if not","title":"Parameters"},{"location":"bitburner.corporation.buybackshares/","text":"Home > bitburner > Corporation > buyBackShares Corporation.buyBackShares() method Buyback Shares Signature: buyBackShares(amount: number): void; Parameters Parameter Type Description amount number Amount of shares to buy back. Returns: void","title":"Bitburner.corporation.buybackshares"},{"location":"bitburner.corporation.buybackshares/#corporationbuybackshares-method","text":"Buyback Shares Signature: buyBackShares(amount: number): void;","title":"Corporation.buyBackShares() method"},{"location":"bitburner.corporation.buybackshares/#parameters","text":"Parameter Type Description amount number Amount of shares to buy back. Returns: void","title":"Parameters"},{"location":"bitburner.corporation.createcorporation/","text":"Home > bitburner > Corporation > createCorporation Corporation.createCorporation() method Create a Corporation Signature: createCorporation(corporationName: string, selfFund: boolean): boolean; Parameters Parameter Type Description corporationName string selfFund boolean If you should self fund, defaults to true, false will only work on Bitnode 3 Returns: boolean true if created and false if not","title":"Bitburner.corporation.createcorporation"},{"location":"bitburner.corporation.createcorporation/#corporationcreatecorporation-method","text":"Create a Corporation Signature: createCorporation(corporationName: string, selfFund: boolean): boolean;","title":"Corporation.createCorporation() method"},{"location":"bitburner.corporation.createcorporation/#parameters","text":"Parameter Type Description corporationName string selfFund boolean If you should self fund, defaults to true, false will only work on Bitnode 3 Returns: boolean true if created and false if not","title":"Parameters"},{"location":"bitburner.corporation.expandcity/","text":"Home > bitburner > Corporation > expandCity Corporation.expandCity() method Expand to a new city Signature: expandCity(divisionName: string, cityName: string): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: void","title":"Bitburner.corporation.expandcity"},{"location":"bitburner.corporation.expandcity/#corporationexpandcity-method","text":"Expand to a new city Signature: expandCity(divisionName: string, cityName: string): void;","title":"Corporation.expandCity() method"},{"location":"bitburner.corporation.expandcity/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: void","title":"Parameters"},{"location":"bitburner.corporation.expandindustry/","text":"Home > bitburner > Corporation > expandIndustry Corporation.expandIndustry() method Expand to a new industry Signature: expandIndustry(industryType: string, divisionName: string): void; Parameters Parameter Type Description industryType string Name of the industry divisionName string Name of the division Returns: void","title":"Bitburner.corporation.expandindustry"},{"location":"bitburner.corporation.expandindustry/#corporationexpandindustry-method","text":"Expand to a new industry Signature: expandIndustry(industryType: string, divisionName: string): void;","title":"Corporation.expandIndustry() method"},{"location":"bitburner.corporation.expandindustry/#parameters","text":"Parameter Type Description industryType string Name of the industry divisionName string Name of the division Returns: void","title":"Parameters"},{"location":"bitburner.corporation.getbonustime/","text":"Home > bitburner > Corporation > getBonusTime Corporation.getBonusTime() method Get bonus time. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster. Signature: getBonusTime(): number; Returns: number Bonus time for the Corporation mechanic in milliseconds.","title":"Bitburner.corporation.getbonustime"},{"location":"bitburner.corporation.getbonustime/#corporationgetbonustime-method","text":"Get bonus time. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster. Signature: getBonusTime(): number; Returns: number Bonus time for the Corporation mechanic in milliseconds.","title":"Corporation.getBonusTime() method"},{"location":"bitburner.corporation.getcorporation/","text":"Home > bitburner > Corporation > getCorporation Corporation.getCorporation() method Get corporation data Signature: getCorporation(): CorporationInfo; Returns: CorporationInfo Corporation data","title":"Bitburner.corporation.getcorporation"},{"location":"bitburner.corporation.getcorporation/#corporationgetcorporation-method","text":"Get corporation data Signature: getCorporation(): CorporationInfo; Returns: CorporationInfo Corporation data","title":"Corporation.getCorporation() method"},{"location":"bitburner.corporation.getdivision/","text":"Home > bitburner > Corporation > getDivision Corporation.getDivision() method Get division data Signature: getDivision(divisionName: string): Division; Parameters Parameter Type Description divisionName string Name of the division Returns: Division Division data","title":"Bitburner.corporation.getdivision"},{"location":"bitburner.corporation.getdivision/#corporationgetdivision-method","text":"Get division data Signature: getDivision(divisionName: string): Division;","title":"Corporation.getDivision() method"},{"location":"bitburner.corporation.getdivision/#parameters","text":"Parameter Type Description divisionName string Name of the division Returns: Division Division data","title":"Parameters"},{"location":"bitburner.corporation.getexpandcitycost/","text":"Home > bitburner > Corporation > getExpandCityCost Corporation.getExpandCityCost() method Gets the cost to expand into a new city Signature: getExpandCityCost(): number; Returns: number cost","title":"Bitburner.corporation.getexpandcitycost"},{"location":"bitburner.corporation.getexpandcitycost/#corporationgetexpandcitycost-method","text":"Gets the cost to expand into a new city Signature: getExpandCityCost(): number; Returns: number cost","title":"Corporation.getExpandCityCost() method"},{"location":"bitburner.corporation.getexpandindustrycost/","text":"Home > bitburner > Corporation > getExpandIndustryCost Corporation.getExpandIndustryCost() method Gets the cost to expand into a new industry Signature: getExpandIndustryCost(industryName: string): number; Parameters Parameter Type Description industryName string Name of the industry Returns: number cost","title":"Bitburner.corporation.getexpandindustrycost"},{"location":"bitburner.corporation.getexpandindustrycost/#corporationgetexpandindustrycost-method","text":"Gets the cost to expand into a new industry Signature: getExpandIndustryCost(industryName: string): number;","title":"Corporation.getExpandIndustryCost() method"},{"location":"bitburner.corporation.getexpandindustrycost/#parameters","text":"Parameter Type Description industryName string Name of the industry Returns: number cost","title":"Parameters"},{"location":"bitburner.corporation.getindustrytypes/","text":"Home > bitburner > Corporation > getIndustryTypes Corporation.getIndustryTypes() method Get list of industry types Signature: getIndustryTypes(): string[]; Returns: string[] industry names","title":"Bitburner.corporation.getindustrytypes"},{"location":"bitburner.corporation.getindustrytypes/#corporationgetindustrytypes-method","text":"Get list of industry types Signature: getIndustryTypes(): string[]; Returns: string[] industry names","title":"Corporation.getIndustryTypes() method"},{"location":"bitburner.corporation.getinvestmentoffer/","text":"Home > bitburner > Corporation > getInvestmentOffer Corporation.getInvestmentOffer() method Get an offer for investment based on you companies current valuation Signature: getInvestmentOffer(): InvestmentOffer; Returns: InvestmentOffer An offer of investment","title":"Bitburner.corporation.getinvestmentoffer"},{"location":"bitburner.corporation.getinvestmentoffer/#corporationgetinvestmentoffer-method","text":"Get an offer for investment based on you companies current valuation Signature: getInvestmentOffer(): InvestmentOffer; Returns: InvestmentOffer An offer of investment","title":"Corporation.getInvestmentOffer() method"},{"location":"bitburner.corporation.getmaterialnames/","text":"Home > bitburner > Corporation > getMaterialNames Corporation.getMaterialNames() method Get list of materials Signature: getMaterialNames(): string[]; Returns: string[] material names","title":"Bitburner.corporation.getmaterialnames"},{"location":"bitburner.corporation.getmaterialnames/#corporationgetmaterialnames-method","text":"Get list of materials Signature: getMaterialNames(): string[]; Returns: string[] material names","title":"Corporation.getMaterialNames() method"},{"location":"bitburner.corporation.getresearchnames/","text":"Home > bitburner > Corporation > getResearchNames Corporation.getResearchNames() method Get list of research names Signature: getResearchNames(): string[]; Returns: string[] research names","title":"Bitburner.corporation.getresearchnames"},{"location":"bitburner.corporation.getresearchnames/#corporationgetresearchnames-method","text":"Get list of research names Signature: getResearchNames(): string[]; Returns: string[] research names","title":"Corporation.getResearchNames() method"},{"location":"bitburner.corporation.getunlockables/","text":"Home > bitburner > Corporation > getUnlockables Corporation.getUnlockables() method Get list of one-time unlockable upgrades Signature: getUnlockables(): string[]; Returns: string[] unlockable upgrades names","title":"Bitburner.corporation.getunlockables"},{"location":"bitburner.corporation.getunlockables/#corporationgetunlockables-method","text":"Get list of one-time unlockable upgrades Signature: getUnlockables(): string[]; Returns: string[] unlockable upgrades names","title":"Corporation.getUnlockables() method"},{"location":"bitburner.corporation.getunlockupgradecost/","text":"Home > bitburner > Corporation > getUnlockUpgradeCost Corporation.getUnlockUpgradeCost() method Gets the cost to unlock a one time unlockable upgrade Signature: getUnlockUpgradeCost(upgradeName: string): number; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: number cost of the upgrade","title":"Bitburner.corporation.getunlockupgradecost"},{"location":"bitburner.corporation.getunlockupgradecost/#corporationgetunlockupgradecost-method","text":"Gets the cost to unlock a one time unlockable upgrade Signature: getUnlockUpgradeCost(upgradeName: string): number;","title":"Corporation.getUnlockUpgradeCost() method"},{"location":"bitburner.corporation.getunlockupgradecost/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: number cost of the upgrade","title":"Parameters"},{"location":"bitburner.corporation.getupgradelevel/","text":"Home > bitburner > Corporation > getUpgradeLevel Corporation.getUpgradeLevel() method Get the level of a levelable upgrade Signature: getUpgradeLevel(upgradeName: string): number; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: number the level of the upgrade","title":"Bitburner.corporation.getupgradelevel"},{"location":"bitburner.corporation.getupgradelevel/#corporationgetupgradelevel-method","text":"Get the level of a levelable upgrade Signature: getUpgradeLevel(upgradeName: string): number;","title":"Corporation.getUpgradeLevel() method"},{"location":"bitburner.corporation.getupgradelevel/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: number the level of the upgrade","title":"Parameters"},{"location":"bitburner.corporation.getupgradelevelcost/","text":"Home > bitburner > Corporation > getUpgradeLevelCost Corporation.getUpgradeLevelCost() method Gets the cost to unlock the next level of a levelable upgrade Signature: getUpgradeLevelCost(upgradeName: string): number; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: number cost of the upgrade","title":"Bitburner.corporation.getupgradelevelcost"},{"location":"bitburner.corporation.getupgradelevelcost/#corporationgetupgradelevelcost-method","text":"Gets the cost to unlock the next level of a levelable upgrade Signature: getUpgradeLevelCost(upgradeName: string): number;","title":"Corporation.getUpgradeLevelCost() method"},{"location":"bitburner.corporation.getupgradelevelcost/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: number cost of the upgrade","title":"Parameters"},{"location":"bitburner.corporation.getupgradenames/","text":"Home > bitburner > Corporation > getUpgradeNames Corporation.getUpgradeNames() method Get list of upgrade names Signature: getUpgradeNames(): string[]; Returns: string[] upgrade names","title":"Bitburner.corporation.getupgradenames"},{"location":"bitburner.corporation.getupgradenames/#corporationgetupgradenames-method","text":"Get list of upgrade names Signature: getUpgradeNames(): string[]; Returns: string[] upgrade names","title":"Corporation.getUpgradeNames() method"},{"location":"bitburner.corporation.gopublic/","text":"Home > bitburner > Corporation > goPublic Corporation.goPublic() method Go public Signature: goPublic(numShares: number): boolean; Parameters Parameter Type Description numShares number number of shares you would like to issue for your IPO Returns: boolean true if you successfully go public, false if not","title":"Bitburner.corporation.gopublic"},{"location":"bitburner.corporation.gopublic/#corporationgopublic-method","text":"Go public Signature: goPublic(numShares: number): boolean;","title":"Corporation.goPublic() method"},{"location":"bitburner.corporation.gopublic/#parameters","text":"Parameter Type Description numShares number number of shares you would like to issue for your IPO Returns: boolean true if you successfully go public, false if not","title":"Parameters"},{"location":"bitburner.corporation.hasunlockupgrade/","text":"Home > bitburner > Corporation > hasUnlockUpgrade Corporation.hasUnlockUpgrade() method Check if you have a one time unlockable upgrade Signature: hasUnlockUpgrade(upgradeName: string): boolean; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: boolean true if unlocked and false if not","title":"Bitburner.corporation.hasunlockupgrade"},{"location":"bitburner.corporation.hasunlockupgrade/#corporationhasunlockupgrade-method","text":"Check if you have a one time unlockable upgrade Signature: hasUnlockUpgrade(upgradeName: string): boolean;","title":"Corporation.hasUnlockUpgrade() method"},{"location":"bitburner.corporation.hasunlockupgrade/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: boolean true if unlocked and false if not","title":"Parameters"},{"location":"bitburner.corporation.issuedividends/","text":"Home > bitburner > Corporation > issueDividends Corporation.issueDividends() method Issue dividends Signature: issueDividends(rate: number): void; Parameters Parameter Type Description rate number Fraction of profit to issue as dividends. Returns: void","title":"Bitburner.corporation.issuedividends"},{"location":"bitburner.corporation.issuedividends/#corporationissuedividends-method","text":"Issue dividends Signature: issueDividends(rate: number): void;","title":"Corporation.issueDividends() method"},{"location":"bitburner.corporation.issuedividends/#parameters","text":"Parameter Type Description rate number Fraction of profit to issue as dividends. Returns: void","title":"Parameters"},{"location":"bitburner.corporation.levelupgrade/","text":"Home > bitburner > Corporation > levelUpgrade Corporation.levelUpgrade() method Level an upgrade. Signature: levelUpgrade(upgradeName: string): void; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: void","title":"Bitburner.corporation.levelupgrade"},{"location":"bitburner.corporation.levelupgrade/#corporationlevelupgrade-method","text":"Level an upgrade. Signature: levelUpgrade(upgradeName: string): void;","title":"Corporation.levelUpgrade() method"},{"location":"bitburner.corporation.levelupgrade/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: void","title":"Parameters"},{"location":"bitburner.corporation/","text":"Home > bitburner > Corporation Corporation interface Corporation API Signature: export interface Corporation extends WarehouseAPI, OfficeAPI Extends: WarehouseAPI , OfficeAPI Methods Method Description acceptInvestmentOffer() Accept investment based on you companies current valuation bribe(factionName, amountCash) Bribe a faction buyBackShares(amount) Buyback Shares createCorporation(corporationName, selfFund) Create a Corporation expandCity(divisionName, cityName) Expand to a new city expandIndustry(industryType, divisionName) Expand to a new industry getBonusTime() Get bonus time. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster. getCorporation() Get corporation data getDivision(divisionName) Get division data getExpandCityCost() Gets the cost to expand into a new city getExpandIndustryCost(industryName) Gets the cost to expand into a new industry getIndustryTypes() Get list of industry types getInvestmentOffer() Get an offer for investment based on you companies current valuation getMaterialNames() Get list of materials getResearchNames() Get list of research names getUnlockables() Get list of one-time unlockable upgrades getUnlockUpgradeCost(upgradeName) Gets the cost to unlock a one time unlockable upgrade getUpgradeLevel(upgradeName) Get the level of a levelable upgrade getUpgradeLevelCost(upgradeName) Gets the cost to unlock the next level of a levelable upgrade getUpgradeNames() Get list of upgrade names goPublic(numShares) Go public hasUnlockUpgrade(upgradeName) Check if you have a one time unlockable upgrade issueDividends(rate) Issue dividends levelUpgrade(upgradeName) Level an upgrade. sellShares(amount) Sell Shares unlockUpgrade(upgradeName) Unlock an upgrade","title":"Bitburner.corporation"},{"location":"bitburner.corporation/#corporation-interface","text":"Corporation API Signature: export interface Corporation extends WarehouseAPI, OfficeAPI Extends: WarehouseAPI , OfficeAPI","title":"Corporation interface"},{"location":"bitburner.corporation/#methods","text":"Method Description acceptInvestmentOffer() Accept investment based on you companies current valuation bribe(factionName, amountCash) Bribe a faction buyBackShares(amount) Buyback Shares createCorporation(corporationName, selfFund) Create a Corporation expandCity(divisionName, cityName) Expand to a new city expandIndustry(industryType, divisionName) Expand to a new industry getBonusTime() Get bonus time. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster. getCorporation() Get corporation data getDivision(divisionName) Get division data getExpandCityCost() Gets the cost to expand into a new city getExpandIndustryCost(industryName) Gets the cost to expand into a new industry getIndustryTypes() Get list of industry types getInvestmentOffer() Get an offer for investment based on you companies current valuation getMaterialNames() Get list of materials getResearchNames() Get list of research names getUnlockables() Get list of one-time unlockable upgrades getUnlockUpgradeCost(upgradeName) Gets the cost to unlock a one time unlockable upgrade getUpgradeLevel(upgradeName) Get the level of a levelable upgrade getUpgradeLevelCost(upgradeName) Gets the cost to unlock the next level of a levelable upgrade getUpgradeNames() Get list of upgrade names goPublic(numShares) Go public hasUnlockUpgrade(upgradeName) Check if you have a one time unlockable upgrade issueDividends(rate) Issue dividends levelUpgrade(upgradeName) Level an upgrade. sellShares(amount) Sell Shares unlockUpgrade(upgradeName) Unlock an upgrade","title":"Methods"},{"location":"bitburner.corporation.sellshares/","text":"Home > bitburner > Corporation > sellShares Corporation.sellShares() method Sell Shares Signature: sellShares(amount: number): void; Parameters Parameter Type Description amount number Amount of shares to sell. Returns: void","title":"Bitburner.corporation.sellshares"},{"location":"bitburner.corporation.sellshares/#corporationsellshares-method","text":"Sell Shares Signature: sellShares(amount: number): void;","title":"Corporation.sellShares() method"},{"location":"bitburner.corporation.sellshares/#parameters","text":"Parameter Type Description amount number Amount of shares to sell. Returns: void","title":"Parameters"},{"location":"bitburner.corporation.unlockupgrade/","text":"Home > bitburner > Corporation > unlockUpgrade Corporation.unlockUpgrade() method Unlock an upgrade Signature: unlockUpgrade(upgradeName: string): void; Parameters Parameter Type Description upgradeName string Name of the upgrade Returns: void","title":"Bitburner.corporation.unlockupgrade"},{"location":"bitburner.corporation.unlockupgrade/#corporationunlockupgrade-method","text":"Unlock an upgrade Signature: unlockUpgrade(upgradeName: string): void;","title":"Corporation.unlockUpgrade() method"},{"location":"bitburner.corporation.unlockupgrade/#parameters","text":"Parameter Type Description upgradeName string Name of the upgrade Returns: void","title":"Parameters"},{"location":"bitburner.corporationinfo.dividendearnings/","text":"Home > bitburner > CorporationInfo > dividendEarnings CorporationInfo.dividendEarnings property Your earnings as a shareholder per second this cycle Signature: dividendEarnings: number;","title":"Bitburner.corporationinfo.dividendearnings"},{"location":"bitburner.corporationinfo.dividendearnings/#corporationinfodividendearnings-property","text":"Your earnings as a shareholder per second this cycle Signature: dividendEarnings: number;","title":"CorporationInfo.dividendEarnings property"},{"location":"bitburner.corporationinfo.dividendrate/","text":"Home > bitburner > CorporationInfo > dividendRate CorporationInfo.dividendRate property Fraction of profits issued as dividends Signature: dividendRate: number;","title":"Bitburner.corporationinfo.dividendrate"},{"location":"bitburner.corporationinfo.dividendrate/#corporationinfodividendrate-property","text":"Fraction of profits issued as dividends Signature: dividendRate: number;","title":"CorporationInfo.dividendRate property"},{"location":"bitburner.corporationinfo.dividendtax/","text":"Home > bitburner > CorporationInfo > dividendTax CorporationInfo.dividendTax property Tax applied on your earnings as a shareholder Signature: dividendTax: number;","title":"Bitburner.corporationinfo.dividendtax"},{"location":"bitburner.corporationinfo.dividendtax/#corporationinfodividendtax-property","text":"Tax applied on your earnings as a shareholder Signature: dividendTax: number;","title":"CorporationInfo.dividendTax property"},{"location":"bitburner.corporationinfo.divisions/","text":"Home > bitburner > CorporationInfo > divisions CorporationInfo.divisions property Array of all divisions Signature: divisions: Division[];","title":"Bitburner.corporationinfo.divisions"},{"location":"bitburner.corporationinfo.divisions/#corporationinfodivisions-property","text":"Array of all divisions Signature: divisions: Division[];","title":"CorporationInfo.divisions property"},{"location":"bitburner.corporationinfo.expenses/","text":"Home > bitburner > CorporationInfo > expenses CorporationInfo.expenses property Expenses per second this cycle Signature: expenses: number;","title":"Bitburner.corporationinfo.expenses"},{"location":"bitburner.corporationinfo.expenses/#corporationinfoexpenses-property","text":"Expenses per second this cycle Signature: expenses: number;","title":"CorporationInfo.expenses property"},{"location":"bitburner.corporationinfo.funds/","text":"Home > bitburner > CorporationInfo > funds CorporationInfo.funds property Funds available Signature: funds: number;","title":"Bitburner.corporationinfo.funds"},{"location":"bitburner.corporationinfo.funds/#corporationinfofunds-property","text":"Funds available Signature: funds: number;","title":"CorporationInfo.funds property"},{"location":"bitburner.corporationinfo.issuedshares/","text":"Home > bitburner > CorporationInfo > issuedShares CorporationInfo.issuedShares property Amount of acquirable shares. Signature: issuedShares: number;","title":"Bitburner.corporationinfo.issuedshares"},{"location":"bitburner.corporationinfo.issuedshares/#corporationinfoissuedshares-property","text":"Amount of acquirable shares. Signature: issuedShares: number;","title":"CorporationInfo.issuedShares property"},{"location":"bitburner.corporationinfo/","text":"Home > bitburner > CorporationInfo CorporationInfo interface General info about a corporation Signature: interface CorporationInfo Properties Property Type Description dividendEarnings number Your earnings as a shareholder per second this cycle dividendRate number Fraction of profits issued as dividends dividendTax number Tax applied on your earnings as a shareholder divisions Division [] Array of all divisions expenses number Expenses per second this cycle funds number Funds available issuedShares number Amount of acquirable shares. name string Name of the corporation numShares number Amount of share owned public boolean Indicating if the company is public revenue number Revenue per second this cycle sharePrice number Price of the shares shareSaleCooldown number Cooldown until shares can be sold again state string State of the corporation. Possible states are START, PURCHASE, PRODUCTION, SALE, EXPORT. totalShares number Total number of shares issues by this corporation","title":"Bitburner.corporationinfo"},{"location":"bitburner.corporationinfo/#corporationinfo-interface","text":"General info about a corporation Signature: interface CorporationInfo","title":"CorporationInfo interface"},{"location":"bitburner.corporationinfo/#properties","text":"Property Type Description dividendEarnings number Your earnings as a shareholder per second this cycle dividendRate number Fraction of profits issued as dividends dividendTax number Tax applied on your earnings as a shareholder divisions Division [] Array of all divisions expenses number Expenses per second this cycle funds number Funds available issuedShares number Amount of acquirable shares. name string Name of the corporation numShares number Amount of share owned public boolean Indicating if the company is public revenue number Revenue per second this cycle sharePrice number Price of the shares shareSaleCooldown number Cooldown until shares can be sold again state string State of the corporation. Possible states are START, PURCHASE, PRODUCTION, SALE, EXPORT. totalShares number Total number of shares issues by this corporation","title":"Properties"},{"location":"bitburner.corporationinfo.name/","text":"Home > bitburner > CorporationInfo > name CorporationInfo.name property Name of the corporation Signature: name: string;","title":"Bitburner.corporationinfo.name"},{"location":"bitburner.corporationinfo.name/#corporationinfoname-property","text":"Name of the corporation Signature: name: string;","title":"CorporationInfo.name property"},{"location":"bitburner.corporationinfo.numshares/","text":"Home > bitburner > CorporationInfo > numShares CorporationInfo.numShares property Amount of share owned Signature: numShares: number;","title":"Bitburner.corporationinfo.numshares"},{"location":"bitburner.corporationinfo.numshares/#corporationinfonumshares-property","text":"Amount of share owned Signature: numShares: number;","title":"CorporationInfo.numShares property"},{"location":"bitburner.corporationinfo.public/","text":"Home > bitburner > CorporationInfo > public CorporationInfo.public property Indicating if the company is public Signature: public: boolean;","title":"Bitburner.corporationinfo.public"},{"location":"bitburner.corporationinfo.public/#corporationinfopublic-property","text":"Indicating if the company is public Signature: public: boolean;","title":"CorporationInfo.public property"},{"location":"bitburner.corporationinfo.revenue/","text":"Home > bitburner > CorporationInfo > revenue CorporationInfo.revenue property Revenue per second this cycle Signature: revenue: number;","title":"Bitburner.corporationinfo.revenue"},{"location":"bitburner.corporationinfo.revenue/#corporationinforevenue-property","text":"Revenue per second this cycle Signature: revenue: number;","title":"CorporationInfo.revenue property"},{"location":"bitburner.corporationinfo.shareprice/","text":"Home > bitburner > CorporationInfo > sharePrice CorporationInfo.sharePrice property Price of the shares Signature: sharePrice: number;","title":"Bitburner.corporationinfo.shareprice"},{"location":"bitburner.corporationinfo.shareprice/#corporationinfoshareprice-property","text":"Price of the shares Signature: sharePrice: number;","title":"CorporationInfo.sharePrice property"},{"location":"bitburner.corporationinfo.sharesalecooldown/","text":"Home > bitburner > CorporationInfo > shareSaleCooldown CorporationInfo.shareSaleCooldown property Cooldown until shares can be sold again Signature: shareSaleCooldown: number;","title":"Bitburner.corporationinfo.sharesalecooldown"},{"location":"bitburner.corporationinfo.sharesalecooldown/#corporationinfosharesalecooldown-property","text":"Cooldown until shares can be sold again Signature: shareSaleCooldown: number;","title":"CorporationInfo.shareSaleCooldown property"},{"location":"bitburner.corporationinfo.state/","text":"Home > bitburner > CorporationInfo > state CorporationInfo.state property State of the corporation. Possible states are START, PURCHASE, PRODUCTION, SALE, EXPORT. Signature: state: string;","title":"Bitburner.corporationinfo.state"},{"location":"bitburner.corporationinfo.state/#corporationinfostate-property","text":"State of the corporation. Possible states are START, PURCHASE, PRODUCTION, SALE, EXPORT. Signature: state: string;","title":"CorporationInfo.state property"},{"location":"bitburner.corporationinfo.totalshares/","text":"Home > bitburner > CorporationInfo > totalShares CorporationInfo.totalShares property Total number of shares issues by this corporation Signature: totalShares: number;","title":"Bitburner.corporationinfo.totalshares"},{"location":"bitburner.corporationinfo.totalshares/#corporationinfototalshares-property","text":"Total number of shares issues by this corporation Signature: totalShares: number;","title":"CorporationInfo.totalShares property"},{"location":"bitburner.crimenames/","text":"Home > bitburner > CrimeNames CrimeNames type Signature: type CrimeNames = `${CrimeType}`; References: CrimeType","title":"Bitburner.crimenames"},{"location":"bitburner.crimenames/#crimenames-type","text":"Signature: type CrimeNames = `${CrimeType}`; References: CrimeType","title":"CrimeNames type"},{"location":"bitburner.crimestats.agility_exp/","text":"Home > bitburner > CrimeStats > agility_exp CrimeStats.agility_exp property agility exp gained from crime Signature: agility_exp: number;","title":"Bitburner.crimestats.agility exp"},{"location":"bitburner.crimestats.agility_exp/#crimestatsagility_exp-property","text":"agility exp gained from crime Signature: agility_exp: number;","title":"CrimeStats.agility_exp property"},{"location":"bitburner.crimestats.agility_success_weight/","text":"Home > bitburner > CrimeStats > agility_success_weight CrimeStats.agility_success_weight property agility level impact on success change of the crime Signature: agility_success_weight: number;","title":"Bitburner.crimestats.agility success weight"},{"location":"bitburner.crimestats.agility_success_weight/#crimestatsagility_success_weight-property","text":"agility level impact on success change of the crime Signature: agility_success_weight: number;","title":"CrimeStats.agility_success_weight property"},{"location":"bitburner.crimestats.charisma_exp/","text":"Home > bitburner > CrimeStats > charisma_exp CrimeStats.charisma_exp property charisma exp gained from crime Signature: charisma_exp: number;","title":"Bitburner.crimestats.charisma exp"},{"location":"bitburner.crimestats.charisma_exp/#crimestatscharisma_exp-property","text":"charisma exp gained from crime Signature: charisma_exp: number;","title":"CrimeStats.charisma_exp property"},{"location":"bitburner.crimestats.charisma_success_weight/","text":"Home > bitburner > CrimeStats > charisma_success_weight CrimeStats.charisma_success_weight property charisma level impact on success change of the crime Signature: charisma_success_weight: number;","title":"Bitburner.crimestats.charisma success weight"},{"location":"bitburner.crimestats.charisma_success_weight/#crimestatscharisma_success_weight-property","text":"charisma level impact on success change of the crime Signature: charisma_success_weight: number;","title":"CrimeStats.charisma_success_weight property"},{"location":"bitburner.crimestats.defense_exp/","text":"Home > bitburner > CrimeStats > defense_exp CrimeStats.defense_exp property defense exp gained from crime Signature: defense_exp: number;","title":"Bitburner.crimestats.defense exp"},{"location":"bitburner.crimestats.defense_exp/#crimestatsdefense_exp-property","text":"defense exp gained from crime Signature: defense_exp: number;","title":"CrimeStats.defense_exp property"},{"location":"bitburner.crimestats.defense_success_weight/","text":"Home > bitburner > CrimeStats > defense_success_weight CrimeStats.defense_success_weight property defense level impact on success change of the crime Signature: defense_success_weight: number;","title":"Bitburner.crimestats.defense success weight"},{"location":"bitburner.crimestats.defense_success_weight/#crimestatsdefense_success_weight-property","text":"defense level impact on success change of the crime Signature: defense_success_weight: number;","title":"CrimeStats.defense_success_weight property"},{"location":"bitburner.crimestats.dexterity_exp/","text":"Home > bitburner > CrimeStats > dexterity_exp CrimeStats.dexterity_exp property dexterity exp gained from crime Signature: dexterity_exp: number;","title":"Bitburner.crimestats.dexterity exp"},{"location":"bitburner.crimestats.dexterity_exp/#crimestatsdexterity_exp-property","text":"dexterity exp gained from crime Signature: dexterity_exp: number;","title":"CrimeStats.dexterity_exp property"},{"location":"bitburner.crimestats.dexterity_success_weight/","text":"Home > bitburner > CrimeStats > dexterity_success_weight CrimeStats.dexterity_success_weight property dexterity level impact on success change of the crime Signature: dexterity_success_weight: number;","title":"Bitburner.crimestats.dexterity success weight"},{"location":"bitburner.crimestats.dexterity_success_weight/#crimestatsdexterity_success_weight-property","text":"dexterity level impact on success change of the crime Signature: dexterity_success_weight: number;","title":"CrimeStats.dexterity_success_weight property"},{"location":"bitburner.crimestats.difficulty/","text":"Home > bitburner > CrimeStats > difficulty CrimeStats.difficulty property Number representing the difficulty of the crime. Used for success chance calculations Signature: difficulty: number;","title":"Bitburner.crimestats.difficulty"},{"location":"bitburner.crimestats.difficulty/#crimestatsdifficulty-property","text":"Number representing the difficulty of the crime. Used for success chance calculations Signature: difficulty: number;","title":"CrimeStats.difficulty property"},{"location":"bitburner.crimestats.hacking_exp/","text":"Home > bitburner > CrimeStats > hacking_exp CrimeStats.hacking_exp property hacking exp gained from crime Signature: hacking_exp: number;","title":"Bitburner.crimestats.hacking exp"},{"location":"bitburner.crimestats.hacking_exp/#crimestatshacking_exp-property","text":"hacking exp gained from crime Signature: hacking_exp: number;","title":"CrimeStats.hacking_exp property"},{"location":"bitburner.crimestats.hacking_success_weight/","text":"Home > bitburner > CrimeStats > hacking_success_weight CrimeStats.hacking_success_weight property hacking level impact on success change of the crime Signature: hacking_success_weight: number;","title":"Bitburner.crimestats.hacking success weight"},{"location":"bitburner.crimestats.hacking_success_weight/#crimestatshacking_success_weight-property","text":"hacking level impact on success change of the crime Signature: hacking_success_weight: number;","title":"CrimeStats.hacking_success_weight property"},{"location":"bitburner.crimestats.intelligence_exp/","text":"Home > bitburner > CrimeStats > intelligence_exp CrimeStats.intelligence_exp property intelligence exp gained from crime Signature: intelligence_exp: number;","title":"Bitburner.crimestats.intelligence exp"},{"location":"bitburner.crimestats.intelligence_exp/#crimestatsintelligence_exp-property","text":"intelligence exp gained from crime Signature: intelligence_exp: number;","title":"CrimeStats.intelligence_exp property"},{"location":"bitburner.crimestats.karma/","text":"Home > bitburner > CrimeStats > karma CrimeStats.karma property Amount of karma lost for successfully committing this crime Signature: karma: number;","title":"Bitburner.crimestats.karma"},{"location":"bitburner.crimestats.karma/#crimestatskarma-property","text":"Amount of karma lost for successfully committing this crime Signature: karma: number;","title":"CrimeStats.karma property"},{"location":"bitburner.crimestats.kills/","text":"Home > bitburner > CrimeStats > kills CrimeStats.kills property How many people die as a result of this crime Signature: kills: number;","title":"Bitburner.crimestats.kills"},{"location":"bitburner.crimestats.kills/#crimestatskills-property","text":"How many people die as a result of this crime Signature: kills: number;","title":"CrimeStats.kills property"},{"location":"bitburner.crimestats/","text":"Home > bitburner > CrimeStats CrimeStats interface Data representing the internal values of a crime. Signature: export interface CrimeStats Properties Property Type Description agility_exp number agility exp gained from crime agility_success_weight number agility level impact on success change of the crime charisma_exp number charisma exp gained from crime charisma_success_weight number charisma level impact on success change of the crime defense_exp number defense exp gained from crime defense_success_weight number defense level impact on success change of the crime dexterity_exp number dexterity exp gained from crime dexterity_success_weight number dexterity level impact on success change of the crime difficulty number Number representing the difficulty of the crime. Used for success chance calculations hacking_exp number hacking exp gained from crime hacking_success_weight number hacking level impact on success change of the crime intelligence_exp number intelligence exp gained from crime karma number Amount of karma lost for successfully committing this crime kills number How many people die as a result of this crime money number How much money is given name string Name of crime strength_exp number strength exp gained from crime strength_success_weight number strength level impact on success change of the crime time number Milliseconds it takes to attempt the crime type string Description of the crime activity","title":"Bitburner.crimestats"},{"location":"bitburner.crimestats/#crimestats-interface","text":"Data representing the internal values of a crime. Signature: export interface CrimeStats","title":"CrimeStats interface"},{"location":"bitburner.crimestats/#properties","text":"Property Type Description agility_exp number agility exp gained from crime agility_success_weight number agility level impact on success change of the crime charisma_exp number charisma exp gained from crime charisma_success_weight number charisma level impact on success change of the crime defense_exp number defense exp gained from crime defense_success_weight number defense level impact on success change of the crime dexterity_exp number dexterity exp gained from crime dexterity_success_weight number dexterity level impact on success change of the crime difficulty number Number representing the difficulty of the crime. Used for success chance calculations hacking_exp number hacking exp gained from crime hacking_success_weight number hacking level impact on success change of the crime intelligence_exp number intelligence exp gained from crime karma number Amount of karma lost for successfully committing this crime kills number How many people die as a result of this crime money number How much money is given name string Name of crime strength_exp number strength exp gained from crime strength_success_weight number strength level impact on success change of the crime time number Milliseconds it takes to attempt the crime type string Description of the crime activity","title":"Properties"},{"location":"bitburner.crimestats.money/","text":"Home > bitburner > CrimeStats > money CrimeStats.money property How much money is given Signature: money: number;","title":"Bitburner.crimestats.money"},{"location":"bitburner.crimestats.money/#crimestatsmoney-property","text":"How much money is given Signature: money: number;","title":"CrimeStats.money property"},{"location":"bitburner.crimestats.name/","text":"Home > bitburner > CrimeStats > name CrimeStats.name property Name of crime Signature: name: string;","title":"Bitburner.crimestats.name"},{"location":"bitburner.crimestats.name/#crimestatsname-property","text":"Name of crime Signature: name: string;","title":"CrimeStats.name property"},{"location":"bitburner.crimestats.strength_exp/","text":"Home > bitburner > CrimeStats > strength_exp CrimeStats.strength_exp property strength exp gained from crime Signature: strength_exp: number;","title":"Bitburner.crimestats.strength exp"},{"location":"bitburner.crimestats.strength_exp/#crimestatsstrength_exp-property","text":"strength exp gained from crime Signature: strength_exp: number;","title":"CrimeStats.strength_exp property"},{"location":"bitburner.crimestats.strength_success_weight/","text":"Home > bitburner > CrimeStats > strength_success_weight CrimeStats.strength_success_weight property strength level impact on success change of the crime Signature: strength_success_weight: number;","title":"Bitburner.crimestats.strength success weight"},{"location":"bitburner.crimestats.strength_success_weight/#crimestatsstrength_success_weight-property","text":"strength level impact on success change of the crime Signature: strength_success_weight: number;","title":"CrimeStats.strength_success_weight property"},{"location":"bitburner.crimestats.time/","text":"Home > bitburner > CrimeStats > time CrimeStats.time property Milliseconds it takes to attempt the crime Signature: time: number;","title":"Bitburner.crimestats.time"},{"location":"bitburner.crimestats.time/#crimestatstime-property","text":"Milliseconds it takes to attempt the crime Signature: time: number;","title":"CrimeStats.time property"},{"location":"bitburner.crimestats.type/","text":"Home > bitburner > CrimeStats > type CrimeStats.type property Description of the crime activity Signature: type: string;","title":"Bitburner.crimestats.type"},{"location":"bitburner.crimestats.type/#crimestatstype-property","text":"Description of the crime activity Signature: type: string;","title":"CrimeStats.type property"},{"location":"bitburner.crimetype/","text":"Home > bitburner > CrimeType CrimeType enum Signature: declare enum CrimeType Enumeration Members Member Value Description ASSASSINATION \"ASSASSINATION\" BOND_FORGERY \"BONDFORGERY\" DRUGS \"DRUGS\" GRAND_THEFT_AUTO \"GRANDTHEFTAUTO\" HEIST \"HEIST\" HOMICIDE \"HOMICIDE\" KIDNAP \"KIDNAP\" LARCENY \"LARCENY\" MUG \"MUG\" ROB_STORE \"ROBSTORE\" SHOPLIFT \"SHOPLIFT\" TRAFFIC_ARMS \"TRAFFICKARMS\"","title":"Bitburner.crimetype"},{"location":"bitburner.crimetype/#crimetype-enum","text":"Signature: declare enum CrimeType","title":"CrimeType enum"},{"location":"bitburner.crimetype/#enumeration-members","text":"Member Value Description ASSASSINATION \"ASSASSINATION\" BOND_FORGERY \"BONDFORGERY\" DRUGS \"DRUGS\" GRAND_THEFT_AUTO \"GRANDTHEFTAUTO\" HEIST \"HEIST\" HOMICIDE \"HOMICIDE\" KIDNAP \"KIDNAP\" LARCENY \"LARCENY\" MUG \"MUG\" ROB_STORE \"ROBSTORE\" SHOPLIFT \"SHOPLIFT\" TRAFFIC_ARMS \"TRAFFICKARMS\"","title":"Enumeration Members"},{"location":"bitburner.division.awareness/","text":"Home > bitburner > Division > awareness Division.awareness property Awareness of the division Signature: awareness: number;","title":"Bitburner.division.awareness"},{"location":"bitburner.division.awareness/#divisionawareness-property","text":"Awareness of the division Signature: awareness: number;","title":"Division.awareness property"},{"location":"bitburner.division.cities/","text":"Home > bitburner > Division > cities Division.cities property Cities in which this division has expanded Signature: cities: string[];","title":"Bitburner.division.cities"},{"location":"bitburner.division.cities/#divisioncities-property","text":"Cities in which this division has expanded Signature: cities: string[];","title":"Division.cities property"},{"location":"bitburner.division.lastcycleexpenses/","text":"Home > bitburner > Division > lastCycleExpenses Division.lastCycleExpenses property Expenses last cycle Signature: lastCycleExpenses: number;","title":"Bitburner.division.lastcycleexpenses"},{"location":"bitburner.division.lastcycleexpenses/#divisionlastcycleexpenses-property","text":"Expenses last cycle Signature: lastCycleExpenses: number;","title":"Division.lastCycleExpenses property"},{"location":"bitburner.division.lastcyclerevenue/","text":"Home > bitburner > Division > lastCycleRevenue Division.lastCycleRevenue property Revenue last cycle Signature: lastCycleRevenue: number;","title":"Bitburner.division.lastcyclerevenue"},{"location":"bitburner.division.lastcyclerevenue/#divisionlastcyclerevenue-property","text":"Revenue last cycle Signature: lastCycleRevenue: number;","title":"Division.lastCycleRevenue property"},{"location":"bitburner.division.makesproducts/","text":"Home > bitburner > Division > makesProducts Division.makesProducts property Whether the industry this division is in is capable of making products Signature: makesProducts: boolean;","title":"Bitburner.division.makesproducts"},{"location":"bitburner.division.makesproducts/#divisionmakesproducts-property","text":"Whether the industry this division is in is capable of making products Signature: makesProducts: boolean;","title":"Division.makesProducts property"},{"location":"bitburner.division/","text":"Home > bitburner > Division Division interface Corporation division Signature: interface Division Properties Property Type Description awareness number Awareness of the division cities string[] Cities in which this division has expanded lastCycleExpenses number Expenses last cycle lastCycleRevenue number Revenue last cycle makesProducts boolean Whether the industry this division is in is capable of making products name string Name of the division popularity number Popularity of the division prodMult number Production multiplier products string[] Products developed by this division research number Amount of research in that division thisCycleExpenses number Expenses this cycle thisCycleRevenue number Revenue this cycle type string Type of division, like Agriculture upgrades number[] All research bought","title":"Bitburner.division"},{"location":"bitburner.division/#division-interface","text":"Corporation division Signature: interface Division","title":"Division interface"},{"location":"bitburner.division/#properties","text":"Property Type Description awareness number Awareness of the division cities string[] Cities in which this division has expanded lastCycleExpenses number Expenses last cycle lastCycleRevenue number Revenue last cycle makesProducts boolean Whether the industry this division is in is capable of making products name string Name of the division popularity number Popularity of the division prodMult number Production multiplier products string[] Products developed by this division research number Amount of research in that division thisCycleExpenses number Expenses this cycle thisCycleRevenue number Revenue this cycle type string Type of division, like Agriculture upgrades number[] All research bought","title":"Properties"},{"location":"bitburner.division.name/","text":"Home > bitburner > Division > name Division.name property Name of the division Signature: name: string;","title":"Bitburner.division.name"},{"location":"bitburner.division.name/#divisionname-property","text":"Name of the division Signature: name: string;","title":"Division.name property"},{"location":"bitburner.division.popularity/","text":"Home > bitburner > Division > popularity Division.popularity property Popularity of the division Signature: popularity: number;","title":"Bitburner.division.popularity"},{"location":"bitburner.division.popularity/#divisionpopularity-property","text":"Popularity of the division Signature: popularity: number;","title":"Division.popularity property"},{"location":"bitburner.division.prodmult/","text":"Home > bitburner > Division > prodMult Division.prodMult property Production multiplier Signature: prodMult: number;","title":"Bitburner.division.prodmult"},{"location":"bitburner.division.prodmult/#divisionprodmult-property","text":"Production multiplier Signature: prodMult: number;","title":"Division.prodMult property"},{"location":"bitburner.division.products/","text":"Home > bitburner > Division > products Division.products property Products developed by this division Signature: products: string[];","title":"Bitburner.division.products"},{"location":"bitburner.division.products/#divisionproducts-property","text":"Products developed by this division Signature: products: string[];","title":"Division.products property"},{"location":"bitburner.division.research/","text":"Home > bitburner > Division > research Division.research property Amount of research in that division Signature: research: number;","title":"Bitburner.division.research"},{"location":"bitburner.division.research/#divisionresearch-property","text":"Amount of research in that division Signature: research: number;","title":"Division.research property"},{"location":"bitburner.division.thiscycleexpenses/","text":"Home > bitburner > Division > thisCycleExpenses Division.thisCycleExpenses property Expenses this cycle Signature: thisCycleExpenses: number;","title":"Bitburner.division.thiscycleexpenses"},{"location":"bitburner.division.thiscycleexpenses/#divisionthiscycleexpenses-property","text":"Expenses this cycle Signature: thisCycleExpenses: number;","title":"Division.thisCycleExpenses property"},{"location":"bitburner.division.thiscyclerevenue/","text":"Home > bitburner > Division > thisCycleRevenue Division.thisCycleRevenue property Revenue this cycle Signature: thisCycleRevenue: number;","title":"Bitburner.division.thiscyclerevenue"},{"location":"bitburner.division.thiscyclerevenue/#divisionthiscyclerevenue-property","text":"Revenue this cycle Signature: thisCycleRevenue: number;","title":"Division.thisCycleRevenue property"},{"location":"bitburner.division.type/","text":"Home > bitburner > Division > type Division.type property Type of division, like Agriculture Signature: type: string;","title":"Bitburner.division.type"},{"location":"bitburner.division.type/#divisiontype-property","text":"Type of division, like Agriculture Signature: type: string;","title":"Division.type property"},{"location":"bitburner.division.upgrades/","text":"Home > bitburner > Division > upgrades Division.upgrades property All research bought Signature: upgrades: number[];","title":"Bitburner.division.upgrades"},{"location":"bitburner.division.upgrades/#divisionupgrades-property","text":"All research bought Signature: upgrades: number[];","title":"Division.upgrades property"},{"location":"bitburner.employee.cha/","text":"Home > bitburner > Employee > cha Employee.cha property Charisma of the employee Signature: cha: number;","title":"Bitburner.employee.cha"},{"location":"bitburner.employee.cha/#employeecha-property","text":"Charisma of the employee Signature: cha: number;","title":"Employee.cha property"},{"location":"bitburner.employee.cre/","text":"Home > bitburner > Employee > cre Employee.cre property Creativity of the employee Signature: cre: number;","title":"Bitburner.employee.cre"},{"location":"bitburner.employee.cre/#employeecre-property","text":"Creativity of the employee Signature: cre: number;","title":"Employee.cre property"},{"location":"bitburner.employee.eff/","text":"Home > bitburner > Employee > eff Employee.eff property Efficiency of the employee Signature: eff: number;","title":"Bitburner.employee.eff"},{"location":"bitburner.employee.eff/#employeeeff-property","text":"Efficiency of the employee Signature: eff: number;","title":"Employee.eff property"},{"location":"bitburner.employee.ene/","text":"Home > bitburner > Employee > ene Employee.ene property Energy of the employee Signature: ene: number;","title":"Bitburner.employee.ene"},{"location":"bitburner.employee.ene/#employeeene-property","text":"Energy of the employee Signature: ene: number;","title":"Employee.ene property"},{"location":"bitburner.employee.exp/","text":"Home > bitburner > Employee > exp Employee.exp property Experience of the employee Signature: exp: number;","title":"Bitburner.employee.exp"},{"location":"bitburner.employee.exp/#employeeexp-property","text":"Experience of the employee Signature: exp: number;","title":"Employee.exp property"},{"location":"bitburner.employee.hap/","text":"Home > bitburner > Employee > hap Employee.hap property Happiness of the employee Signature: hap: number;","title":"Bitburner.employee.hap"},{"location":"bitburner.employee.hap/#employeehap-property","text":"Happiness of the employee Signature: hap: number;","title":"Employee.hap property"},{"location":"bitburner.employee.int/","text":"Home > bitburner > Employee > int Employee.int property Intelligence of the employee Signature: int: number;","title":"Bitburner.employee.int"},{"location":"bitburner.employee.int/#employeeint-property","text":"Intelligence of the employee Signature: int: number;","title":"Employee.int property"},{"location":"bitburner.employee.loc/","text":"Home > bitburner > Employee > loc Employee.loc property Current Location (city) Signature: loc: string;","title":"Bitburner.employee.loc"},{"location":"bitburner.employee.loc/#employeeloc-property","text":"Current Location (city) Signature: loc: string;","title":"Employee.loc property"},{"location":"bitburner.employee/","text":"Home > bitburner > Employee Employee interface Employee in an office Signature: export interface Employee Properties Property Type Description cha number Charisma of the employee cre number Creativity of the employee eff number Efficiency of the employee ene number Energy of the employee exp number Experience of the employee hap number Happiness of the employee int number Intelligence of the employee loc string Current Location (city) mor number Morale of the employee name string Name of the employee pos string Current job position sal number Salary of the employee","title":"Bitburner.employee"},{"location":"bitburner.employee/#employee-interface","text":"Employee in an office Signature: export interface Employee","title":"Employee interface"},{"location":"bitburner.employee/#properties","text":"Property Type Description cha number Charisma of the employee cre number Creativity of the employee eff number Efficiency of the employee ene number Energy of the employee exp number Experience of the employee hap number Happiness of the employee int number Intelligence of the employee loc string Current Location (city) mor number Morale of the employee name string Name of the employee pos string Current job position sal number Salary of the employee","title":"Properties"},{"location":"bitburner.employee.mor/","text":"Home > bitburner > Employee > mor Employee.mor property Morale of the employee Signature: mor: number;","title":"Bitburner.employee.mor"},{"location":"bitburner.employee.mor/#employeemor-property","text":"Morale of the employee Signature: mor: number;","title":"Employee.mor property"},{"location":"bitburner.employee.name/","text":"Home > bitburner > Employee > name Employee.name property Name of the employee Signature: name: string;","title":"Bitburner.employee.name"},{"location":"bitburner.employee.name/#employeename-property","text":"Name of the employee Signature: name: string;","title":"Employee.name property"},{"location":"bitburner.employee.pos/","text":"Home > bitburner > Employee > pos Employee.pos property Current job position Signature: pos: string;","title":"Bitburner.employee.pos"},{"location":"bitburner.employee.pos/#employeepos-property","text":"Current job position Signature: pos: string;","title":"Employee.pos property"},{"location":"bitburner.employee.sal/","text":"Home > bitburner > Employee > sal Employee.sal property Salary of the employee Signature: sal: number;","title":"Bitburner.employee.sal"},{"location":"bitburner.employee.sal/#employeesal-property","text":"Salary of the employee Signature: sal: number;","title":"Employee.sal property"},{"location":"bitburner.employeejobs._research___development_/","text":"Home > bitburner > EmployeeJobs > \"Research & Development\" EmployeeJobs.\"Research & Development\" property Signature: \"Research & Development\": number;","title":"Bitburner.employeejobs. research   development "},{"location":"bitburner.employeejobs._research___development_/#employeejobsresearch-development-property","text":"Signature: \"Research & Development\": number;","title":"EmployeeJobs.\"Research &amp; Development\" property"},{"location":"bitburner.employeejobs.business/","text":"Home > bitburner > EmployeeJobs > Business EmployeeJobs.Business property Signature: Business: number;","title":"Bitburner.employeejobs.business"},{"location":"bitburner.employeejobs.business/#employeejobsbusiness-property","text":"Signature: Business: number;","title":"EmployeeJobs.Business property"},{"location":"bitburner.employeejobs.engineer/","text":"Home > bitburner > EmployeeJobs > Engineer EmployeeJobs.Engineer property Signature: Engineer: number;","title":"Bitburner.employeejobs.engineer"},{"location":"bitburner.employeejobs.engineer/#employeejobsengineer-property","text":"Signature: Engineer: number;","title":"EmployeeJobs.Engineer property"},{"location":"bitburner.employeejobs.management/","text":"Home > bitburner > EmployeeJobs > Management EmployeeJobs.Management property Signature: Management: number;","title":"Bitburner.employeejobs.management"},{"location":"bitburner.employeejobs.management/#employeejobsmanagement-property","text":"Signature: Management: number;","title":"EmployeeJobs.Management property"},{"location":"bitburner.employeejobs/","text":"Home > bitburner > EmployeeJobs EmployeeJobs interface Object representing the number of employee in each job. Signature: interface EmployeeJobs Properties Property Type Description \"Research & Development\" number Business number Engineer number Management number Operations number Training number Unassigned number","title":"Bitburner.employeejobs"},{"location":"bitburner.employeejobs/#employeejobs-interface","text":"Object representing the number of employee in each job. Signature: interface EmployeeJobs","title":"EmployeeJobs interface"},{"location":"bitburner.employeejobs/#properties","text":"Property Type Description \"Research & Development\" number Business number Engineer number Management number Operations number Training number Unassigned number","title":"Properties"},{"location":"bitburner.employeejobs.operations/","text":"Home > bitburner > EmployeeJobs > Operations EmployeeJobs.Operations property Signature: Operations: number;","title":"Bitburner.employeejobs.operations"},{"location":"bitburner.employeejobs.operations/#employeejobsoperations-property","text":"Signature: Operations: number;","title":"EmployeeJobs.Operations property"},{"location":"bitburner.employeejobs.training/","text":"Home > bitburner > EmployeeJobs > Training EmployeeJobs.Training property Signature: Training: number;","title":"Bitburner.employeejobs.training"},{"location":"bitburner.employeejobs.training/#employeejobstraining-property","text":"Signature: Training: number;","title":"EmployeeJobs.Training property"},{"location":"bitburner.employeejobs.unassigned/","text":"Home > bitburner > EmployeeJobs > Unassigned EmployeeJobs.Unassigned property Signature: Unassigned: number;","title":"Bitburner.employeejobs.unassigned"},{"location":"bitburner.employeejobs.unassigned/#employeejobsunassigned-property","text":"Signature: Unassigned: number;","title":"EmployeeJobs.Unassigned property"},{"location":"bitburner.equipmentstats.agi/","text":"Home > bitburner > EquipmentStats > agi EquipmentStats.agi property Agility multiplier Signature: agi?: number;","title":"Bitburner.equipmentstats.agi"},{"location":"bitburner.equipmentstats.agi/#equipmentstatsagi-property","text":"Agility multiplier Signature: agi?: number;","title":"EquipmentStats.agi property"},{"location":"bitburner.equipmentstats.cha/","text":"Home > bitburner > EquipmentStats > cha EquipmentStats.cha property Charisma multiplier Signature: cha?: number;","title":"Bitburner.equipmentstats.cha"},{"location":"bitburner.equipmentstats.cha/#equipmentstatscha-property","text":"Charisma multiplier Signature: cha?: number;","title":"EquipmentStats.cha property"},{"location":"bitburner.equipmentstats.def/","text":"Home > bitburner > EquipmentStats > def EquipmentStats.def property Defense multiplier Signature: def?: number;","title":"Bitburner.equipmentstats.def"},{"location":"bitburner.equipmentstats.def/#equipmentstatsdef-property","text":"Defense multiplier Signature: def?: number;","title":"EquipmentStats.def property"},{"location":"bitburner.equipmentstats.dex/","text":"Home > bitburner > EquipmentStats > dex EquipmentStats.dex property Dexterity multiplier Signature: dex?: number;","title":"Bitburner.equipmentstats.dex"},{"location":"bitburner.equipmentstats.dex/#equipmentstatsdex-property","text":"Dexterity multiplier Signature: dex?: number;","title":"EquipmentStats.dex property"},{"location":"bitburner.equipmentstats.hack/","text":"Home > bitburner > EquipmentStats > hack EquipmentStats.hack property Hacking multiplier Signature: hack?: number;","title":"Bitburner.equipmentstats.hack"},{"location":"bitburner.equipmentstats.hack/#equipmentstatshack-property","text":"Hacking multiplier Signature: hack?: number;","title":"EquipmentStats.hack property"},{"location":"bitburner.equipmentstats/","text":"Home > bitburner > EquipmentStats EquipmentStats interface Object representing data representing a gang member equipment. Signature: export interface EquipmentStats Properties Property Type Description agi? number (Optional) Agility multiplier cha? number (Optional) Charisma multiplier def? number (Optional) Defense multiplier dex? number (Optional) Dexterity multiplier hack? number (Optional) Hacking multiplier str? number (Optional) Strength multiplier","title":"Bitburner.equipmentstats"},{"location":"bitburner.equipmentstats/#equipmentstats-interface","text":"Object representing data representing a gang member equipment. Signature: export interface EquipmentStats","title":"EquipmentStats interface"},{"location":"bitburner.equipmentstats/#properties","text":"Property Type Description agi? number (Optional) Agility multiplier cha? number (Optional) Charisma multiplier def? number (Optional) Defense multiplier dex? number (Optional) Dexterity multiplier hack? number (Optional) Hacking multiplier str? number (Optional) Strength multiplier","title":"Properties"},{"location":"bitburner.equipmentstats.str/","text":"Home > bitburner > EquipmentStats > str EquipmentStats.str property Strength multiplier Signature: str?: number;","title":"Bitburner.equipmentstats.str"},{"location":"bitburner.equipmentstats.str/#equipmentstatsstr-property","text":"Strength multiplier Signature: str?: number;","title":"EquipmentStats.str property"},{"location":"bitburner.export.amt/","text":"Home > bitburner > Export > amt Export.amt property Amount of material exported Signature: amt: string;","title":"Bitburner.export.amt"},{"location":"bitburner.export.amt/#exportamt-property","text":"Amount of material exported Signature: amt: string;","title":"Export.amt property"},{"location":"bitburner.export.div/","text":"Home > bitburner > Export > div Export.div property Division the material is being exported to Signature: div: string;","title":"Bitburner.export.div"},{"location":"bitburner.export.div/#exportdiv-property","text":"Division the material is being exported to Signature: div: string;","title":"Export.div property"},{"location":"bitburner.export.loc/","text":"Home > bitburner > Export > loc Export.loc property City the material is being exported to Signature: loc: string;","title":"Bitburner.export.loc"},{"location":"bitburner.export.loc/#exportloc-property","text":"City the material is being exported to Signature: loc: string;","title":"Export.loc property"},{"location":"bitburner.export/","text":"Home > bitburner > Export Export interface Export order for a material Signature: interface Export Properties Property Type Description amt string Amount of material exported div string Division the material is being exported to loc string City the material is being exported to","title":"Bitburner.export"},{"location":"bitburner.export/#export-interface","text":"Export order for a material Signature: interface Export","title":"Export interface"},{"location":"bitburner.export/#properties","text":"Property Type Description amt string Amount of material exported div string Division the material is being exported to loc string City the material is being exported to","title":"Properties"},{"location":"bitburner.filenameorpid/","text":"Home > bitburner > FilenameOrPID FilenameOrPID type Signature: type FilenameOrPID = number | string;","title":"Bitburner.filenameorpid"},{"location":"bitburner.filenameorpid/#filenameorpid-type","text":"Signature: type FilenameOrPID = number | string;","title":"FilenameOrPID type"},{"location":"bitburner.formulas.gang/","text":"Home > bitburner > Formulas > gang Formulas.gang property Gang formulas Signature: gang: GangFormulas;","title":"Bitburner.formulas.gang"},{"location":"bitburner.formulas.gang/#formulasgang-property","text":"Gang formulas Signature: gang: GangFormulas;","title":"Formulas.gang property"},{"location":"bitburner.formulas.hacking/","text":"Home > bitburner > Formulas > hacking Formulas.hacking property Hacking formulas Signature: hacking: HackingFormulas;","title":"Bitburner.formulas.hacking"},{"location":"bitburner.formulas.hacking/#formulashacking-property","text":"Hacking formulas Signature: hacking: HackingFormulas;","title":"Formulas.hacking property"},{"location":"bitburner.formulas.hacknetnodes/","text":"Home > bitburner > Formulas > hacknetNodes Formulas.hacknetNodes property Hacknet Nodes formulas Signature: hacknetNodes: HacknetNodesFormulas;","title":"Bitburner.formulas.hacknetnodes"},{"location":"bitburner.formulas.hacknetnodes/#formulashacknetnodes-property","text":"Hacknet Nodes formulas Signature: hacknetNodes: HacknetNodesFormulas;","title":"Formulas.hacknetNodes property"},{"location":"bitburner.formulas.hacknetservers/","text":"Home > bitburner > Formulas > hacknetServers Formulas.hacknetServers property Hacknet Servers formulas Signature: hacknetServers: HacknetServersFormulas;","title":"Bitburner.formulas.hacknetservers"},{"location":"bitburner.formulas.hacknetservers/#formulashacknetservers-property","text":"Hacknet Servers formulas Signature: hacknetServers: HacknetServersFormulas;","title":"Formulas.hacknetServers property"},{"location":"bitburner.formulas/","text":"Home > bitburner > Formulas Formulas interface Formulas API Signature: export interface Formulas Remarks You need Formulas.exe on your home computer to use this API. Properties Property Type Description gang GangFormulas Gang formulas hacking HackingFormulas Hacking formulas hacknetNodes HacknetNodesFormulas Hacknet Nodes formulas hacknetServers HacknetServersFormulas Hacknet Servers formulas reputation ReputationFormulas Reputation formulas skills SkillsFormulas Skills formulas work WorkFormulas Work formulas Methods Method Description mockPlayer() mockServer()","title":"Bitburner.formulas"},{"location":"bitburner.formulas/#formulas-interface","text":"Formulas API Signature: export interface Formulas","title":"Formulas interface"},{"location":"bitburner.formulas/#remarks","text":"You need Formulas.exe on your home computer to use this API.","title":"Remarks"},{"location":"bitburner.formulas/#properties","text":"Property Type Description gang GangFormulas Gang formulas hacking HackingFormulas Hacking formulas hacknetNodes HacknetNodesFormulas Hacknet Nodes formulas hacknetServers HacknetServersFormulas Hacknet Servers formulas reputation ReputationFormulas Reputation formulas skills SkillsFormulas Skills formulas work WorkFormulas Work formulas","title":"Properties"},{"location":"bitburner.formulas/#methods","text":"Method Description mockPlayer() mockServer()","title":"Methods"},{"location":"bitburner.formulas.mockplayer/","text":"Home > bitburner > Formulas > mockPlayer Formulas.mockPlayer() method Signature: mockPlayer(): Player; Returns: Player","title":"Bitburner.formulas.mockplayer"},{"location":"bitburner.formulas.mockplayer/#formulasmockplayer-method","text":"Signature: mockPlayer(): Player; Returns: Player","title":"Formulas.mockPlayer() method"},{"location":"bitburner.formulas.mockserver/","text":"Home > bitburner > Formulas > mockServer Formulas.mockServer() method Signature: mockServer(): Server; Returns: Server","title":"Bitburner.formulas.mockserver"},{"location":"bitburner.formulas.mockserver/#formulasmockserver-method","text":"Signature: mockServer(): Server; Returns: Server","title":"Formulas.mockServer() method"},{"location":"bitburner.formulas.reputation/","text":"Home > bitburner > Formulas > reputation Formulas.reputation property Reputation formulas Signature: reputation: ReputationFormulas;","title":"Bitburner.formulas.reputation"},{"location":"bitburner.formulas.reputation/#formulasreputation-property","text":"Reputation formulas Signature: reputation: ReputationFormulas;","title":"Formulas.reputation property"},{"location":"bitburner.formulas.skills/","text":"Home > bitburner > Formulas > skills Formulas.skills property Skills formulas Signature: skills: SkillsFormulas;","title":"Bitburner.formulas.skills"},{"location":"bitburner.formulas.skills/#formulasskills-property","text":"Skills formulas Signature: skills: SkillsFormulas;","title":"Formulas.skills property"},{"location":"bitburner.formulas.work/","text":"Home > bitburner > Formulas > work Formulas.work property Work formulas Signature: work: WorkFormulas;","title":"Bitburner.formulas.work"},{"location":"bitburner.formulas.work/#formulaswork-property","text":"Work formulas Signature: work: WorkFormulas;","title":"Formulas.work property"},{"location":"bitburner.fragment.id/","text":"Home > bitburner > Fragment > id Fragment.id property Signature: id: number;","title":"Bitburner.fragment.id"},{"location":"bitburner.fragment.id/#fragmentid-property","text":"Signature: id: number;","title":"Fragment.id property"},{"location":"bitburner.fragment.limit/","text":"Home > bitburner > Fragment > limit Fragment.limit property Signature: limit: number;","title":"Bitburner.fragment.limit"},{"location":"bitburner.fragment.limit/#fragmentlimit-property","text":"Signature: limit: number;","title":"Fragment.limit property"},{"location":"bitburner.fragment/","text":"Home > bitburner > Fragment Fragment interface Signature: export interface Fragment Properties Property Type Description id number limit number power number shape boolean[][] type number","title":"Bitburner.fragment"},{"location":"bitburner.fragment/#fragment-interface","text":"Signature: export interface Fragment","title":"Fragment interface"},{"location":"bitburner.fragment/#properties","text":"Property Type Description id number limit number power number shape boolean[][] type number","title":"Properties"},{"location":"bitburner.fragment.power/","text":"Home > bitburner > Fragment > power Fragment.power property Signature: power: number;","title":"Bitburner.fragment.power"},{"location":"bitburner.fragment.power/#fragmentpower-property","text":"Signature: power: number;","title":"Fragment.power property"},{"location":"bitburner.fragment.shape/","text":"Home > bitburner > Fragment > shape Fragment.shape property Signature: shape: boolean[][];","title":"Bitburner.fragment.shape"},{"location":"bitburner.fragment.shape/#fragmentshape-property","text":"Signature: shape: boolean[][];","title":"Fragment.shape property"},{"location":"bitburner.fragment.type/","text":"Home > bitburner > Fragment > type Fragment.type property Signature: type: number;","title":"Bitburner.fragment.type"},{"location":"bitburner.fragment.type/#fragmenttype-property","text":"Signature: type: number;","title":"Fragment.type property"},{"location":"bitburner.gameinfo.commit/","text":"Home > bitburner > GameInfo > commit GameInfo.commit property Signature: commit: string;","title":"Bitburner.gameinfo.commit"},{"location":"bitburner.gameinfo.commit/#gameinfocommit-property","text":"Signature: commit: string;","title":"GameInfo.commit property"},{"location":"bitburner.gameinfo/","text":"Home > bitburner > GameInfo GameInfo interface Game Information Signature: interface GameInfo Properties Property Type Description commit string platform string version string","title":"Bitburner.gameinfo"},{"location":"bitburner.gameinfo/#gameinfo-interface","text":"Game Information Signature: interface GameInfo","title":"GameInfo interface"},{"location":"bitburner.gameinfo/#properties","text":"Property Type Description commit string platform string version string","title":"Properties"},{"location":"bitburner.gameinfo.platform/","text":"Home > bitburner > GameInfo > platform GameInfo.platform property Signature: platform: string;","title":"Bitburner.gameinfo.platform"},{"location":"bitburner.gameinfo.platform/#gameinfoplatform-property","text":"Signature: platform: string;","title":"GameInfo.platform property"},{"location":"bitburner.gameinfo.version/","text":"Home > bitburner > GameInfo > version GameInfo.version property Signature: version: string;","title":"Bitburner.gameinfo.version"},{"location":"bitburner.gameinfo.version/#gameinfoversion-property","text":"Signature: version: string;","title":"GameInfo.version property"},{"location":"bitburner.gang.ascendmember/","text":"Home > bitburner > Gang > ascendMember Gang.ascendMember() method Ascend a gang member. Signature: ascendMember(memberName: string): GangMemberAscension | undefined; Parameters Parameter Type Description memberName string Name of member to ascend. Returns: GangMemberAscension | undefined Object with info about the ascension results. Undefined if ascension did not occur. Remarks RAM cost: 4 GB Ascend the specified Gang Member.","title":"Bitburner.gang.ascendmember"},{"location":"bitburner.gang.ascendmember/#gangascendmember-method","text":"Ascend a gang member. Signature: ascendMember(memberName: string): GangMemberAscension | undefined;","title":"Gang.ascendMember() method"},{"location":"bitburner.gang.ascendmember/#parameters","text":"Parameter Type Description memberName string Name of member to ascend. Returns: GangMemberAscension | undefined Object with info about the ascension results. Undefined if ascension did not occur.","title":"Parameters"},{"location":"bitburner.gang.ascendmember/#remarks","text":"RAM cost: 4 GB Ascend the specified Gang Member.","title":"Remarks"},{"location":"bitburner.gang.canrecruitmember/","text":"Home > bitburner > Gang > canRecruitMember Gang.canRecruitMember() method Check if you can recruit a new gang member. Signature: canRecruitMember(): boolean; Returns: boolean True if a member can currently be recruited, false otherwise. Remarks RAM cost: 1 GB Returns a boolean indicating whether a member can currently be recruited. Once you have successfully created a gang by using the function createGang , you can immediately recruit a small number of members to your gang. After you have recruited the founding members, to recruit another member you must increase your respect. The more members you want to recruit, the more respect you require. If your gang has the maximum number of members, then this function would return false.","title":"Bitburner.gang.canrecruitmember"},{"location":"bitburner.gang.canrecruitmember/#gangcanrecruitmember-method","text":"Check if you can recruit a new gang member. Signature: canRecruitMember(): boolean; Returns: boolean True if a member can currently be recruited, false otherwise.","title":"Gang.canRecruitMember() method"},{"location":"bitburner.gang.canrecruitmember/#remarks","text":"RAM cost: 1 GB Returns a boolean indicating whether a member can currently be recruited. Once you have successfully created a gang by using the function createGang , you can immediately recruit a small number of members to your gang. After you have recruited the founding members, to recruit another member you must increase your respect. The more members you want to recruit, the more respect you require. If your gang has the maximum number of members, then this function would return false.","title":"Remarks"},{"location":"bitburner.gang.creategang/","text":"Home > bitburner > Gang > createGang Gang.createGang() method Create a gang. Signature: createGang(faction: string): boolean; Parameters Parameter Type Description faction string Returns: boolean True if the gang was created, false otherwise. Remarks RAM cost: 1GB Create a gang with the specified faction.","title":"Bitburner.gang.creategang"},{"location":"bitburner.gang.creategang/#gangcreategang-method","text":"Create a gang. Signature: createGang(faction: string): boolean;","title":"Gang.createGang() method"},{"location":"bitburner.gang.creategang/#parameters","text":"Parameter Type Description faction string Returns: boolean True if the gang was created, false otherwise.","title":"Parameters"},{"location":"bitburner.gang.creategang/#remarks","text":"RAM cost: 1GB Create a gang with the specified faction.","title":"Remarks"},{"location":"bitburner.gang.getascensionresult/","text":"Home > bitburner > Gang > getAscensionResult Gang.getAscensionResult() method Get the result of an ascension without ascending. Signature: getAscensionResult(memberName: string): GangMemberAscension | undefined; Parameters Parameter Type Description memberName string Name of member. Returns: GangMemberAscension | undefined Object with info about the ascension results. Undefined if ascension is impossible. Remarks RAM cost: 2 GB Get the result of an ascension without ascending.","title":"Bitburner.gang.getascensionresult"},{"location":"bitburner.gang.getascensionresult/#ganggetascensionresult-method","text":"Get the result of an ascension without ascending. Signature: getAscensionResult(memberName: string): GangMemberAscension | undefined;","title":"Gang.getAscensionResult() method"},{"location":"bitburner.gang.getascensionresult/#parameters","text":"Parameter Type Description memberName string Name of member. Returns: GangMemberAscension | undefined Object with info about the ascension results. Undefined if ascension is impossible.","title":"Parameters"},{"location":"bitburner.gang.getascensionresult/#remarks","text":"RAM cost: 2 GB Get the result of an ascension without ascending.","title":"Remarks"},{"location":"bitburner.gang.getbonustime/","text":"Home > bitburner > Gang > getBonusTime Gang.getBonusTime() method Get bonus time. Signature: getBonusTime(): number; Returns: number Bonus time for the Gang mechanic in milliseconds. Remarks RAM cost: 0 GB Returns the amount of accumulated \u201cbonus time\u201d (milliseconds) for the Gang mechanic. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster, up to 10x the normal speed.","title":"Bitburner.gang.getbonustime"},{"location":"bitburner.gang.getbonustime/#ganggetbonustime-method","text":"Get bonus time. Signature: getBonusTime(): number; Returns: number Bonus time for the Gang mechanic in milliseconds.","title":"Gang.getBonusTime() method"},{"location":"bitburner.gang.getbonustime/#remarks","text":"RAM cost: 0 GB Returns the amount of accumulated \u201cbonus time\u201d (milliseconds) for the Gang mechanic. \u201cBonus time\u201d is accumulated when the game is offline or if the game is inactive in the browser. \u201cBonus time\u201d makes the game progress faster, up to 10x the normal speed.","title":"Remarks"},{"location":"bitburner.gang.getchancetowinclash/","text":"Home > bitburner > Gang > getChanceToWinClash Gang.getChanceToWinClash() method Get chance to win clash with other gang. Signature: getChanceToWinClash(gangName: string): number; Parameters Parameter Type Description gangName string Target gang Returns: number Chance you have to win a clash with the specified gang. Remarks RAM cost: 4 GB Returns the chance you have to win a clash with the specified gang. The chance is returned in decimal form, not percentage","title":"Bitburner.gang.getchancetowinclash"},{"location":"bitburner.gang.getchancetowinclash/#ganggetchancetowinclash-method","text":"Get chance to win clash with other gang. Signature: getChanceToWinClash(gangName: string): number;","title":"Gang.getChanceToWinClash() method"},{"location":"bitburner.gang.getchancetowinclash/#parameters","text":"Parameter Type Description gangName string Target gang Returns: number Chance you have to win a clash with the specified gang.","title":"Parameters"},{"location":"bitburner.gang.getchancetowinclash/#remarks","text":"RAM cost: 4 GB Returns the chance you have to win a clash with the specified gang. The chance is returned in decimal form, not percentage","title":"Remarks"},{"location":"bitburner.gang.getequipmentcost/","text":"Home > bitburner > Gang > getEquipmentCost Gang.getEquipmentCost() method Get cost of equipment. Signature: getEquipmentCost(equipName: string): number; Parameters Parameter Type Description equipName string Name of equipment. Returns: number Cost to purchase the specified Equipment/Augmentation (number). Infinity for invalid arguments Remarks RAM cost: 2 GB Get the amount of money it takes to purchase a piece of Equipment or an Augmentation. If an invalid Equipment/Augmentation is specified, this function will return Infinity.","title":"Bitburner.gang.getequipmentcost"},{"location":"bitburner.gang.getequipmentcost/#ganggetequipmentcost-method","text":"Get cost of equipment. Signature: getEquipmentCost(equipName: string): number;","title":"Gang.getEquipmentCost() method"},{"location":"bitburner.gang.getequipmentcost/#parameters","text":"Parameter Type Description equipName string Name of equipment. Returns: number Cost to purchase the specified Equipment/Augmentation (number). Infinity for invalid arguments","title":"Parameters"},{"location":"bitburner.gang.getequipmentcost/#remarks","text":"RAM cost: 2 GB Get the amount of money it takes to purchase a piece of Equipment or an Augmentation. If an invalid Equipment/Augmentation is specified, this function will return Infinity.","title":"Remarks"},{"location":"bitburner.gang.getequipmentnames/","text":"Home > bitburner > Gang > getEquipmentNames Gang.getEquipmentNames() method List equipment names. Signature: getEquipmentNames(): string[]; Returns: string[] Names of all Equipments/Augmentations. Remarks RAM cost: 1 GB Get the name of all possible equipment/upgrades you can purchase for your Gang Members. This includes Augmentations.","title":"Bitburner.gang.getequipmentnames"},{"location":"bitburner.gang.getequipmentnames/#ganggetequipmentnames-method","text":"List equipment names. Signature: getEquipmentNames(): string[]; Returns: string[] Names of all Equipments/Augmentations.","title":"Gang.getEquipmentNames() method"},{"location":"bitburner.gang.getequipmentnames/#remarks","text":"RAM cost: 1 GB Get the name of all possible equipment/upgrades you can purchase for your Gang Members. This includes Augmentations.","title":"Remarks"},{"location":"bitburner.gang.getequipmentstats/","text":"Home > bitburner > Gang > getEquipmentStats Gang.getEquipmentStats() method Get stats of an equipment. Signature: getEquipmentStats(equipName: string): EquipmentStats; Parameters Parameter Type Description equipName string Name of equipment. Returns: EquipmentStats A dictionary containing the stats of the equipment. Remarks RAM cost: 2 GB Get the specified equipment stats.","title":"Bitburner.gang.getequipmentstats"},{"location":"bitburner.gang.getequipmentstats/#ganggetequipmentstats-method","text":"Get stats of an equipment. Signature: getEquipmentStats(equipName: string): EquipmentStats;","title":"Gang.getEquipmentStats() method"},{"location":"bitburner.gang.getequipmentstats/#parameters","text":"Parameter Type Description equipName string Name of equipment. Returns: EquipmentStats A dictionary containing the stats of the equipment.","title":"Parameters"},{"location":"bitburner.gang.getequipmentstats/#remarks","text":"RAM cost: 2 GB Get the specified equipment stats.","title":"Remarks"},{"location":"bitburner.gang.getequipmenttype/","text":"Home > bitburner > Gang > getEquipmentType Gang.getEquipmentType() method Get type of an equipment. Signature: getEquipmentType(equipName: string): string; Parameters Parameter Type Description equipName string Name of equipment. Returns: string Type of the equipment. Remarks RAM cost: 2 GB Get the specified equipment type.","title":"Bitburner.gang.getequipmenttype"},{"location":"bitburner.gang.getequipmenttype/#ganggetequipmenttype-method","text":"Get type of an equipment. Signature: getEquipmentType(equipName: string): string;","title":"Gang.getEquipmentType() method"},{"location":"bitburner.gang.getequipmenttype/#parameters","text":"Parameter Type Description equipName string Name of equipment. Returns: string Type of the equipment.","title":"Parameters"},{"location":"bitburner.gang.getequipmenttype/#remarks","text":"RAM cost: 2 GB Get the specified equipment type.","title":"Remarks"},{"location":"bitburner.gang.getganginformation/","text":"Home > bitburner > Gang > getGangInformation Gang.getGangInformation() method Get information about your gang. Signature: getGangInformation(): GangGenInfo; Returns: GangGenInfo Object containing general information about the gang. Remarks RAM cost: 2 GB Get general information about the gang.","title":"Bitburner.gang.getganginformation"},{"location":"bitburner.gang.getganginformation/#ganggetganginformation-method","text":"Get information about your gang. Signature: getGangInformation(): GangGenInfo; Returns: GangGenInfo Object containing general information about the gang.","title":"Gang.getGangInformation() method"},{"location":"bitburner.gang.getganginformation/#remarks","text":"RAM cost: 2 GB Get general information about the gang.","title":"Remarks"},{"location":"bitburner.gang.getmemberinformation/","text":"Home > bitburner > Gang > getMemberInformation Gang.getMemberInformation() method Get information about a specific gang member. Signature: getMemberInformation(name: string): GangMemberInfo; Parameters Parameter Type Description name string Name of member. Returns: GangMemberInfo Object containing stat and equipment-related information about a Gang Member. Remarks RAM cost: 2 GB Get stat and equipment-related information about a Gang Member","title":"Bitburner.gang.getmemberinformation"},{"location":"bitburner.gang.getmemberinformation/#ganggetmemberinformation-method","text":"Get information about a specific gang member. Signature: getMemberInformation(name: string): GangMemberInfo;","title":"Gang.getMemberInformation() method"},{"location":"bitburner.gang.getmemberinformation/#parameters","text":"Parameter Type Description name string Name of member. Returns: GangMemberInfo Object containing stat and equipment-related information about a Gang Member.","title":"Parameters"},{"location":"bitburner.gang.getmemberinformation/#remarks","text":"RAM cost: 2 GB Get stat and equipment-related information about a Gang Member","title":"Remarks"},{"location":"bitburner.gang.getmembernames/","text":"Home > bitburner > Gang > getMemberNames Gang.getMemberNames() method List all gang members. Signature: getMemberNames(): string[]; Returns: string[] Names of all Gang members. Remarks RAM cost: 1 GB Get the names of all Gang members","title":"Bitburner.gang.getmembernames"},{"location":"bitburner.gang.getmembernames/#ganggetmembernames-method","text":"List all gang members. Signature: getMemberNames(): string[]; Returns: string[] Names of all Gang members.","title":"Gang.getMemberNames() method"},{"location":"bitburner.gang.getmembernames/#remarks","text":"RAM cost: 1 GB Get the names of all Gang members","title":"Remarks"},{"location":"bitburner.gang.getotherganginformation/","text":"Home > bitburner > Gang > getOtherGangInformation Gang.getOtherGangInformation() method Get information about the other gangs. Signature: getOtherGangInformation(): GangOtherInfo; Returns: GangOtherInfo Object containing territory and power information about all gangs. Remarks RAM cost: 2 GB Get territory and power information about all gangs.","title":"Bitburner.gang.getotherganginformation"},{"location":"bitburner.gang.getotherganginformation/#ganggetotherganginformation-method","text":"Get information about the other gangs. Signature: getOtherGangInformation(): GangOtherInfo; Returns: GangOtherInfo Object containing territory and power information about all gangs.","title":"Gang.getOtherGangInformation() method"},{"location":"bitburner.gang.getotherganginformation/#remarks","text":"RAM cost: 2 GB Get territory and power information about all gangs.","title":"Remarks"},{"location":"bitburner.gang.gettasknames/","text":"Home > bitburner > Gang > getTaskNames Gang.getTaskNames() method List member task names. Signature: getTaskNames(): string[]; Returns: string[] All valid tasks that Gang members can be assigned to. Remarks RAM cost: 1 GB Get the name of all valid tasks that Gang members can be assigned to.","title":"Bitburner.gang.gettasknames"},{"location":"bitburner.gang.gettasknames/#ganggettasknames-method","text":"List member task names. Signature: getTaskNames(): string[]; Returns: string[] All valid tasks that Gang members can be assigned to.","title":"Gang.getTaskNames() method"},{"location":"bitburner.gang.gettasknames/#remarks","text":"RAM cost: 1 GB Get the name of all valid tasks that Gang members can be assigned to.","title":"Remarks"},{"location":"bitburner.gang.gettaskstats/","text":"Home > bitburner > Gang > getTaskStats Gang.getTaskStats() method Get stats of a task. Signature: getTaskStats(name: string): GangTaskStats; Parameters Parameter Type Description name string Name of the task. Returns: GangTaskStats Detailed stats of a task. Remarks RAM cost: 1 GB Get the stats of a gang task stats. This is typically used to evaluate which action should be executed next.","title":"Bitburner.gang.gettaskstats"},{"location":"bitburner.gang.gettaskstats/#ganggettaskstats-method","text":"Get stats of a task. Signature: getTaskStats(name: string): GangTaskStats;","title":"Gang.getTaskStats() method"},{"location":"bitburner.gang.gettaskstats/#parameters","text":"Parameter Type Description name string Name of the task. Returns: GangTaskStats Detailed stats of a task.","title":"Parameters"},{"location":"bitburner.gang.gettaskstats/#remarks","text":"RAM cost: 1 GB Get the stats of a gang task stats. This is typically used to evaluate which action should be executed next.","title":"Remarks"},{"location":"bitburner.gang.ingang/","text":"Home > bitburner > Gang > inGang Gang.inGang() method Check if you're in a gang. Signature: inGang(): boolean; Returns: boolean True if you're in a gang, false otherwise. Remarks RAM cost: 1GB","title":"Bitburner.gang.ingang"},{"location":"bitburner.gang.ingang/#gangingang-method","text":"Check if you're in a gang. Signature: inGang(): boolean; Returns: boolean True if you're in a gang, false otherwise.","title":"Gang.inGang() method"},{"location":"bitburner.gang.ingang/#remarks","text":"RAM cost: 1GB","title":"Remarks"},{"location":"bitburner.gang/","text":"Home > bitburner > Gang Gang interface Gang API Signature: export interface Gang Remarks If you are not in BitNode-2, then you must have Source-File 2 in order to use this API. Methods Method Description ascendMember(memberName) Ascend a gang member. canRecruitMember() Check if you can recruit a new gang member. createGang(faction) Create a gang. getAscensionResult(memberName) Get the result of an ascension without ascending. getBonusTime() Get bonus time. getChanceToWinClash(gangName) Get chance to win clash with other gang. getEquipmentCost(equipName) Get cost of equipment. getEquipmentNames() List equipment names. getEquipmentStats(equipName) Get stats of an equipment. getEquipmentType(equipName) Get type of an equipment. getGangInformation() Get information about your gang. getMemberInformation(name) Get information about a specific gang member. getMemberNames() List all gang members. getOtherGangInformation() Get information about the other gangs. getTaskNames() List member task names. getTaskStats(name) Get stats of a task. inGang() Check if you're in a gang. purchaseEquipment(memberName, equipName) Purchase an equipment for a gang member. recruitMember(name) Recruit a new gang member. setMemberTask(memberName, taskName) Set gang member to task. setTerritoryWarfare(engage) Enable/Disable territory warfare.","title":"Bitburner.gang"},{"location":"bitburner.gang/#gang-interface","text":"Gang API Signature: export interface Gang","title":"Gang interface"},{"location":"bitburner.gang/#remarks","text":"If you are not in BitNode-2, then you must have Source-File 2 in order to use this API.","title":"Remarks"},{"location":"bitburner.gang/#methods","text":"Method Description ascendMember(memberName) Ascend a gang member. canRecruitMember() Check if you can recruit a new gang member. createGang(faction) Create a gang. getAscensionResult(memberName) Get the result of an ascension without ascending. getBonusTime() Get bonus time. getChanceToWinClash(gangName) Get chance to win clash with other gang. getEquipmentCost(equipName) Get cost of equipment. getEquipmentNames() List equipment names. getEquipmentStats(equipName) Get stats of an equipment. getEquipmentType(equipName) Get type of an equipment. getGangInformation() Get information about your gang. getMemberInformation(name) Get information about a specific gang member. getMemberNames() List all gang members. getOtherGangInformation() Get information about the other gangs. getTaskNames() List member task names. getTaskStats(name) Get stats of a task. inGang() Check if you're in a gang. purchaseEquipment(memberName, equipName) Purchase an equipment for a gang member. recruitMember(name) Recruit a new gang member. setMemberTask(memberName, taskName) Set gang member to task. setTerritoryWarfare(engage) Enable/Disable territory warfare.","title":"Methods"},{"location":"bitburner.gang.purchaseequipment/","text":"Home > bitburner > Gang > purchaseEquipment Gang.purchaseEquipment() method Purchase an equipment for a gang member. Signature: purchaseEquipment(memberName: string, equipName: string): boolean; Parameters Parameter Type Description memberName string Name of Gang member to purchase the equipment for. equipName string Name of Equipment/Augmentation to purchase. Returns: boolean True if the equipment was successfully purchased. False otherwise Remarks RAM cost: 4 GB Attempt to purchase the specified Equipment/Augmentation for the specified Gang member.","title":"Bitburner.gang.purchaseequipment"},{"location":"bitburner.gang.purchaseequipment/#gangpurchaseequipment-method","text":"Purchase an equipment for a gang member. Signature: purchaseEquipment(memberName: string, equipName: string): boolean;","title":"Gang.purchaseEquipment() method"},{"location":"bitburner.gang.purchaseequipment/#parameters","text":"Parameter Type Description memberName string Name of Gang member to purchase the equipment for. equipName string Name of Equipment/Augmentation to purchase. Returns: boolean True if the equipment was successfully purchased. False otherwise","title":"Parameters"},{"location":"bitburner.gang.purchaseequipment/#remarks","text":"RAM cost: 4 GB Attempt to purchase the specified Equipment/Augmentation for the specified Gang member.","title":"Remarks"},{"location":"bitburner.gang.recruitmember/","text":"Home > bitburner > Gang > recruitMember Gang.recruitMember() method Recruit a new gang member. Signature: recruitMember(name: string): boolean; Parameters Parameter Type Description name string Name of member to recruit. Returns: boolean True if the member was successfully recruited, false otherwise. Remarks RAM cost: 2 GB Attempt to recruit a new gang member. Possible reasons for failure: * Cannot currently recruit a new member * There already exists a member with the specified name","title":"Bitburner.gang.recruitmember"},{"location":"bitburner.gang.recruitmember/#gangrecruitmember-method","text":"Recruit a new gang member. Signature: recruitMember(name: string): boolean;","title":"Gang.recruitMember() method"},{"location":"bitburner.gang.recruitmember/#parameters","text":"Parameter Type Description name string Name of member to recruit. Returns: boolean True if the member was successfully recruited, false otherwise.","title":"Parameters"},{"location":"bitburner.gang.recruitmember/#remarks","text":"RAM cost: 2 GB Attempt to recruit a new gang member. Possible reasons for failure: * Cannot currently recruit a new member * There already exists a member with the specified name","title":"Remarks"},{"location":"bitburner.gang.setmembertask/","text":"Home > bitburner > Gang > setMemberTask Gang.setMemberTask() method Set gang member to task. Signature: setMemberTask(memberName: string, taskName: string): boolean; Parameters Parameter Type Description memberName string Name of Gang member to assign. taskName string Task to assign. Returns: boolean True if the Gang Member was successfully assigned to the task, false otherwise. Remarks RAM cost: 2 GB Attempts to assign the specified Gang Member to the specified task. If an invalid task is specified, the Gang member will be set to idle (\u201cUnassigned\u201d).","title":"Bitburner.gang.setmembertask"},{"location":"bitburner.gang.setmembertask/#gangsetmembertask-method","text":"Set gang member to task. Signature: setMemberTask(memberName: string, taskName: string): boolean;","title":"Gang.setMemberTask() method"},{"location":"bitburner.gang.setmembertask/#parameters","text":"Parameter Type Description memberName string Name of Gang member to assign. taskName string Task to assign. Returns: boolean True if the Gang Member was successfully assigned to the task, false otherwise.","title":"Parameters"},{"location":"bitburner.gang.setmembertask/#remarks","text":"RAM cost: 2 GB Attempts to assign the specified Gang Member to the specified task. If an invalid task is specified, the Gang member will be set to idle (\u201cUnassigned\u201d).","title":"Remarks"},{"location":"bitburner.gang.setterritorywarfare/","text":"Home > bitburner > Gang > setTerritoryWarfare Gang.setTerritoryWarfare() method Enable/Disable territory warfare. Signature: setTerritoryWarfare(engage: boolean): void; Parameters Parameter Type Description engage boolean Whether or not to engage in territory warfare. Returns: void Remarks RAM cost: 2 GB Set whether or not the gang should engage in territory warfare","title":"Bitburner.gang.setterritorywarfare"},{"location":"bitburner.gang.setterritorywarfare/#gangsetterritorywarfare-method","text":"Enable/Disable territory warfare. Signature: setTerritoryWarfare(engage: boolean): void;","title":"Gang.setTerritoryWarfare() method"},{"location":"bitburner.gang.setterritorywarfare/#parameters","text":"Parameter Type Description engage boolean Whether or not to engage in territory warfare. Returns: void","title":"Parameters"},{"location":"bitburner.gang.setterritorywarfare/#remarks","text":"RAM cost: 2 GB Set whether or not the gang should engage in territory warfare","title":"Remarks"},{"location":"bitburner.gangformulas.ascensionmultiplier/","text":"Home > bitburner > GangFormulas > ascensionMultiplier GangFormulas.ascensionMultiplier() method Calculate ascension mult. Signature: ascensionMultiplier(points: number): number; Parameters Parameter Type Description points number Amount of ascension points. Returns: number The calculated ascension mult.","title":"Bitburner.gangformulas.ascensionmultiplier"},{"location":"bitburner.gangformulas.ascensionmultiplier/#gangformulasascensionmultiplier-method","text":"Calculate ascension mult. Signature: ascensionMultiplier(points: number): number;","title":"GangFormulas.ascensionMultiplier() method"},{"location":"bitburner.gangformulas.ascensionmultiplier/#parameters","text":"Parameter Type Description points number Amount of ascension points. Returns: number The calculated ascension mult.","title":"Parameters"},{"location":"bitburner.gangformulas.ascensionpointsgain/","text":"Home > bitburner > GangFormulas > ascensionPointsGain GangFormulas.ascensionPointsGain() method Calculate ascension point gain. Signature: ascensionPointsGain(exp: number): number; Parameters Parameter Type Description exp number Experience point before ascension. Returns: number The calculated ascension point gain.","title":"Bitburner.gangformulas.ascensionpointsgain"},{"location":"bitburner.gangformulas.ascensionpointsgain/#gangformulasascensionpointsgain-method","text":"Calculate ascension point gain. Signature: ascensionPointsGain(exp: number): number;","title":"GangFormulas.ascensionPointsGain() method"},{"location":"bitburner.gangformulas.ascensionpointsgain/#parameters","text":"Parameter Type Description exp number Experience point before ascension. Returns: number The calculated ascension point gain.","title":"Parameters"},{"location":"bitburner.gangformulas/","text":"Home > bitburner > GangFormulas GangFormulas interface Gang formulas Signature: interface GangFormulas Methods Method Description ascensionMultiplier(points) Calculate ascension mult. ascensionPointsGain(exp) Calculate ascension point gain. moneyGain(gang, member, task) Calculate money gain per tick. respectGain(gang, member, task) Calculate respect gain per tick. wantedLevelGain(gang, member, task) Calculate wanted gain per tick. wantedPenalty(gang) Calculate the wanted penalty.","title":"Bitburner.gangformulas"},{"location":"bitburner.gangformulas/#gangformulas-interface","text":"Gang formulas Signature: interface GangFormulas","title":"GangFormulas interface"},{"location":"bitburner.gangformulas/#methods","text":"Method Description ascensionMultiplier(points) Calculate ascension mult. ascensionPointsGain(exp) Calculate ascension point gain. moneyGain(gang, member, task) Calculate money gain per tick. respectGain(gang, member, task) Calculate respect gain per tick. wantedLevelGain(gang, member, task) Calculate wanted gain per tick. wantedPenalty(gang) Calculate the wanted penalty.","title":"Methods"},{"location":"bitburner.gangformulas.moneygain/","text":"Home > bitburner > GangFormulas > moneyGain GangFormulas.moneyGain() method Calculate money gain per tick. Signature: moneyGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number; Parameters Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Member info from getMemberInformation task GangTaskStats Task info from getTaskStats Returns: number The calculated money gain.","title":"Bitburner.gangformulas.moneygain"},{"location":"bitburner.gangformulas.moneygain/#gangformulasmoneygain-method","text":"Calculate money gain per tick. Signature: moneyGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;","title":"GangFormulas.moneyGain() method"},{"location":"bitburner.gangformulas.moneygain/#parameters","text":"Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Member info from getMemberInformation task GangTaskStats Task info from getTaskStats Returns: number The calculated money gain.","title":"Parameters"},{"location":"bitburner.gangformulas.respectgain/","text":"Home > bitburner > GangFormulas > respectGain GangFormulas.respectGain() method Calculate respect gain per tick. Signature: respectGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number; Parameters Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Gang info from getMemberInformation task GangTaskStats Gang info from getTaskStats Returns: number The calculated respect gain.","title":"Bitburner.gangformulas.respectgain"},{"location":"bitburner.gangformulas.respectgain/#gangformulasrespectgain-method","text":"Calculate respect gain per tick. Signature: respectGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;","title":"GangFormulas.respectGain() method"},{"location":"bitburner.gangformulas.respectgain/#parameters","text":"Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Gang info from getMemberInformation task GangTaskStats Gang info from getTaskStats Returns: number The calculated respect gain.","title":"Parameters"},{"location":"bitburner.gangformulas.wantedlevelgain/","text":"Home > bitburner > GangFormulas > wantedLevelGain GangFormulas.wantedLevelGain() method Calculate wanted gain per tick. Signature: wantedLevelGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number; Parameters Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Member info from getMemberInformation task GangTaskStats Task info from getTaskStats Returns: number The calculated wanted gain.","title":"Bitburner.gangformulas.wantedlevelgain"},{"location":"bitburner.gangformulas.wantedlevelgain/#gangformulaswantedlevelgain-method","text":"Calculate wanted gain per tick. Signature: wantedLevelGain(gang: GangGenInfo, member: GangMemberInfo, task: GangTaskStats): number;","title":"GangFormulas.wantedLevelGain() method"},{"location":"bitburner.gangformulas.wantedlevelgain/#parameters","text":"Parameter Type Description gang GangGenInfo Gang info from getGangInformation member GangMemberInfo Member info from getMemberInformation task GangTaskStats Task info from getTaskStats Returns: number The calculated wanted gain.","title":"Parameters"},{"location":"bitburner.gangformulas.wantedpenalty/","text":"Home > bitburner > GangFormulas > wantedPenalty GangFormulas.wantedPenalty() method Calculate the wanted penalty. Signature: wantedPenalty(gang: GangGenInfo): number; Parameters Parameter Type Description gang GangGenInfo Gang info from getGangInformation Returns: number The calculated wanted penalty.","title":"Bitburner.gangformulas.wantedpenalty"},{"location":"bitburner.gangformulas.wantedpenalty/#gangformulaswantedpenalty-method","text":"Calculate the wanted penalty. Signature: wantedPenalty(gang: GangGenInfo): number;","title":"GangFormulas.wantedPenalty() method"},{"location":"bitburner.gangformulas.wantedpenalty/#parameters","text":"Parameter Type Description gang GangGenInfo Gang info from getGangInformation Returns: number The calculated wanted penalty.","title":"Parameters"},{"location":"bitburner.ganggeninfo.faction/","text":"Home > bitburner > GangGenInfo > faction GangGenInfo.faction property Name of faction that the gang belongs to (\"Slum Snakes\", etc.) Signature: faction: string;","title":"Bitburner.ganggeninfo.faction"},{"location":"bitburner.ganggeninfo.faction/#ganggeninfofaction-property","text":"Name of faction that the gang belongs to (\"Slum Snakes\", etc.) Signature: faction: string;","title":"GangGenInfo.faction property"},{"location":"bitburner.ganggeninfo.ishacking/","text":"Home > bitburner > GangGenInfo > isHacking GangGenInfo.isHacking property Indicating whether or not it's a hacking gang Signature: isHacking: boolean;","title":"Bitburner.ganggeninfo.ishacking"},{"location":"bitburner.ganggeninfo.ishacking/#ganggeninfoishacking-property","text":"Indicating whether or not it's a hacking gang Signature: isHacking: boolean;","title":"GangGenInfo.isHacking property"},{"location":"bitburner.ganggeninfo/","text":"Home > bitburner > GangGenInfo GangGenInfo interface Gang general info. Signature: export interface GangGenInfo Properties Property Type Description faction string Name of faction that the gang belongs to (\"Slum Snakes\", etc.) isHacking boolean Indicating whether or not it's a hacking gang moneyGainRate number Money earned per game cycle power number Gang's power for territory warfare respect number Gang's respect respectGainRate number Respect earned per game cycle territory number Amount of territory held territoryClashChance number Clash chance territoryWarfareEngaged boolean Indicating if territory warfare is enabled wantedLevel number Gang's wanted level wantedLevelGainRate number Wanted level gained/lost per game cycle (negative for losses) wantedPenalty number Number indicating the current wanted penalty","title":"Bitburner.ganggeninfo"},{"location":"bitburner.ganggeninfo/#ganggeninfo-interface","text":"Gang general info. Signature: export interface GangGenInfo","title":"GangGenInfo interface"},{"location":"bitburner.ganggeninfo/#properties","text":"Property Type Description faction string Name of faction that the gang belongs to (\"Slum Snakes\", etc.) isHacking boolean Indicating whether or not it's a hacking gang moneyGainRate number Money earned per game cycle power number Gang's power for territory warfare respect number Gang's respect respectGainRate number Respect earned per game cycle territory number Amount of territory held territoryClashChance number Clash chance territoryWarfareEngaged boolean Indicating if territory warfare is enabled wantedLevel number Gang's wanted level wantedLevelGainRate number Wanted level gained/lost per game cycle (negative for losses) wantedPenalty number Number indicating the current wanted penalty","title":"Properties"},{"location":"bitburner.ganggeninfo.moneygainrate/","text":"Home > bitburner > GangGenInfo > moneyGainRate GangGenInfo.moneyGainRate property Money earned per game cycle Signature: moneyGainRate: number;","title":"Bitburner.ganggeninfo.moneygainrate"},{"location":"bitburner.ganggeninfo.moneygainrate/#ganggeninfomoneygainrate-property","text":"Money earned per game cycle Signature: moneyGainRate: number;","title":"GangGenInfo.moneyGainRate property"},{"location":"bitburner.ganggeninfo.power/","text":"Home > bitburner > GangGenInfo > power GangGenInfo.power property Gang's power for territory warfare Signature: power: number;","title":"Bitburner.ganggeninfo.power"},{"location":"bitburner.ganggeninfo.power/#ganggeninfopower-property","text":"Gang's power for territory warfare Signature: power: number;","title":"GangGenInfo.power property"},{"location":"bitburner.ganggeninfo.respect/","text":"Home > bitburner > GangGenInfo > respect GangGenInfo.respect property Gang's respect Signature: respect: number;","title":"Bitburner.ganggeninfo.respect"},{"location":"bitburner.ganggeninfo.respect/#ganggeninforespect-property","text":"Gang's respect Signature: respect: number;","title":"GangGenInfo.respect property"},{"location":"bitburner.ganggeninfo.respectgainrate/","text":"Home > bitburner > GangGenInfo > respectGainRate GangGenInfo.respectGainRate property Respect earned per game cycle Signature: respectGainRate: number;","title":"Bitburner.ganggeninfo.respectgainrate"},{"location":"bitburner.ganggeninfo.respectgainrate/#ganggeninforespectgainrate-property","text":"Respect earned per game cycle Signature: respectGainRate: number;","title":"GangGenInfo.respectGainRate property"},{"location":"bitburner.ganggeninfo.territory/","text":"Home > bitburner > GangGenInfo > territory GangGenInfo.territory property Amount of territory held Signature: territory: number;","title":"Bitburner.ganggeninfo.territory"},{"location":"bitburner.ganggeninfo.territory/#ganggeninfoterritory-property","text":"Amount of territory held Signature: territory: number;","title":"GangGenInfo.territory property"},{"location":"bitburner.ganggeninfo.territoryclashchance/","text":"Home > bitburner > GangGenInfo > territoryClashChance GangGenInfo.territoryClashChance property Clash chance Signature: territoryClashChance: number;","title":"Bitburner.ganggeninfo.territoryclashchance"},{"location":"bitburner.ganggeninfo.territoryclashchance/#ganggeninfoterritoryclashchance-property","text":"Clash chance Signature: territoryClashChance: number;","title":"GangGenInfo.territoryClashChance property"},{"location":"bitburner.ganggeninfo.territorywarfareengaged/","text":"Home > bitburner > GangGenInfo > territoryWarfareEngaged GangGenInfo.territoryWarfareEngaged property Indicating if territory warfare is enabled Signature: territoryWarfareEngaged: boolean;","title":"Bitburner.ganggeninfo.territorywarfareengaged"},{"location":"bitburner.ganggeninfo.territorywarfareengaged/#ganggeninfoterritorywarfareengaged-property","text":"Indicating if territory warfare is enabled Signature: territoryWarfareEngaged: boolean;","title":"GangGenInfo.territoryWarfareEngaged property"},{"location":"bitburner.ganggeninfo.wantedlevel/","text":"Home > bitburner > GangGenInfo > wantedLevel GangGenInfo.wantedLevel property Gang's wanted level Signature: wantedLevel: number;","title":"Bitburner.ganggeninfo.wantedlevel"},{"location":"bitburner.ganggeninfo.wantedlevel/#ganggeninfowantedlevel-property","text":"Gang's wanted level Signature: wantedLevel: number;","title":"GangGenInfo.wantedLevel property"},{"location":"bitburner.ganggeninfo.wantedlevelgainrate/","text":"Home > bitburner > GangGenInfo > wantedLevelGainRate GangGenInfo.wantedLevelGainRate property Wanted level gained/lost per game cycle (negative for losses) Signature: wantedLevelGainRate: number;","title":"Bitburner.ganggeninfo.wantedlevelgainrate"},{"location":"bitburner.ganggeninfo.wantedlevelgainrate/#ganggeninfowantedlevelgainrate-property","text":"Wanted level gained/lost per game cycle (negative for losses) Signature: wantedLevelGainRate: number;","title":"GangGenInfo.wantedLevelGainRate property"},{"location":"bitburner.ganggeninfo.wantedpenalty/","text":"Home > bitburner > GangGenInfo > wantedPenalty GangGenInfo.wantedPenalty property Number indicating the current wanted penalty Signature: wantedPenalty: number;","title":"Bitburner.ganggeninfo.wantedpenalty"},{"location":"bitburner.ganggeninfo.wantedpenalty/#ganggeninfowantedpenalty-property","text":"Number indicating the current wanted penalty Signature: wantedPenalty: number;","title":"GangGenInfo.wantedPenalty property"},{"location":"bitburner.gangmemberascension.agi/","text":"Home > bitburner > GangMemberAscension > agi GangMemberAscension.agi property Agility multiplier gained from ascending Signature: agi: number;","title":"Bitburner.gangmemberascension.agi"},{"location":"bitburner.gangmemberascension.agi/#gangmemberascensionagi-property","text":"Agility multiplier gained from ascending Signature: agi: number;","title":"GangMemberAscension.agi property"},{"location":"bitburner.gangmemberascension.cha/","text":"Home > bitburner > GangMemberAscension > cha GangMemberAscension.cha property Charisma multiplier gained from ascending Signature: cha: number;","title":"Bitburner.gangmemberascension.cha"},{"location":"bitburner.gangmemberascension.cha/#gangmemberascensioncha-property","text":"Charisma multiplier gained from ascending Signature: cha: number;","title":"GangMemberAscension.cha property"},{"location":"bitburner.gangmemberascension.def/","text":"Home > bitburner > GangMemberAscension > def GangMemberAscension.def property Defense multiplier gained from ascending Signature: def: number;","title":"Bitburner.gangmemberascension.def"},{"location":"bitburner.gangmemberascension.def/#gangmemberascensiondef-property","text":"Defense multiplier gained from ascending Signature: def: number;","title":"GangMemberAscension.def property"},{"location":"bitburner.gangmemberascension.dex/","text":"Home > bitburner > GangMemberAscension > dex GangMemberAscension.dex property Dexterity multiplier gained from ascending Signature: dex: number;","title":"Bitburner.gangmemberascension.dex"},{"location":"bitburner.gangmemberascension.dex/#gangmemberascensiondex-property","text":"Dexterity multiplier gained from ascending Signature: dex: number;","title":"GangMemberAscension.dex property"},{"location":"bitburner.gangmemberascension.hack/","text":"Home > bitburner > GangMemberAscension > hack GangMemberAscension.hack property Hacking multiplier gained from ascending Signature: hack: number;","title":"Bitburner.gangmemberascension.hack"},{"location":"bitburner.gangmemberascension.hack/#gangmemberascensionhack-property","text":"Hacking multiplier gained from ascending Signature: hack: number;","title":"GangMemberAscension.hack property"},{"location":"bitburner.gangmemberascension/","text":"Home > bitburner > GangMemberAscension GangMemberAscension interface Signature: export interface GangMemberAscension Properties Property Type Description agi number Agility multiplier gained from ascending cha number Charisma multiplier gained from ascending def number Defense multiplier gained from ascending dex number Dexterity multiplier gained from ascending hack number Hacking multiplier gained from ascending respect number Amount of respect lost from ascending str number Strength multiplier gained from ascending","title":"Bitburner.gangmemberascension"},{"location":"bitburner.gangmemberascension/#gangmemberascension-interface","text":"Signature: export interface GangMemberAscension","title":"GangMemberAscension interface"},{"location":"bitburner.gangmemberascension/#properties","text":"Property Type Description agi number Agility multiplier gained from ascending cha number Charisma multiplier gained from ascending def number Defense multiplier gained from ascending dex number Dexterity multiplier gained from ascending hack number Hacking multiplier gained from ascending respect number Amount of respect lost from ascending str number Strength multiplier gained from ascending","title":"Properties"},{"location":"bitburner.gangmemberascension.respect/","text":"Home > bitburner > GangMemberAscension > respect GangMemberAscension.respect property Amount of respect lost from ascending Signature: respect: number;","title":"Bitburner.gangmemberascension.respect"},{"location":"bitburner.gangmemberascension.respect/#gangmemberascensionrespect-property","text":"Amount of respect lost from ascending Signature: respect: number;","title":"GangMemberAscension.respect property"},{"location":"bitburner.gangmemberascension.str/","text":"Home > bitburner > GangMemberAscension > str GangMemberAscension.str property Strength multiplier gained from ascending Signature: str: number;","title":"Bitburner.gangmemberascension.str"},{"location":"bitburner.gangmemberascension.str/#gangmemberascensionstr-property","text":"Strength multiplier gained from ascending Signature: str: number;","title":"GangMemberAscension.str property"},{"location":"bitburner.gangmemberinfo.agi/","text":"Home > bitburner > GangMemberInfo > agi GangMemberInfo.agi property Agility skill level Signature: agi: number;","title":"Bitburner.gangmemberinfo.agi"},{"location":"bitburner.gangmemberinfo.agi/#gangmemberinfoagi-property","text":"Agility skill level Signature: agi: number;","title":"GangMemberInfo.agi property"},{"location":"bitburner.gangmemberinfo.agi_asc_mult/","text":"Home > bitburner > GangMemberInfo > agi_asc_mult GangMemberInfo.agi_asc_mult property Agility multiplier from ascensions Signature: agi_asc_mult: number;","title":"Bitburner.gangmemberinfo.agi asc mult"},{"location":"bitburner.gangmemberinfo.agi_asc_mult/#gangmemberinfoagi_asc_mult-property","text":"Agility multiplier from ascensions Signature: agi_asc_mult: number;","title":"GangMemberInfo.agi_asc_mult property"},{"location":"bitburner.gangmemberinfo.agi_asc_points/","text":"Home > bitburner > GangMemberInfo > agi_asc_points GangMemberInfo.agi_asc_points property Total earned agility experience Signature: agi_asc_points: number;","title":"Bitburner.gangmemberinfo.agi asc points"},{"location":"bitburner.gangmemberinfo.agi_asc_points/#gangmemberinfoagi_asc_points-property","text":"Total earned agility experience Signature: agi_asc_points: number;","title":"GangMemberInfo.agi_asc_points property"},{"location":"bitburner.gangmemberinfo.agi_exp/","text":"Home > bitburner > GangMemberInfo > agi_exp GangMemberInfo.agi_exp property Current agility experience Signature: agi_exp: number;","title":"Bitburner.gangmemberinfo.agi exp"},{"location":"bitburner.gangmemberinfo.agi_exp/#gangmemberinfoagi_exp-property","text":"Current agility experience Signature: agi_exp: number;","title":"GangMemberInfo.agi_exp property"},{"location":"bitburner.gangmemberinfo.agi_mult/","text":"Home > bitburner > GangMemberInfo > agi_mult GangMemberInfo.agi_mult property Agility multiplier from equipment Signature: agi_mult: number;","title":"Bitburner.gangmemberinfo.agi mult"},{"location":"bitburner.gangmemberinfo.agi_mult/#gangmemberinfoagi_mult-property","text":"Agility multiplier from equipment Signature: agi_mult: number;","title":"GangMemberInfo.agi_mult property"},{"location":"bitburner.gangmemberinfo.augmentations/","text":"Home > bitburner > GangMemberInfo > augmentations GangMemberInfo.augmentations property Signature: augmentations: string[];","title":"Bitburner.gangmemberinfo.augmentations"},{"location":"bitburner.gangmemberinfo.augmentations/#gangmemberinfoaugmentations-property","text":"Signature: augmentations: string[];","title":"GangMemberInfo.augmentations property"},{"location":"bitburner.gangmemberinfo.cha/","text":"Home > bitburner > GangMemberInfo > cha GangMemberInfo.cha property Charisma skill level Signature: cha: number;","title":"Bitburner.gangmemberinfo.cha"},{"location":"bitburner.gangmemberinfo.cha/#gangmemberinfocha-property","text":"Charisma skill level Signature: cha: number;","title":"GangMemberInfo.cha property"},{"location":"bitburner.gangmemberinfo.cha_asc_mult/","text":"Home > bitburner > GangMemberInfo > cha_asc_mult GangMemberInfo.cha_asc_mult property Charisma multiplier from ascensions Signature: cha_asc_mult: number;","title":"Bitburner.gangmemberinfo.cha asc mult"},{"location":"bitburner.gangmemberinfo.cha_asc_mult/#gangmemberinfocha_asc_mult-property","text":"Charisma multiplier from ascensions Signature: cha_asc_mult: number;","title":"GangMemberInfo.cha_asc_mult property"},{"location":"bitburner.gangmemberinfo.cha_asc_points/","text":"Home > bitburner > GangMemberInfo > cha_asc_points GangMemberInfo.cha_asc_points property Total earned charisma experience Signature: cha_asc_points: number;","title":"Bitburner.gangmemberinfo.cha asc points"},{"location":"bitburner.gangmemberinfo.cha_asc_points/#gangmemberinfocha_asc_points-property","text":"Total earned charisma experience Signature: cha_asc_points: number;","title":"GangMemberInfo.cha_asc_points property"},{"location":"bitburner.gangmemberinfo.cha_exp/","text":"Home > bitburner > GangMemberInfo > cha_exp GangMemberInfo.cha_exp property Current charisma experience Signature: cha_exp: number;","title":"Bitburner.gangmemberinfo.cha exp"},{"location":"bitburner.gangmemberinfo.cha_exp/#gangmemberinfocha_exp-property","text":"Current charisma experience Signature: cha_exp: number;","title":"GangMemberInfo.cha_exp property"},{"location":"bitburner.gangmemberinfo.cha_mult/","text":"Home > bitburner > GangMemberInfo > cha_mult GangMemberInfo.cha_mult property Charisma multiplier from equipment Signature: cha_mult: number;","title":"Bitburner.gangmemberinfo.cha mult"},{"location":"bitburner.gangmemberinfo.cha_mult/#gangmemberinfocha_mult-property","text":"Charisma multiplier from equipment Signature: cha_mult: number;","title":"GangMemberInfo.cha_mult property"},{"location":"bitburner.gangmemberinfo.def/","text":"Home > bitburner > GangMemberInfo > def GangMemberInfo.def property Defense skill level Signature: def: number;","title":"Bitburner.gangmemberinfo.def"},{"location":"bitburner.gangmemberinfo.def/#gangmemberinfodef-property","text":"Defense skill level Signature: def: number;","title":"GangMemberInfo.def property"},{"location":"bitburner.gangmemberinfo.def_asc_mult/","text":"Home > bitburner > GangMemberInfo > def_asc_mult GangMemberInfo.def_asc_mult property Defense multiplier from ascensions Signature: def_asc_mult: number;","title":"Bitburner.gangmemberinfo.def asc mult"},{"location":"bitburner.gangmemberinfo.def_asc_mult/#gangmemberinfodef_asc_mult-property","text":"Defense multiplier from ascensions Signature: def_asc_mult: number;","title":"GangMemberInfo.def_asc_mult property"},{"location":"bitburner.gangmemberinfo.def_asc_points/","text":"Home > bitburner > GangMemberInfo > def_asc_points GangMemberInfo.def_asc_points property Total earned defense experience Signature: def_asc_points: number;","title":"Bitburner.gangmemberinfo.def asc points"},{"location":"bitburner.gangmemberinfo.def_asc_points/#gangmemberinfodef_asc_points-property","text":"Total earned defense experience Signature: def_asc_points: number;","title":"GangMemberInfo.def_asc_points property"},{"location":"bitburner.gangmemberinfo.def_exp/","text":"Home > bitburner > GangMemberInfo > def_exp GangMemberInfo.def_exp property Current defense experience Signature: def_exp: number;","title":"Bitburner.gangmemberinfo.def exp"},{"location":"bitburner.gangmemberinfo.def_exp/#gangmemberinfodef_exp-property","text":"Current defense experience Signature: def_exp: number;","title":"GangMemberInfo.def_exp property"},{"location":"bitburner.gangmemberinfo.def_mult/","text":"Home > bitburner > GangMemberInfo > def_mult GangMemberInfo.def_mult property Defense multiplier from equipment Signature: def_mult: number;","title":"Bitburner.gangmemberinfo.def mult"},{"location":"bitburner.gangmemberinfo.def_mult/#gangmemberinfodef_mult-property","text":"Defense multiplier from equipment Signature: def_mult: number;","title":"GangMemberInfo.def_mult property"},{"location":"bitburner.gangmemberinfo.dex/","text":"Home > bitburner > GangMemberInfo > dex GangMemberInfo.dex property Dexterity skill level Signature: dex: number;","title":"Bitburner.gangmemberinfo.dex"},{"location":"bitburner.gangmemberinfo.dex/#gangmemberinfodex-property","text":"Dexterity skill level Signature: dex: number;","title":"GangMemberInfo.dex property"},{"location":"bitburner.gangmemberinfo.dex_asc_mult/","text":"Home > bitburner > GangMemberInfo > dex_asc_mult GangMemberInfo.dex_asc_mult property Dexterity multiplier from ascensions Signature: dex_asc_mult: number;","title":"Bitburner.gangmemberinfo.dex asc mult"},{"location":"bitburner.gangmemberinfo.dex_asc_mult/#gangmemberinfodex_asc_mult-property","text":"Dexterity multiplier from ascensions Signature: dex_asc_mult: number;","title":"GangMemberInfo.dex_asc_mult property"},{"location":"bitburner.gangmemberinfo.dex_asc_points/","text":"Home > bitburner > GangMemberInfo > dex_asc_points GangMemberInfo.dex_asc_points property Total earned dexterity experience Signature: dex_asc_points: number;","title":"Bitburner.gangmemberinfo.dex asc points"},{"location":"bitburner.gangmemberinfo.dex_asc_points/#gangmemberinfodex_asc_points-property","text":"Total earned dexterity experience Signature: dex_asc_points: number;","title":"GangMemberInfo.dex_asc_points property"},{"location":"bitburner.gangmemberinfo.dex_exp/","text":"Home > bitburner > GangMemberInfo > dex_exp GangMemberInfo.dex_exp property Current dexterity experience Signature: dex_exp: number;","title":"Bitburner.gangmemberinfo.dex exp"},{"location":"bitburner.gangmemberinfo.dex_exp/#gangmemberinfodex_exp-property","text":"Current dexterity experience Signature: dex_exp: number;","title":"GangMemberInfo.dex_exp property"},{"location":"bitburner.gangmemberinfo.dex_mult/","text":"Home > bitburner > GangMemberInfo > dex_mult GangMemberInfo.dex_mult property Dexterity multiplier from equipment Signature: dex_mult: number;","title":"Bitburner.gangmemberinfo.dex mult"},{"location":"bitburner.gangmemberinfo.dex_mult/#gangmemberinfodex_mult-property","text":"Dexterity multiplier from equipment Signature: dex_mult: number;","title":"GangMemberInfo.dex_mult property"},{"location":"bitburner.gangmemberinfo.earnedrespect/","text":"Home > bitburner > GangMemberInfo > earnedRespect GangMemberInfo.earnedRespect property Signature: earnedRespect: number;","title":"Bitburner.gangmemberinfo.earnedrespect"},{"location":"bitburner.gangmemberinfo.earnedrespect/#gangmemberinfoearnedrespect-property","text":"Signature: earnedRespect: number;","title":"GangMemberInfo.earnedRespect property"},{"location":"bitburner.gangmemberinfo.hack/","text":"Home > bitburner > GangMemberInfo > hack GangMemberInfo.hack property Hack skill level Signature: hack: number;","title":"Bitburner.gangmemberinfo.hack"},{"location":"bitburner.gangmemberinfo.hack/#gangmemberinfohack-property","text":"Hack skill level Signature: hack: number;","title":"GangMemberInfo.hack property"},{"location":"bitburner.gangmemberinfo.hack_asc_mult/","text":"Home > bitburner > GangMemberInfo > hack_asc_mult GangMemberInfo.hack_asc_mult property Hack multiplier from ascensions Signature: hack_asc_mult: number;","title":"Bitburner.gangmemberinfo.hack asc mult"},{"location":"bitburner.gangmemberinfo.hack_asc_mult/#gangmemberinfohack_asc_mult-property","text":"Hack multiplier from ascensions Signature: hack_asc_mult: number;","title":"GangMemberInfo.hack_asc_mult property"},{"location":"bitburner.gangmemberinfo.hack_asc_points/","text":"Home > bitburner > GangMemberInfo > hack_asc_points GangMemberInfo.hack_asc_points property Total earned hack experience Signature: hack_asc_points: number;","title":"Bitburner.gangmemberinfo.hack asc points"},{"location":"bitburner.gangmemberinfo.hack_asc_points/#gangmemberinfohack_asc_points-property","text":"Total earned hack experience Signature: hack_asc_points: number;","title":"GangMemberInfo.hack_asc_points property"},{"location":"bitburner.gangmemberinfo.hack_exp/","text":"Home > bitburner > GangMemberInfo > hack_exp GangMemberInfo.hack_exp property Current hack experience Signature: hack_exp: number;","title":"Bitburner.gangmemberinfo.hack exp"},{"location":"bitburner.gangmemberinfo.hack_exp/#gangmemberinfohack_exp-property","text":"Current hack experience Signature: hack_exp: number;","title":"GangMemberInfo.hack_exp property"},{"location":"bitburner.gangmemberinfo.hack_mult/","text":"Home > bitburner > GangMemberInfo > hack_mult GangMemberInfo.hack_mult property Hack multiplier from equipment Signature: hack_mult: number;","title":"Bitburner.gangmemberinfo.hack mult"},{"location":"bitburner.gangmemberinfo.hack_mult/#gangmemberinfohack_mult-property","text":"Hack multiplier from equipment Signature: hack_mult: number;","title":"GangMemberInfo.hack_mult property"},{"location":"bitburner.gangmemberinfo/","text":"Home > bitburner > GangMemberInfo GangMemberInfo interface Signature: export interface GangMemberInfo Properties Property Type Description agi_asc_mult number Agility multiplier from ascensions agi_asc_points number Total earned agility experience agi_exp number Current agility experience agi_mult number Agility multiplier from equipment agi number Agility skill level augmentations string[] cha_asc_mult number Charisma multiplier from ascensions cha_asc_points number Total earned charisma experience cha_exp number Current charisma experience cha_mult number Charisma multiplier from equipment cha number Charisma skill level def_asc_mult number Defense multiplier from ascensions def_asc_points number Total earned defense experience def_exp number Current defense experience def_mult number Defense multiplier from equipment def number Defense skill level dex_asc_mult number Dexterity multiplier from ascensions dex_asc_points number Total earned dexterity experience dex_exp number Current dexterity experience dex_mult number Dexterity multiplier from equipment dex number Dexterity skill level earnedRespect number hack_asc_mult number Hack multiplier from ascensions hack_asc_points number Total earned hack experience hack_exp number Current hack experience hack_mult number Hack multiplier from equipment hack number Hack skill level moneyGain number name string Name of the gang member respectGain number str_asc_mult number Strength multiplier from ascensions str_asc_points number Total earned strength experience str_exp number Current strength experience str_mult number Strength multiplier from equipment str number Strength skill level task string Currently assigned task upgrades string[] wantedLevelGain number","title":"Bitburner.gangmemberinfo"},{"location":"bitburner.gangmemberinfo/#gangmemberinfo-interface","text":"Signature: export interface GangMemberInfo","title":"GangMemberInfo interface"},{"location":"bitburner.gangmemberinfo/#properties","text":"Property Type Description agi_asc_mult number Agility multiplier from ascensions agi_asc_points number Total earned agility experience agi_exp number Current agility experience agi_mult number Agility multiplier from equipment agi number Agility skill level augmentations string[] cha_asc_mult number Charisma multiplier from ascensions cha_asc_points number Total earned charisma experience cha_exp number Current charisma experience cha_mult number Charisma multiplier from equipment cha number Charisma skill level def_asc_mult number Defense multiplier from ascensions def_asc_points number Total earned defense experience def_exp number Current defense experience def_mult number Defense multiplier from equipment def number Defense skill level dex_asc_mult number Dexterity multiplier from ascensions dex_asc_points number Total earned dexterity experience dex_exp number Current dexterity experience dex_mult number Dexterity multiplier from equipment dex number Dexterity skill level earnedRespect number hack_asc_mult number Hack multiplier from ascensions hack_asc_points number Total earned hack experience hack_exp number Current hack experience hack_mult number Hack multiplier from equipment hack number Hack skill level moneyGain number name string Name of the gang member respectGain number str_asc_mult number Strength multiplier from ascensions str_asc_points number Total earned strength experience str_exp number Current strength experience str_mult number Strength multiplier from equipment str number Strength skill level task string Currently assigned task upgrades string[] wantedLevelGain number","title":"Properties"},{"location":"bitburner.gangmemberinfo.moneygain/","text":"Home > bitburner > GangMemberInfo > moneyGain GangMemberInfo.moneyGain property Signature: moneyGain: number;","title":"Bitburner.gangmemberinfo.moneygain"},{"location":"bitburner.gangmemberinfo.moneygain/#gangmemberinfomoneygain-property","text":"Signature: moneyGain: number;","title":"GangMemberInfo.moneyGain property"},{"location":"bitburner.gangmemberinfo.name/","text":"Home > bitburner > GangMemberInfo > name GangMemberInfo.name property Name of the gang member Signature: name: string;","title":"Bitburner.gangmemberinfo.name"},{"location":"bitburner.gangmemberinfo.name/#gangmemberinfoname-property","text":"Name of the gang member Signature: name: string;","title":"GangMemberInfo.name property"},{"location":"bitburner.gangmemberinfo.respectgain/","text":"Home > bitburner > GangMemberInfo > respectGain GangMemberInfo.respectGain property Signature: respectGain: number;","title":"Bitburner.gangmemberinfo.respectgain"},{"location":"bitburner.gangmemberinfo.respectgain/#gangmemberinforespectgain-property","text":"Signature: respectGain: number;","title":"GangMemberInfo.respectGain property"},{"location":"bitburner.gangmemberinfo.str/","text":"Home > bitburner > GangMemberInfo > str GangMemberInfo.str property Strength skill level Signature: str: number;","title":"Bitburner.gangmemberinfo.str"},{"location":"bitburner.gangmemberinfo.str/#gangmemberinfostr-property","text":"Strength skill level Signature: str: number;","title":"GangMemberInfo.str property"},{"location":"bitburner.gangmemberinfo.str_asc_mult/","text":"Home > bitburner > GangMemberInfo > str_asc_mult GangMemberInfo.str_asc_mult property Strength multiplier from ascensions Signature: str_asc_mult: number;","title":"Bitburner.gangmemberinfo.str asc mult"},{"location":"bitburner.gangmemberinfo.str_asc_mult/#gangmemberinfostr_asc_mult-property","text":"Strength multiplier from ascensions Signature: str_asc_mult: number;","title":"GangMemberInfo.str_asc_mult property"},{"location":"bitburner.gangmemberinfo.str_asc_points/","text":"Home > bitburner > GangMemberInfo > str_asc_points GangMemberInfo.str_asc_points property Total earned strength experience Signature: str_asc_points: number;","title":"Bitburner.gangmemberinfo.str asc points"},{"location":"bitburner.gangmemberinfo.str_asc_points/#gangmemberinfostr_asc_points-property","text":"Total earned strength experience Signature: str_asc_points: number;","title":"GangMemberInfo.str_asc_points property"},{"location":"bitburner.gangmemberinfo.str_exp/","text":"Home > bitburner > GangMemberInfo > str_exp GangMemberInfo.str_exp property Current strength experience Signature: str_exp: number;","title":"Bitburner.gangmemberinfo.str exp"},{"location":"bitburner.gangmemberinfo.str_exp/#gangmemberinfostr_exp-property","text":"Current strength experience Signature: str_exp: number;","title":"GangMemberInfo.str_exp property"},{"location":"bitburner.gangmemberinfo.str_mult/","text":"Home > bitburner > GangMemberInfo > str_mult GangMemberInfo.str_mult property Strength multiplier from equipment Signature: str_mult: number;","title":"Bitburner.gangmemberinfo.str mult"},{"location":"bitburner.gangmemberinfo.str_mult/#gangmemberinfostr_mult-property","text":"Strength multiplier from equipment Signature: str_mult: number;","title":"GangMemberInfo.str_mult property"},{"location":"bitburner.gangmemberinfo.task/","text":"Home > bitburner > GangMemberInfo > task GangMemberInfo.task property Currently assigned task Signature: task: string;","title":"Bitburner.gangmemberinfo.task"},{"location":"bitburner.gangmemberinfo.task/#gangmemberinfotask-property","text":"Currently assigned task Signature: task: string;","title":"GangMemberInfo.task property"},{"location":"bitburner.gangmemberinfo.upgrades/","text":"Home > bitburner > GangMemberInfo > upgrades GangMemberInfo.upgrades property Signature: upgrades: string[];","title":"Bitburner.gangmemberinfo.upgrades"},{"location":"bitburner.gangmemberinfo.upgrades/#gangmemberinfoupgrades-property","text":"Signature: upgrades: string[];","title":"GangMemberInfo.upgrades property"},{"location":"bitburner.gangmemberinfo.wantedlevelgain/","text":"Home > bitburner > GangMemberInfo > wantedLevelGain GangMemberInfo.wantedLevelGain property Signature: wantedLevelGain: number;","title":"Bitburner.gangmemberinfo.wantedlevelgain"},{"location":"bitburner.gangmemberinfo.wantedlevelgain/#gangmemberinfowantedlevelgain-property","text":"Signature: wantedLevelGain: number;","title":"GangMemberInfo.wantedLevelGain property"},{"location":"bitburner.gangotherinfo/","text":"Home > bitburner > GangOtherInfo GangOtherInfo interface Signature: export interface GangOtherInfo","title":"Bitburner.gangotherinfo"},{"location":"bitburner.gangotherinfo/#gangotherinfo-interface","text":"Signature: export interface GangOtherInfo","title":"GangOtherInfo interface"},{"location":"bitburner.gangotherinfoobject/","text":"Home > bitburner > GangOtherInfoObject GangOtherInfoObject interface Signature: export interface GangOtherInfoObject Properties Property Type Description power number Gang power territory number Gang territory, in decimal form","title":"Bitburner.gangotherinfoobject"},{"location":"bitburner.gangotherinfoobject/#gangotherinfoobject-interface","text":"Signature: export interface GangOtherInfoObject","title":"GangOtherInfoObject interface"},{"location":"bitburner.gangotherinfoobject/#properties","text":"Property Type Description power number Gang power territory number Gang territory, in decimal form","title":"Properties"},{"location":"bitburner.gangotherinfoobject.power/","text":"Home > bitburner > GangOtherInfoObject > power GangOtherInfoObject.power property Gang power Signature: power: number;","title":"Bitburner.gangotherinfoobject.power"},{"location":"bitburner.gangotherinfoobject.power/#gangotherinfoobjectpower-property","text":"Gang power Signature: power: number;","title":"GangOtherInfoObject.power property"},{"location":"bitburner.gangotherinfoobject.territory/","text":"Home > bitburner > GangOtherInfoObject > territory GangOtherInfoObject.territory property Gang territory, in decimal form Signature: territory: number;","title":"Bitburner.gangotherinfoobject.territory"},{"location":"bitburner.gangotherinfoobject.territory/#gangotherinfoobjectterritory-property","text":"Gang territory, in decimal form Signature: territory: number;","title":"GangOtherInfoObject.territory property"},{"location":"bitburner.gangtaskstats.agiweight/","text":"Home > bitburner > GangTaskStats > agiWeight GangTaskStats.agiWeight property Agility skill impact on task scaling Signature: agiWeight: number;","title":"Bitburner.gangtaskstats.agiweight"},{"location":"bitburner.gangtaskstats.agiweight/#gangtaskstatsagiweight-property","text":"Agility skill impact on task scaling Signature: agiWeight: number;","title":"GangTaskStats.agiWeight property"},{"location":"bitburner.gangtaskstats.basemoney/","text":"Home > bitburner > GangTaskStats > baseMoney GangTaskStats.baseMoney property Base money earned Signature: baseMoney: number;","title":"Bitburner.gangtaskstats.basemoney"},{"location":"bitburner.gangtaskstats.basemoney/#gangtaskstatsbasemoney-property","text":"Base money earned Signature: baseMoney: number;","title":"GangTaskStats.baseMoney property"},{"location":"bitburner.gangtaskstats.baserespect/","text":"Home > bitburner > GangTaskStats > baseRespect GangTaskStats.baseRespect property Base respect earned Signature: baseRespect: number;","title":"Bitburner.gangtaskstats.baserespect"},{"location":"bitburner.gangtaskstats.baserespect/#gangtaskstatsbaserespect-property","text":"Base respect earned Signature: baseRespect: number;","title":"GangTaskStats.baseRespect property"},{"location":"bitburner.gangtaskstats.basewanted/","text":"Home > bitburner > GangTaskStats > baseWanted GangTaskStats.baseWanted property Base wanted earned Signature: baseWanted: number;","title":"Bitburner.gangtaskstats.basewanted"},{"location":"bitburner.gangtaskstats.basewanted/#gangtaskstatsbasewanted-property","text":"Base wanted earned Signature: baseWanted: number;","title":"GangTaskStats.baseWanted property"},{"location":"bitburner.gangtaskstats.chaweight/","text":"Home > bitburner > GangTaskStats > chaWeight GangTaskStats.chaWeight property Charisma skill impact on task scaling Signature: chaWeight: number;","title":"Bitburner.gangtaskstats.chaweight"},{"location":"bitburner.gangtaskstats.chaweight/#gangtaskstatschaweight-property","text":"Charisma skill impact on task scaling Signature: chaWeight: number;","title":"GangTaskStats.chaWeight property"},{"location":"bitburner.gangtaskstats.defweight/","text":"Home > bitburner > GangTaskStats > defWeight GangTaskStats.defWeight property Defense skill impact on task scaling Signature: defWeight: number;","title":"Bitburner.gangtaskstats.defweight"},{"location":"bitburner.gangtaskstats.defweight/#gangtaskstatsdefweight-property","text":"Defense skill impact on task scaling Signature: defWeight: number;","title":"GangTaskStats.defWeight property"},{"location":"bitburner.gangtaskstats.desc/","text":"Home > bitburner > GangTaskStats > desc GangTaskStats.desc property Task Description Signature: desc: string;","title":"Bitburner.gangtaskstats.desc"},{"location":"bitburner.gangtaskstats.desc/#gangtaskstatsdesc-property","text":"Task Description Signature: desc: string;","title":"GangTaskStats.desc property"},{"location":"bitburner.gangtaskstats.dexweight/","text":"Home > bitburner > GangTaskStats > dexWeight GangTaskStats.dexWeight property Dexterity skill impact on task scaling Signature: dexWeight: number;","title":"Bitburner.gangtaskstats.dexweight"},{"location":"bitburner.gangtaskstats.dexweight/#gangtaskstatsdexweight-property","text":"Dexterity skill impact on task scaling Signature: dexWeight: number;","title":"GangTaskStats.dexWeight property"},{"location":"bitburner.gangtaskstats.difficulty/","text":"Home > bitburner > GangTaskStats > difficulty GangTaskStats.difficulty property Number representing the difficulty of the task Signature: difficulty: number;","title":"Bitburner.gangtaskstats.difficulty"},{"location":"bitburner.gangtaskstats.difficulty/#gangtaskstatsdifficulty-property","text":"Number representing the difficulty of the task Signature: difficulty: number;","title":"GangTaskStats.difficulty property"},{"location":"bitburner.gangtaskstats.hackweight/","text":"Home > bitburner > GangTaskStats > hackWeight GangTaskStats.hackWeight property Hacking skill impact on task scaling Signature: hackWeight: number;","title":"Bitburner.gangtaskstats.hackweight"},{"location":"bitburner.gangtaskstats.hackweight/#gangtaskstatshackweight-property","text":"Hacking skill impact on task scaling Signature: hackWeight: number;","title":"GangTaskStats.hackWeight property"},{"location":"bitburner.gangtaskstats.iscombat/","text":"Home > bitburner > GangTaskStats > isCombat GangTaskStats.isCombat property Is a task of a combat gang Signature: isCombat: boolean;","title":"Bitburner.gangtaskstats.iscombat"},{"location":"bitburner.gangtaskstats.iscombat/#gangtaskstatsiscombat-property","text":"Is a task of a combat gang Signature: isCombat: boolean;","title":"GangTaskStats.isCombat property"},{"location":"bitburner.gangtaskstats.ishacking/","text":"Home > bitburner > GangTaskStats > isHacking GangTaskStats.isHacking property Is a task of a hacking gang Signature: isHacking: boolean;","title":"Bitburner.gangtaskstats.ishacking"},{"location":"bitburner.gangtaskstats.ishacking/#gangtaskstatsishacking-property","text":"Is a task of a hacking gang Signature: isHacking: boolean;","title":"GangTaskStats.isHacking property"},{"location":"bitburner.gangtaskstats/","text":"Home > bitburner > GangTaskStats GangTaskStats interface Object representing data representing a gang member task. Signature: export interface GangTaskStats Properties Property Type Description agiWeight number Agility skill impact on task scaling baseMoney number Base money earned baseRespect number Base respect earned baseWanted number Base wanted earned chaWeight number Charisma skill impact on task scaling defWeight number Defense skill impact on task scaling desc string Task Description dexWeight number Dexterity skill impact on task scaling difficulty number Number representing the difficulty of the task hackWeight number Hacking skill impact on task scaling isCombat boolean Is a task of a combat gang isHacking boolean Is a task of a hacking gang name string Task name strWeight number Strength skill impact on task scaling territory GangTerritory Territory impact on task scaling","title":"Bitburner.gangtaskstats"},{"location":"bitburner.gangtaskstats/#gangtaskstats-interface","text":"Object representing data representing a gang member task. Signature: export interface GangTaskStats","title":"GangTaskStats interface"},{"location":"bitburner.gangtaskstats/#properties","text":"Property Type Description agiWeight number Agility skill impact on task scaling baseMoney number Base money earned baseRespect number Base respect earned baseWanted number Base wanted earned chaWeight number Charisma skill impact on task scaling defWeight number Defense skill impact on task scaling desc string Task Description dexWeight number Dexterity skill impact on task scaling difficulty number Number representing the difficulty of the task hackWeight number Hacking skill impact on task scaling isCombat boolean Is a task of a combat gang isHacking boolean Is a task of a hacking gang name string Task name strWeight number Strength skill impact on task scaling territory GangTerritory Territory impact on task scaling","title":"Properties"},{"location":"bitburner.gangtaskstats.name/","text":"Home > bitburner > GangTaskStats > name GangTaskStats.name property Task name Signature: name: string;","title":"Bitburner.gangtaskstats.name"},{"location":"bitburner.gangtaskstats.name/#gangtaskstatsname-property","text":"Task name Signature: name: string;","title":"GangTaskStats.name property"},{"location":"bitburner.gangtaskstats.strweight/","text":"Home > bitburner > GangTaskStats > strWeight GangTaskStats.strWeight property Strength skill impact on task scaling Signature: strWeight: number;","title":"Bitburner.gangtaskstats.strweight"},{"location":"bitburner.gangtaskstats.strweight/#gangtaskstatsstrweight-property","text":"Strength skill impact on task scaling Signature: strWeight: number;","title":"GangTaskStats.strWeight property"},{"location":"bitburner.gangtaskstats.territory/","text":"Home > bitburner > GangTaskStats > territory GangTaskStats.territory property Territory impact on task scaling Signature: territory: GangTerritory;","title":"Bitburner.gangtaskstats.territory"},{"location":"bitburner.gangtaskstats.territory/#gangtaskstatsterritory-property","text":"Territory impact on task scaling Signature: territory: GangTerritory;","title":"GangTaskStats.territory property"},{"location":"bitburner.gangterritory/","text":"Home > bitburner > GangTerritory GangTerritory interface Signature: export interface GangTerritory Properties Property Type Description money number Money gain impact on task scaling respect number Respect gain impact on task scaling wanted number Wanted gain impact on task scaling","title":"Bitburner.gangterritory"},{"location":"bitburner.gangterritory/#gangterritory-interface","text":"Signature: export interface GangTerritory","title":"GangTerritory interface"},{"location":"bitburner.gangterritory/#properties","text":"Property Type Description money number Money gain impact on task scaling respect number Respect gain impact on task scaling wanted number Wanted gain impact on task scaling","title":"Properties"},{"location":"bitburner.gangterritory.money/","text":"Home > bitburner > GangTerritory > money GangTerritory.money property Money gain impact on task scaling Signature: money: number;","title":"Bitburner.gangterritory.money"},{"location":"bitburner.gangterritory.money/#gangterritorymoney-property","text":"Money gain impact on task scaling Signature: money: number;","title":"GangTerritory.money property"},{"location":"bitburner.gangterritory.respect/","text":"Home > bitburner > GangTerritory > respect GangTerritory.respect property Respect gain impact on task scaling Signature: respect: number;","title":"Bitburner.gangterritory.respect"},{"location":"bitburner.gangterritory.respect/#gangterritoryrespect-property","text":"Respect gain impact on task scaling Signature: respect: number;","title":"GangTerritory.respect property"},{"location":"bitburner.gangterritory.wanted/","text":"Home > bitburner > GangTerritory > wanted GangTerritory.wanted property Wanted gain impact on task scaling Signature: wanted: number;","title":"Bitburner.gangterritory.wanted"},{"location":"bitburner.gangterritory.wanted/#gangterritorywanted-property","text":"Wanted gain impact on task scaling Signature: wanted: number;","title":"GangTerritory.wanted property"},{"location":"bitburner.grafting.getaugmentationgraftprice/","text":"Home > bitburner > Grafting > getAugmentationGraftPrice Grafting.getAugmentationGraftPrice() method Retrieve the grafting cost of an aug. Signature: getAugmentationGraftPrice(augName: string): number; Parameters Parameter Type Description augName string Name of the aug to check the price of. Must be an exact match. Returns: number The cost required to graft the named augmentation. Exceptions Will error if an invalid Augmentation name is provided. Remarks RAM cost: 3.75 GB","title":"Bitburner.grafting.getaugmentationgraftprice"},{"location":"bitburner.grafting.getaugmentationgraftprice/#graftinggetaugmentationgraftprice-method","text":"Retrieve the grafting cost of an aug. Signature: getAugmentationGraftPrice(augName: string): number;","title":"Grafting.getAugmentationGraftPrice() method"},{"location":"bitburner.grafting.getaugmentationgraftprice/#parameters","text":"Parameter Type Description augName string Name of the aug to check the price of. Must be an exact match. Returns: number The cost required to graft the named augmentation.","title":"Parameters"},{"location":"bitburner.grafting.getaugmentationgraftprice/#exceptions","text":"Will error if an invalid Augmentation name is provided.","title":"Exceptions"},{"location":"bitburner.grafting.getaugmentationgraftprice/#remarks","text":"RAM cost: 3.75 GB","title":"Remarks"},{"location":"bitburner.grafting.getaugmentationgrafttime/","text":"Home > bitburner > Grafting > getAugmentationGraftTime Grafting.getAugmentationGraftTime() method Retrieves the time required to graft an aug. Signature: getAugmentationGraftTime(augName: string): number; Parameters Parameter Type Description augName string Name of the aug to check the grafting time of. Must be an exact match. Returns: number The time required, in millis, to graft the named augmentation. Exceptions Will error if an invalid Augmentation name is provided. Remarks RAM cost: 3.75 GB","title":"Bitburner.grafting.getaugmentationgrafttime"},{"location":"bitburner.grafting.getaugmentationgrafttime/#graftinggetaugmentationgrafttime-method","text":"Retrieves the time required to graft an aug. Signature: getAugmentationGraftTime(augName: string): number;","title":"Grafting.getAugmentationGraftTime() method"},{"location":"bitburner.grafting.getaugmentationgrafttime/#parameters","text":"Parameter Type Description augName string Name of the aug to check the grafting time of. Must be an exact match. Returns: number The time required, in millis, to graft the named augmentation.","title":"Parameters"},{"location":"bitburner.grafting.getaugmentationgrafttime/#exceptions","text":"Will error if an invalid Augmentation name is provided.","title":"Exceptions"},{"location":"bitburner.grafting.getaugmentationgrafttime/#remarks","text":"RAM cost: 3.75 GB","title":"Remarks"},{"location":"bitburner.grafting.getgraftableaugmentations/","text":"Home > bitburner > Grafting > getGraftableAugmentations Grafting.getGraftableAugmentations() method Retrieves a list of Augmentations that can be grafted. Signature: getGraftableAugmentations(): string[]; Returns: string[] An array of graftable Augmentations. Remarks RAM cost: 5 GB Note that this function returns a list of currently graftable Augmentations, based off of the Augmentations that you already own.","title":"Bitburner.grafting.getgraftableaugmentations"},{"location":"bitburner.grafting.getgraftableaugmentations/#graftinggetgraftableaugmentations-method","text":"Retrieves a list of Augmentations that can be grafted. Signature: getGraftableAugmentations(): string[]; Returns: string[] An array of graftable Augmentations.","title":"Grafting.getGraftableAugmentations() method"},{"location":"bitburner.grafting.getgraftableaugmentations/#remarks","text":"RAM cost: 5 GB Note that this function returns a list of currently graftable Augmentations, based off of the Augmentations that you already own.","title":"Remarks"},{"location":"bitburner.grafting.graftaugmentation/","text":"Home > bitburner > Grafting > graftAugmentation Grafting.graftAugmentation() method Begins grafting the named aug. You must be in New Tokyo to use this. Signature: graftAugmentation(augName: string, focus?: boolean): boolean; Parameters Parameter Type Description augName string The name of the aug to begin grafting. Must be an exact match. focus boolean Acquire player focus on this Augmentation grafting. Optional. Defaults to true. Returns: boolean True if the aug successfully began grafting, false otherwise (e.g. not enough money, or invalid Augmentation name provided). Exceptions Will error if called while you are not in New Tokyo. Remarks RAM cost: 7.5 GB","title":"Bitburner.grafting.graftaugmentation"},{"location":"bitburner.grafting.graftaugmentation/#graftinggraftaugmentation-method","text":"Begins grafting the named aug. You must be in New Tokyo to use this. Signature: graftAugmentation(augName: string, focus?: boolean): boolean;","title":"Grafting.graftAugmentation() method"},{"location":"bitburner.grafting.graftaugmentation/#parameters","text":"Parameter Type Description augName string The name of the aug to begin grafting. Must be an exact match. focus boolean Acquire player focus on this Augmentation grafting. Optional. Defaults to true. Returns: boolean True if the aug successfully began grafting, false otherwise (e.g. not enough money, or invalid Augmentation name provided).","title":"Parameters"},{"location":"bitburner.grafting.graftaugmentation/#exceptions","text":"Will error if called while you are not in New Tokyo.","title":"Exceptions"},{"location":"bitburner.grafting.graftaugmentation/#remarks","text":"RAM cost: 7.5 GB","title":"Remarks"},{"location":"bitburner.grafting/","text":"Home > bitburner > Grafting Grafting interface Grafting API Signature: export interface Grafting Remarks This API requires Source-File 10 to use. Methods Method Description getAugmentationGraftPrice(augName) Retrieve the grafting cost of an aug. getAugmentationGraftTime(augName) Retrieves the time required to graft an aug. getGraftableAugmentations() Retrieves a list of Augmentations that can be grafted. graftAugmentation(augName, focus) Begins grafting the named aug. You must be in New Tokyo to use this.","title":"Bitburner.grafting"},{"location":"bitburner.grafting/#grafting-interface","text":"Grafting API Signature: export interface Grafting","title":"Grafting interface"},{"location":"bitburner.grafting/#remarks","text":"This API requires Source-File 10 to use.","title":"Remarks"},{"location":"bitburner.grafting/#methods","text":"Method Description getAugmentationGraftPrice(augName) Retrieve the grafting cost of an aug. getAugmentationGraftTime(augName) Retrieves the time required to graft an aug. getGraftableAugmentations() Retrieves a list of Augmentations that can be grafted. graftAugmentation(augName, focus) Begins grafting the named aug. You must be in New Tokyo to use this.","title":"Methods"},{"location":"bitburner.hackingformulas.growpercent/","text":"Home > bitburner > HackingFormulas > growPercent HackingFormulas.growPercent() method Calculate the percent a server would grow to. (Ex: 3.0 would would grow the server to 300% of its current value.) Signature: growPercent(server: Server, threads: number, player: Player, cores?: number): number; Parameters Parameter Type Description server Server Server info from getServer threads number Amount of thread. player Player Player info from getPlayer cores number Number of cores on the computer that will execute grow. Returns: number The calculated grow percent.","title":"Bitburner.hackingformulas.growpercent"},{"location":"bitburner.hackingformulas.growpercent/#hackingformulasgrowpercent-method","text":"Calculate the percent a server would grow to. (Ex: 3.0 would would grow the server to 300% of its current value.) Signature: growPercent(server: Server, threads: number, player: Player, cores?: number): number;","title":"HackingFormulas.growPercent() method"},{"location":"bitburner.hackingformulas.growpercent/#parameters","text":"Parameter Type Description server Server Server info from getServer threads number Amount of thread. player Player Player info from getPlayer cores number Number of cores on the computer that will execute grow. Returns: number The calculated grow percent.","title":"Parameters"},{"location":"bitburner.hackingformulas.growtime/","text":"Home > bitburner > HackingFormulas > growTime HackingFormulas.growTime() method Calculate grow time. Signature: growTime(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated grow time.","title":"Bitburner.hackingformulas.growtime"},{"location":"bitburner.hackingformulas.growtime/#hackingformulasgrowtime-method","text":"Calculate grow time. Signature: growTime(server: Server, player: Player): number;","title":"HackingFormulas.growTime() method"},{"location":"bitburner.hackingformulas.growtime/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated grow time.","title":"Parameters"},{"location":"bitburner.hackingformulas.hackchance/","text":"Home > bitburner > HackingFormulas > hackChance HackingFormulas.hackChance() method Calculate hack chance. (Ex: 0.25 would indicate a 25% chance of success.) Signature: hackChance(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack chance.","title":"Bitburner.hackingformulas.hackchance"},{"location":"bitburner.hackingformulas.hackchance/#hackingformulashackchance-method","text":"Calculate hack chance. (Ex: 0.25 would indicate a 25% chance of success.) Signature: hackChance(server: Server, player: Player): number;","title":"HackingFormulas.hackChance() method"},{"location":"bitburner.hackingformulas.hackchance/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack chance.","title":"Parameters"},{"location":"bitburner.hackingformulas.hackexp/","text":"Home > bitburner > HackingFormulas > hackExp HackingFormulas.hackExp() method Calculate hack exp for one thread. Signature: hackExp(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack exp. Remarks Multiply by thread to get total exp","title":"Bitburner.hackingformulas.hackexp"},{"location":"bitburner.hackingformulas.hackexp/#hackingformulashackexp-method","text":"Calculate hack exp for one thread. Signature: hackExp(server: Server, player: Player): number;","title":"HackingFormulas.hackExp() method"},{"location":"bitburner.hackingformulas.hackexp/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack exp.","title":"Parameters"},{"location":"bitburner.hackingformulas.hackexp/#remarks","text":"Multiply by thread to get total exp","title":"Remarks"},{"location":"bitburner.hackingformulas.hackpercent/","text":"Home > bitburner > HackingFormulas > hackPercent HackingFormulas.hackPercent() method Calculate hack percent for one thread. (Ex: 0.25 would steal 25% of the server's current value.) Signature: hackPercent(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack percent. Remarks Multiply by thread to get total percent hacked.","title":"Bitburner.hackingformulas.hackpercent"},{"location":"bitburner.hackingformulas.hackpercent/#hackingformulashackpercent-method","text":"Calculate hack percent for one thread. (Ex: 0.25 would steal 25% of the server's current value.) Signature: hackPercent(server: Server, player: Player): number;","title":"HackingFormulas.hackPercent() method"},{"location":"bitburner.hackingformulas.hackpercent/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack percent.","title":"Parameters"},{"location":"bitburner.hackingformulas.hackpercent/#remarks","text":"Multiply by thread to get total percent hacked.","title":"Remarks"},{"location":"bitburner.hackingformulas.hacktime/","text":"Home > bitburner > HackingFormulas > hackTime HackingFormulas.hackTime() method Calculate hack time. Signature: hackTime(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack time.","title":"Bitburner.hackingformulas.hacktime"},{"location":"bitburner.hackingformulas.hacktime/#hackingformulashacktime-method","text":"Calculate hack time. Signature: hackTime(server: Server, player: Player): number;","title":"HackingFormulas.hackTime() method"},{"location":"bitburner.hackingformulas.hacktime/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated hack time.","title":"Parameters"},{"location":"bitburner.hackingformulas/","text":"Home > bitburner > HackingFormulas HackingFormulas interface Hacking formulas Signature: interface HackingFormulas Methods Method Description growPercent(server, threads, player, cores) Calculate the percent a server would grow to. (Ex: 3.0 would would grow the server to 300% of its current value.) growTime(server, player) Calculate grow time. hackChance(server, player) Calculate hack chance. (Ex: 0.25 would indicate a 25% chance of success.) hackExp(server, player) Calculate hack exp for one thread. hackPercent(server, player) Calculate hack percent for one thread. (Ex: 0.25 would steal 25% of the server's current value.) hackTime(server, player) Calculate hack time. weakenTime(server, player) Calculate weaken time.","title":"Bitburner.hackingformulas"},{"location":"bitburner.hackingformulas/#hackingformulas-interface","text":"Hacking formulas Signature: interface HackingFormulas","title":"HackingFormulas interface"},{"location":"bitburner.hackingformulas/#methods","text":"Method Description growPercent(server, threads, player, cores) Calculate the percent a server would grow to. (Ex: 3.0 would would grow the server to 300% of its current value.) growTime(server, player) Calculate grow time. hackChance(server, player) Calculate hack chance. (Ex: 0.25 would indicate a 25% chance of success.) hackExp(server, player) Calculate hack exp for one thread. hackPercent(server, player) Calculate hack percent for one thread. (Ex: 0.25 would steal 25% of the server's current value.) hackTime(server, player) Calculate hack time. weakenTime(server, player) Calculate weaken time.","title":"Methods"},{"location":"bitburner.hackingformulas.weakentime/","text":"Home > bitburner > HackingFormulas > weakenTime HackingFormulas.weakenTime() method Calculate weaken time. Signature: weakenTime(server: Server, player: Player): number; Parameters Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated weaken time.","title":"Bitburner.hackingformulas.weakentime"},{"location":"bitburner.hackingformulas.weakentime/#hackingformulasweakentime-method","text":"Calculate weaken time. Signature: weakenTime(server: Server, player: Player): number;","title":"HackingFormulas.weakenTime() method"},{"location":"bitburner.hackingformulas.weakentime/#parameters","text":"Parameter Type Description server Server Server info from getServer player Player Player info from getPlayer Returns: number The calculated weaken time.","title":"Parameters"},{"location":"bitburner.hackingmultipliers.chance/","text":"Home > bitburner > HackingMultipliers > chance HackingMultipliers.chance property Player's hacking chance multiplier. Signature: chance: number;","title":"Bitburner.hackingmultipliers.chance"},{"location":"bitburner.hackingmultipliers.chance/#hackingmultiplierschance-property","text":"Player's hacking chance multiplier. Signature: chance: number;","title":"HackingMultipliers.chance property"},{"location":"bitburner.hackingmultipliers.growth/","text":"Home > bitburner > HackingMultipliers > growth HackingMultipliers.growth property Player's hacking growth multiplier Signature: growth: number;","title":"Bitburner.hackingmultipliers.growth"},{"location":"bitburner.hackingmultipliers.growth/#hackingmultipliersgrowth-property","text":"Player's hacking growth multiplier Signature: growth: number;","title":"HackingMultipliers.growth property"},{"location":"bitburner.hackingmultipliers/","text":"Home > bitburner > HackingMultipliers HackingMultipliers interface Hack related multipliers. Signature: export interface HackingMultipliers Properties Property Type Description chance number Player's hacking chance multiplier. growth number Player's hacking growth multiplier money number Player's hacking money stolen multiplier. speed number Player's hacking speed multiplier.","title":"Bitburner.hackingmultipliers"},{"location":"bitburner.hackingmultipliers/#hackingmultipliers-interface","text":"Hack related multipliers. Signature: export interface HackingMultipliers","title":"HackingMultipliers interface"},{"location":"bitburner.hackingmultipliers/#properties","text":"Property Type Description chance number Player's hacking chance multiplier. growth number Player's hacking growth multiplier money number Player's hacking money stolen multiplier. speed number Player's hacking speed multiplier.","title":"Properties"},{"location":"bitburner.hackingmultipliers.money/","text":"Home > bitburner > HackingMultipliers > money HackingMultipliers.money property Player's hacking money stolen multiplier. Signature: money: number;","title":"Bitburner.hackingmultipliers.money"},{"location":"bitburner.hackingmultipliers.money/#hackingmultipliersmoney-property","text":"Player's hacking money stolen multiplier. Signature: money: number;","title":"HackingMultipliers.money property"},{"location":"bitburner.hackingmultipliers.speed/","text":"Home > bitburner > HackingMultipliers > speed HackingMultipliers.speed property Player's hacking speed multiplier. Signature: speed: number;","title":"Bitburner.hackingmultipliers.speed"},{"location":"bitburner.hackingmultipliers.speed/#hackingmultipliersspeed-property","text":"Player's hacking speed multiplier. Signature: speed: number;","title":"HackingMultipliers.speed property"},{"location":"bitburner.hacknet.getcacheupgradecost/","text":"Home > bitburner > Hacknet > getCacheUpgradeCost Hacknet.getCacheUpgradeCost() method Calculate the cost of upgrading hacknet node cache. Signature: getCacheUpgradeCost(index: number, n: number): number; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade cache. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's cache. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the cost of upgrading the cache level of the specified Hacknet Server by n. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Bitburner.hacknet.getcacheupgradecost"},{"location":"bitburner.hacknet.getcacheupgradecost/#hacknetgetcacheupgradecost-method","text":"Calculate the cost of upgrading hacknet node cache. Signature: getCacheUpgradeCost(index: number, n: number): number;","title":"Hacknet.getCacheUpgradeCost() method"},{"location":"bitburner.hacknet.getcacheupgradecost/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade cache. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's cache.","title":"Parameters"},{"location":"bitburner.hacknet.getcacheupgradecost/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the cost of upgrading the cache level of the specified Hacknet Server by n. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Remarks"},{"location":"bitburner.hacknet.getcoreupgradecost/","text":"Home > bitburner > Hacknet > getCoreUpgradeCost Hacknet.getCoreUpgradeCost() method Calculate the cost of upgrading hacknet node cores. Signature: getCoreUpgradeCost(index: number, n: number): number; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade cores. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's number of cores. Remarks RAM cost: 0 GB Returns the cost of upgrading the number of cores of the specified Hacknet Node by n. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Bitburner.hacknet.getcoreupgradecost"},{"location":"bitburner.hacknet.getcoreupgradecost/#hacknetgetcoreupgradecost-method","text":"Calculate the cost of upgrading hacknet node cores. Signature: getCoreUpgradeCost(index: number, n: number): number;","title":"Hacknet.getCoreUpgradeCost() method"},{"location":"bitburner.hacknet.getcoreupgradecost/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade cores. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's number of cores.","title":"Parameters"},{"location":"bitburner.hacknet.getcoreupgradecost/#remarks","text":"RAM cost: 0 GB Returns the cost of upgrading the number of cores of the specified Hacknet Node by n. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Remarks"},{"location":"bitburner.hacknet.gethashupgradelevel/","text":"Home > bitburner > Hacknet > getHashUpgradeLevel Hacknet.getHashUpgradeLevel() method Get the level of a hash upgrade. Signature: getHashUpgradeLevel(upgName: string): number; Parameters Parameter Type Description upgName string Returns: number Level of the upgrade. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Bitburner.hacknet.gethashupgradelevel"},{"location":"bitburner.hacknet.gethashupgradelevel/#hacknetgethashupgradelevel-method","text":"Get the level of a hash upgrade. Signature: getHashUpgradeLevel(upgName: string): number;","title":"Hacknet.getHashUpgradeLevel() method"},{"location":"bitburner.hacknet.gethashupgradelevel/#parameters","text":"Parameter Type Description upgName string Returns: number Level of the upgrade.","title":"Parameters"},{"location":"bitburner.hacknet.gethashupgradelevel/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Remarks"},{"location":"bitburner.hacknet.gethashupgrades/","text":"Home > bitburner > Hacknet > getHashUpgrades Hacknet.getHashUpgrades() method Get the list of hash upgrades Signature: getHashUpgrades(): string[]; Returns: string[] An array containing the available upgrades Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the list of all available hash upgrades that can be used in the spendHashes function. Example 1 // NS1: var upgrades = hacknet.getHashUpgrades(); // [\"Sell for Money\",\"Sell for Corporation Funds\",...] Example 2 // NS2: const upgrades = ns.hacknet.getHashUpgrades(); // [\"Sell for Money\",\"Sell for Corporation Funds\",...]","title":"Bitburner.hacknet.gethashupgrades"},{"location":"bitburner.hacknet.gethashupgrades/#hacknetgethashupgrades-method","text":"Get the list of hash upgrades Signature: getHashUpgrades(): string[]; Returns: string[] An array containing the available upgrades","title":"Hacknet.getHashUpgrades() method"},{"location":"bitburner.hacknet.gethashupgrades/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the list of all available hash upgrades that can be used in the spendHashes function.","title":"Remarks"},{"location":"bitburner.hacknet.gethashupgrades/#example-1","text":"// NS1: var upgrades = hacknet.getHashUpgrades(); // [\"Sell for Money\",\"Sell for Corporation Funds\",...]","title":"Example 1"},{"location":"bitburner.hacknet.gethashupgrades/#example-2","text":"// NS2: const upgrades = ns.hacknet.getHashUpgrades(); // [\"Sell for Money\",\"Sell for Corporation Funds\",...]","title":"Example 2"},{"location":"bitburner.hacknet.getlevelupgradecost/","text":"Home > bitburner > Hacknet > getLevelUpgradeCost Hacknet.getLevelUpgradeCost() method Calculate the cost of upgrading hacknet node levels. Signature: getLevelUpgradeCost(index: number, n: number): number; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of levels to upgrade. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node. Remarks RAM cost: 0 GB Returns the cost of upgrading the specified Hacknet Node by n levels. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Bitburner.hacknet.getlevelupgradecost"},{"location":"bitburner.hacknet.getlevelupgradecost/#hacknetgetlevelupgradecost-method","text":"Calculate the cost of upgrading hacknet node levels. Signature: getLevelUpgradeCost(index: number, n: number): number;","title":"Hacknet.getLevelUpgradeCost() method"},{"location":"bitburner.hacknet.getlevelupgradecost/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of levels to upgrade. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node.","title":"Parameters"},{"location":"bitburner.hacknet.getlevelupgradecost/#remarks","text":"RAM cost: 0 GB Returns the cost of upgrading the specified Hacknet Node by n levels. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node is already at max level, then Infinity is returned.","title":"Remarks"},{"location":"bitburner.hacknet.getnodestats/","text":"Home > bitburner > Hacknet > getNodeStats Hacknet.getNodeStats() method Get the stats of a hacknet node. Signature: getNodeStats(index: number): NodeStats; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node Returns: NodeStats Object containing a variety of stats about the specified Hacknet Node. Remarks RAM cost: 0 GB Returns an object containing a variety of stats about the specified Hacknet Node. Note that for Hacknet Nodes, production refers to the amount of money the node generates. For Hacknet Servers (the upgraded version of Hacknet Nodes), production refers to the amount of hashes the node generates.","title":"Bitburner.hacknet.getnodestats"},{"location":"bitburner.hacknet.getnodestats/#hacknetgetnodestats-method","text":"Get the stats of a hacknet node. Signature: getNodeStats(index: number): NodeStats;","title":"Hacknet.getNodeStats() method"},{"location":"bitburner.hacknet.getnodestats/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node Returns: NodeStats Object containing a variety of stats about the specified Hacknet Node.","title":"Parameters"},{"location":"bitburner.hacknet.getnodestats/#remarks","text":"RAM cost: 0 GB Returns an object containing a variety of stats about the specified Hacknet Node. Note that for Hacknet Nodes, production refers to the amount of money the node generates. For Hacknet Servers (the upgraded version of Hacknet Nodes), production refers to the amount of hashes the node generates.","title":"Remarks"},{"location":"bitburner.hacknet.getpurchasenodecost/","text":"Home > bitburner > Hacknet > getPurchaseNodeCost Hacknet.getPurchaseNodeCost() method Get the price of the next hacknet node. Signature: getPurchaseNodeCost(): number; Returns: number Cost of purchasing a new Hacknet Node. Remarks RAM cost: 0 GB Returns the cost of purchasing a new Hacknet Node.","title":"Bitburner.hacknet.getpurchasenodecost"},{"location":"bitburner.hacknet.getpurchasenodecost/#hacknetgetpurchasenodecost-method","text":"Get the price of the next hacknet node. Signature: getPurchaseNodeCost(): number; Returns: number Cost of purchasing a new Hacknet Node.","title":"Hacknet.getPurchaseNodeCost() method"},{"location":"bitburner.hacknet.getpurchasenodecost/#remarks","text":"RAM cost: 0 GB Returns the cost of purchasing a new Hacknet Node.","title":"Remarks"},{"location":"bitburner.hacknet.getramupgradecost/","text":"Home > bitburner > Hacknet > getRamUpgradeCost Hacknet.getRamUpgradeCost() method Calculate the cost of upgrading hacknet node RAM. Signature: getRamUpgradeCost(index: number, n: number): number; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade RAM. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's RAM. Remarks RAM cost: 0 GB Returns the cost of upgrading the RAM of the specified Hacknet Node n times. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node already has max RAM, then Infinity is returned.","title":"Bitburner.hacknet.getramupgradecost"},{"location":"bitburner.hacknet.getramupgradecost/#hacknetgetramupgradecost-method","text":"Calculate the cost of upgrading hacknet node RAM. Signature: getRamUpgradeCost(index: number, n: number): number;","title":"Hacknet.getRamUpgradeCost() method"},{"location":"bitburner.hacknet.getramupgradecost/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade RAM. Must be positive. Rounded to nearest integer. Returns: number Cost of upgrading the specified Hacknet Node's RAM.","title":"Parameters"},{"location":"bitburner.hacknet.getramupgradecost/#remarks","text":"RAM cost: 0 GB Returns the cost of upgrading the RAM of the specified Hacknet Node n times. If an invalid value for n is provided, then this function returns 0. If the specified Hacknet Node already has max RAM, then Infinity is returned.","title":"Remarks"},{"location":"bitburner.hacknet.getstudymult/","text":"Home > bitburner > Hacknet > getStudyMult Hacknet.getStudyMult() method Get the multiplier to study. Signature: getStudyMult(): number; Returns: number Multiplier. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Bitburner.hacknet.getstudymult"},{"location":"bitburner.hacknet.getstudymult/#hacknetgetstudymult-method","text":"Get the multiplier to study. Signature: getStudyMult(): number; Returns: number Multiplier.","title":"Hacknet.getStudyMult() method"},{"location":"bitburner.hacknet.getstudymult/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Remarks"},{"location":"bitburner.hacknet.gettrainingmult/","text":"Home > bitburner > Hacknet > getTrainingMult Hacknet.getTrainingMult() method Get the multiplier to training. Signature: getTrainingMult(): number; Returns: number Multiplier. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Bitburner.hacknet.gettrainingmult"},{"location":"bitburner.hacknet.gettrainingmult/#hacknetgettrainingmult-method","text":"Get the multiplier to training. Signature: getTrainingMult(): number; Returns: number Multiplier.","title":"Hacknet.getTrainingMult() method"},{"location":"bitburner.hacknet.gettrainingmult/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node).","title":"Remarks"},{"location":"bitburner.hacknet.hashcapacity/","text":"Home > bitburner > Hacknet > hashCapacity Hacknet.hashCapacity() method Get the maximum number of hashes you can store. Signature: hashCapacity(): number; Returns: number Number of hashes you can store. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes you can store.","title":"Bitburner.hacknet.hashcapacity"},{"location":"bitburner.hacknet.hashcapacity/#hacknethashcapacity-method","text":"Get the maximum number of hashes you can store. Signature: hashCapacity(): number; Returns: number Number of hashes you can store.","title":"Hacknet.hashCapacity() method"},{"location":"bitburner.hacknet.hashcapacity/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes you can store.","title":"Remarks"},{"location":"bitburner.hacknet.hashcost/","text":"Home > bitburner > Hacknet > hashCost Hacknet.hashCost() method Get the cost of a hash upgrade. Signature: hashCost(upgName: string, count?: number): number; Parameters Parameter Type Description upgName string Name of the upgrade of Hacknet Node. count number Number of upgrades to buy at once. Defaults to 1 if not specified. Returns: number Number of hashes required for the specified upgrade. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes required for the specified upgrade. The name of the upgrade must be an exact match. Example 1 // NS1: var upgradeName = \"Sell for Corporation Funds\"; if (hacknet.numHashes() > hacknet.hashCost(upgradeName)) { hacknet.spendHashes(upgradeName); } Example 2 // NS2: const upgradeName = \"Sell for Corporation Funds\"; if (ns.hacknet.numHashes() > ns.hacknet.hashCost(upgradeName)) { ns.hacknet.spendHashes(upgradeName); }","title":"Bitburner.hacknet.hashcost"},{"location":"bitburner.hacknet.hashcost/#hacknethashcost-method","text":"Get the cost of a hash upgrade. Signature: hashCost(upgName: string, count?: number): number;","title":"Hacknet.hashCost() method"},{"location":"bitburner.hacknet.hashcost/#parameters","text":"Parameter Type Description upgName string Name of the upgrade of Hacknet Node. count number Number of upgrades to buy at once. Defaults to 1 if not specified. Returns: number Number of hashes required for the specified upgrade.","title":"Parameters"},{"location":"bitburner.hacknet.hashcost/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes required for the specified upgrade. The name of the upgrade must be an exact match.","title":"Remarks"},{"location":"bitburner.hacknet.hashcost/#example-1","text":"// NS1: var upgradeName = \"Sell for Corporation Funds\"; if (hacknet.numHashes() > hacknet.hashCost(upgradeName)) { hacknet.spendHashes(upgradeName); }","title":"Example 1"},{"location":"bitburner.hacknet.hashcost/#example-2","text":"// NS2: const upgradeName = \"Sell for Corporation Funds\"; if (ns.hacknet.numHashes() > ns.hacknet.hashCost(upgradeName)) { ns.hacknet.spendHashes(upgradeName); }","title":"Example 2"},{"location":"bitburner.hacknet.maxnumnodes/","text":"Home > bitburner > Hacknet > maxNumNodes Hacknet.maxNumNodes() method Get the maximum number of hacknet nodes. Signature: maxNumNodes(): number; Returns: number Maximum number of hacknet nodes. Remarks RAM cost: 0 GB","title":"Bitburner.hacknet.maxnumnodes"},{"location":"bitburner.hacknet.maxnumnodes/#hacknetmaxnumnodes-method","text":"Get the maximum number of hacknet nodes. Signature: maxNumNodes(): number; Returns: number Maximum number of hacknet nodes.","title":"Hacknet.maxNumNodes() method"},{"location":"bitburner.hacknet.maxnumnodes/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.hacknet/","text":"Home > bitburner > Hacknet Hacknet interface Hacknet API Signature: export interface Hacknet Remarks Not all these functions are immediately available. Methods Method Description getCacheUpgradeCost(index, n) Calculate the cost of upgrading hacknet node cache. getCoreUpgradeCost(index, n) Calculate the cost of upgrading hacknet node cores. getHashUpgradeLevel(upgName) Get the level of a hash upgrade. getHashUpgrades() Get the list of hash upgrades getLevelUpgradeCost(index, n) Calculate the cost of upgrading hacknet node levels. getNodeStats(index) Get the stats of a hacknet node. getPurchaseNodeCost() Get the price of the next hacknet node. getRamUpgradeCost(index, n) Calculate the cost of upgrading hacknet node RAM. getStudyMult() Get the multiplier to study. getTrainingMult() Get the multiplier to training. hashCapacity() Get the maximum number of hashes you can store. hashCost(upgName, count) Get the cost of a hash upgrade. maxNumNodes() Get the maximum number of hacknet nodes. numHashes() Get the total number of hashes stored. numNodes() Get the number of hacknet nodes you own. purchaseNode() Purchase a new hacknet node. spendHashes(upgName, upgTarget, count) Purchase a hash upgrade. upgradeCache(index, n) Upgrade the cache of a hacknet node. upgradeCore(index, n) Upgrade the core of a hacknet node. upgradeLevel(index, n) Upgrade the level of a hacknet node. upgradeRam(index, n) Upgrade the RAM of a hacknet node.","title":"Bitburner.hacknet"},{"location":"bitburner.hacknet/#hacknet-interface","text":"Hacknet API Signature: export interface Hacknet","title":"Hacknet interface"},{"location":"bitburner.hacknet/#remarks","text":"Not all these functions are immediately available.","title":"Remarks"},{"location":"bitburner.hacknet/#methods","text":"Method Description getCacheUpgradeCost(index, n) Calculate the cost of upgrading hacknet node cache. getCoreUpgradeCost(index, n) Calculate the cost of upgrading hacknet node cores. getHashUpgradeLevel(upgName) Get the level of a hash upgrade. getHashUpgrades() Get the list of hash upgrades getLevelUpgradeCost(index, n) Calculate the cost of upgrading hacknet node levels. getNodeStats(index) Get the stats of a hacknet node. getPurchaseNodeCost() Get the price of the next hacknet node. getRamUpgradeCost(index, n) Calculate the cost of upgrading hacknet node RAM. getStudyMult() Get the multiplier to study. getTrainingMult() Get the multiplier to training. hashCapacity() Get the maximum number of hashes you can store. hashCost(upgName, count) Get the cost of a hash upgrade. maxNumNodes() Get the maximum number of hacknet nodes. numHashes() Get the total number of hashes stored. numNodes() Get the number of hacknet nodes you own. purchaseNode() Purchase a new hacknet node. spendHashes(upgName, upgTarget, count) Purchase a hash upgrade. upgradeCache(index, n) Upgrade the cache of a hacknet node. upgradeCore(index, n) Upgrade the core of a hacknet node. upgradeLevel(index, n) Upgrade the level of a hacknet node. upgradeRam(index, n) Upgrade the RAM of a hacknet node.","title":"Methods"},{"location":"bitburner.hacknet.numhashes/","text":"Home > bitburner > Hacknet > numHashes Hacknet.numHashes() method Get the total number of hashes stored. Signature: numHashes(): number; Returns: number Number of hashes you have. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes you have.","title":"Bitburner.hacknet.numhashes"},{"location":"bitburner.hacknet.numhashes/#hacknetnumhashes-method","text":"Get the total number of hashes stored. Signature: numHashes(): number; Returns: number Number of hashes you have.","title":"Hacknet.numHashes() method"},{"location":"bitburner.hacknet.numhashes/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Returns the number of hashes you have.","title":"Remarks"},{"location":"bitburner.hacknet.numnodes/","text":"Home > bitburner > Hacknet > numNodes Hacknet.numNodes() method Get the number of hacknet nodes you own. Signature: numNodes(): number; Returns: number Number of hacknet nodes. Remarks RAM cost: 0 GB Returns the number of Hacknet Nodes you own.","title":"Bitburner.hacknet.numnodes"},{"location":"bitburner.hacknet.numnodes/#hacknetnumnodes-method","text":"Get the number of hacknet nodes you own. Signature: numNodes(): number; Returns: number Number of hacknet nodes.","title":"Hacknet.numNodes() method"},{"location":"bitburner.hacknet.numnodes/#remarks","text":"RAM cost: 0 GB Returns the number of Hacknet Nodes you own.","title":"Remarks"},{"location":"bitburner.hacknet.purchasenode/","text":"Home > bitburner > Hacknet > purchaseNode Hacknet.purchaseNode() method Purchase a new hacknet node. Signature: purchaseNode(): number; Returns: number The index of the Hacknet Node or if the player cannot afford to purchase a new Hacknet Node the function will return -1. Remarks RAM cost: 0 GB Purchases a new Hacknet Node. Returns a number with the index of the Hacknet Node. This index is equivalent to the number at the end of the Hacknet Node\u2019s name (e.g The Hacknet Node named hacknet-node-4 will have an index of 4). If the player cannot afford to purchase a new Hacknet Node then the function will return -1.","title":"Bitburner.hacknet.purchasenode"},{"location":"bitburner.hacknet.purchasenode/#hacknetpurchasenode-method","text":"Purchase a new hacknet node. Signature: purchaseNode(): number; Returns: number The index of the Hacknet Node or if the player cannot afford to purchase a new Hacknet Node the function will return -1.","title":"Hacknet.purchaseNode() method"},{"location":"bitburner.hacknet.purchasenode/#remarks","text":"RAM cost: 0 GB Purchases a new Hacknet Node. Returns a number with the index of the Hacknet Node. This index is equivalent to the number at the end of the Hacknet Node\u2019s name (e.g The Hacknet Node named hacknet-node-4 will have an index of 4). If the player cannot afford to purchase a new Hacknet Node then the function will return -1.","title":"Remarks"},{"location":"bitburner.hacknet.spendhashes/","text":"Home > bitburner > Hacknet > spendHashes Hacknet.spendHashes() method Purchase a hash upgrade. Signature: spendHashes(upgName: string, upgTarget?: string, count?: number): boolean; Parameters Parameter Type Description upgName string Name of the upgrade of Hacknet Node. upgTarget string Object to which upgrade applies. Required for certain upgrades. count number Number of upgrades to buy at once. Defaults to 1 if not specified. For compatibility reasons, upgTarget must be specified, even if it is not used, in order to specify count. Returns: boolean True if the upgrade is successfully purchased, and false otherwise. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Spend the hashes generated by your Hacknet Servers on an upgrade. Returns a boolean value - true if the upgrade is successfully purchased, and false otherwise. The name of the upgrade must be an exact match. The upgTarget argument is used for upgrades such as Reduce Minimum Security , which applies to a specific server. In this case, the upgTarget argument must be the hostname of the server. Example 1 // NS1: hacknet.spendHashes(\"Sell for Corporation Funds\"); hacknet.spendHashes(\"Increase Maximum Money\", \"foodnstuff\"); Example 2 NS2: ns.hacknet.spendHashes(\"Sell for Corporation Funds\"); ns.hacknet.spendHashes(\"Increase Maximum Money\", \"foodnstuff\");","title":"Bitburner.hacknet.spendhashes"},{"location":"bitburner.hacknet.spendhashes/#hacknetspendhashes-method","text":"Purchase a hash upgrade. Signature: spendHashes(upgName: string, upgTarget?: string, count?: number): boolean;","title":"Hacknet.spendHashes() method"},{"location":"bitburner.hacknet.spendhashes/#parameters","text":"Parameter Type Description upgName string Name of the upgrade of Hacknet Node. upgTarget string Object to which upgrade applies. Required for certain upgrades. count number Number of upgrades to buy at once. Defaults to 1 if not specified. For compatibility reasons, upgTarget must be specified, even if it is not used, in order to specify count. Returns: boolean True if the upgrade is successfully purchased, and false otherwise.","title":"Parameters"},{"location":"bitburner.hacknet.spendhashes/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Spend the hashes generated by your Hacknet Servers on an upgrade. Returns a boolean value - true if the upgrade is successfully purchased, and false otherwise. The name of the upgrade must be an exact match. The upgTarget argument is used for upgrades such as Reduce Minimum Security , which applies to a specific server. In this case, the upgTarget argument must be the hostname of the server.","title":"Remarks"},{"location":"bitburner.hacknet.spendhashes/#example-1","text":"// NS1: hacknet.spendHashes(\"Sell for Corporation Funds\"); hacknet.spendHashes(\"Increase Maximum Money\", \"foodnstuff\");","title":"Example 1"},{"location":"bitburner.hacknet.spendhashes/#example-2","text":"NS2: ns.hacknet.spendHashes(\"Sell for Corporation Funds\"); ns.hacknet.spendHashes(\"Increase Maximum Money\", \"foodnstuff\");","title":"Example 2"},{"location":"bitburner.hacknet.upgradecache/","text":"Home > bitburner > Hacknet > upgradeCache Hacknet.upgradeCache() method Upgrade the cache of a hacknet node. Signature: upgradeCache(index: number, n: number): boolean; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of cache levels to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s cache level is successfully upgraded, false otherwise. Remarks RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Tries to upgrade the specified Hacknet Server\u2019s cache n times. Returns true if it successfully upgrades the Server\u2019s cache n times, or if it purchases some positive amount and the Server reaches its max cache level. Returns false otherwise.","title":"Bitburner.hacknet.upgradecache"},{"location":"bitburner.hacknet.upgradecache/#hacknetupgradecache-method","text":"Upgrade the cache of a hacknet node. Signature: upgradeCache(index: number, n: number): boolean;","title":"Hacknet.upgradeCache() method"},{"location":"bitburner.hacknet.upgradecache/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of cache levels to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s cache level is successfully upgraded, false otherwise.","title":"Parameters"},{"location":"bitburner.hacknet.upgradecache/#remarks","text":"RAM cost: 0 GB This function is only applicable for Hacknet Servers (the upgraded version of a Hacknet Node). Tries to upgrade the specified Hacknet Server\u2019s cache n times. Returns true if it successfully upgrades the Server\u2019s cache n times, or if it purchases some positive amount and the Server reaches its max cache level. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.hacknet.upgradecore/","text":"Home > bitburner > Hacknet > upgradeCore Hacknet.upgradeCore() method Upgrade the core of a hacknet node. Signature: upgradeCore(index: number, n: number): boolean; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of cores to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s cores are successfully purchased, false otherwise. Remarks RAM cost: 0 GB Tries to purchase n cores for the specified Hacknet Node. Returns true if it successfully purchases n cores for the Hacknet Node or if it purchases some positive amount and the Node reaches its max number of cores. Returns false otherwise.","title":"Bitburner.hacknet.upgradecore"},{"location":"bitburner.hacknet.upgradecore/#hacknetupgradecore-method","text":"Upgrade the core of a hacknet node. Signature: upgradeCore(index: number, n: number): boolean;","title":"Hacknet.upgradeCore() method"},{"location":"bitburner.hacknet.upgradecore/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of cores to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s cores are successfully purchased, false otherwise.","title":"Parameters"},{"location":"bitburner.hacknet.upgradecore/#remarks","text":"RAM cost: 0 GB Tries to purchase n cores for the specified Hacknet Node. Returns true if it successfully purchases n cores for the Hacknet Node or if it purchases some positive amount and the Node reaches its max number of cores. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.hacknet.upgradelevel/","text":"Home > bitburner > Hacknet > upgradeLevel Hacknet.upgradeLevel() method Upgrade the level of a hacknet node. Signature: upgradeLevel(index: number, n: number): boolean; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of levels to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s level is successfully upgraded, false otherwise. Remarks RAM cost: 0 GB Tries to upgrade the level of the specified Hacknet Node by n. Returns true if the Hacknet Node\u2019s level is successfully upgraded by n or if it is upgraded by some positive amount and the Node reaches its max level. Returns false otherwise.","title":"Bitburner.hacknet.upgradelevel"},{"location":"bitburner.hacknet.upgradelevel/#hacknetupgradelevel-method","text":"Upgrade the level of a hacknet node. Signature: upgradeLevel(index: number, n: number): boolean;","title":"Hacknet.upgradeLevel() method"},{"location":"bitburner.hacknet.upgradelevel/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of levels to purchase. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s level is successfully upgraded, false otherwise.","title":"Parameters"},{"location":"bitburner.hacknet.upgradelevel/#remarks","text":"RAM cost: 0 GB Tries to upgrade the level of the specified Hacknet Node by n. Returns true if the Hacknet Node\u2019s level is successfully upgraded by n or if it is upgraded by some positive amount and the Node reaches its max level. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.hacknet.upgraderam/","text":"Home > bitburner > Hacknet > upgradeRam Hacknet.upgradeRam() method Upgrade the RAM of a hacknet node. Signature: upgradeRam(index: number, n: number): boolean; Parameters Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade RAM. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s RAM is successfully upgraded, false otherwise. Remarks RAM cost: 0 GB Tries to upgrade the specified Hacknet Node\u2019s RAM n times. Note that each upgrade doubles the Node\u2019s RAM. So this is equivalent to multiplying the Node\u2019s RAM by 2 n. Returns true if the Hacknet Node\u2019s RAM is successfully upgraded n times or if it is upgraded some positive number of times and the Node reaches its max RAM. Returns false otherwise.","title":"Bitburner.hacknet.upgraderam"},{"location":"bitburner.hacknet.upgraderam/#hacknetupgraderam-method","text":"Upgrade the RAM of a hacknet node. Signature: upgradeRam(index: number, n: number): boolean;","title":"Hacknet.upgradeRam() method"},{"location":"bitburner.hacknet.upgraderam/#parameters","text":"Parameter Type Description index number Index/Identifier of Hacknet Node. n number Number of times to upgrade RAM. Must be positive. Rounded to nearest integer. Returns: boolean True if the Hacknet Node\u2019s RAM is successfully upgraded, false otherwise.","title":"Parameters"},{"location":"bitburner.hacknet.upgraderam/#remarks","text":"RAM cost: 0 GB Tries to upgrade the specified Hacknet Node\u2019s RAM n times. Note that each upgrade doubles the Node\u2019s RAM. So this is equivalent to multiplying the Node\u2019s RAM by 2 n. Returns true if the Hacknet Node\u2019s RAM is successfully upgraded n times or if it is upgraded some positive number of times and the Node reaches its max RAM. Returns false otherwise.","title":"Remarks"},{"location":"bitburner.hacknetmultipliers.corecost/","text":"Home > bitburner > HacknetMultipliers > coreCost HacknetMultipliers.coreCost property Player's hacknet core cost multiplier Signature: coreCost: number;","title":"Bitburner.hacknetmultipliers.corecost"},{"location":"bitburner.hacknetmultipliers.corecost/#hacknetmultiplierscorecost-property","text":"Player's hacknet core cost multiplier Signature: coreCost: number;","title":"HacknetMultipliers.coreCost property"},{"location":"bitburner.hacknetmultipliers.levelcost/","text":"Home > bitburner > HacknetMultipliers > levelCost HacknetMultipliers.levelCost property Player's hacknet level cost multiplier Signature: levelCost: number;","title":"Bitburner.hacknetmultipliers.levelcost"},{"location":"bitburner.hacknetmultipliers.levelcost/#hacknetmultiplierslevelcost-property","text":"Player's hacknet level cost multiplier Signature: levelCost: number;","title":"HacknetMultipliers.levelCost property"},{"location":"bitburner.hacknetmultipliers/","text":"Home > bitburner > HacknetMultipliers HacknetMultipliers interface Hacknet related multipliers. Signature: export interface HacknetMultipliers Properties Property Type Description coreCost number Player's hacknet core cost multiplier levelCost number Player's hacknet level cost multiplier production number Player's hacknet production multiplier purchaseCost number Player's hacknet purchase cost multiplier ramCost number Player's hacknet ram cost multiplier","title":"Bitburner.hacknetmultipliers"},{"location":"bitburner.hacknetmultipliers/#hacknetmultipliers-interface","text":"Hacknet related multipliers. Signature: export interface HacknetMultipliers","title":"HacknetMultipliers interface"},{"location":"bitburner.hacknetmultipliers/#properties","text":"Property Type Description coreCost number Player's hacknet core cost multiplier levelCost number Player's hacknet level cost multiplier production number Player's hacknet production multiplier purchaseCost number Player's hacknet purchase cost multiplier ramCost number Player's hacknet ram cost multiplier","title":"Properties"},{"location":"bitburner.hacknetmultipliers.production/","text":"Home > bitburner > HacknetMultipliers > production HacknetMultipliers.production property Player's hacknet production multiplier Signature: production: number;","title":"Bitburner.hacknetmultipliers.production"},{"location":"bitburner.hacknetmultipliers.production/#hacknetmultipliersproduction-property","text":"Player's hacknet production multiplier Signature: production: number;","title":"HacknetMultipliers.production property"},{"location":"bitburner.hacknetmultipliers.purchasecost/","text":"Home > bitburner > HacknetMultipliers > purchaseCost HacknetMultipliers.purchaseCost property Player's hacknet purchase cost multiplier Signature: purchaseCost: number;","title":"Bitburner.hacknetmultipliers.purchasecost"},{"location":"bitburner.hacknetmultipliers.purchasecost/#hacknetmultiplierspurchasecost-property","text":"Player's hacknet purchase cost multiplier Signature: purchaseCost: number;","title":"HacknetMultipliers.purchaseCost property"},{"location":"bitburner.hacknetmultipliers.ramcost/","text":"Home > bitburner > HacknetMultipliers > ramCost HacknetMultipliers.ramCost property Player's hacknet ram cost multiplier Signature: ramCost: number;","title":"Bitburner.hacknetmultipliers.ramcost"},{"location":"bitburner.hacknetmultipliers.ramcost/#hacknetmultipliersramcost-property","text":"Player's hacknet ram cost multiplier Signature: ramCost: number;","title":"HacknetMultipliers.ramCost property"},{"location":"bitburner.hacknetnodeconstants.basecost/","text":"Home > bitburner > HacknetNodeConstants > BaseCost HacknetNodeConstants.BaseCost property Base cost for a new node Signature: BaseCost: number;","title":"Bitburner.hacknetnodeconstants.basecost"},{"location":"bitburner.hacknetnodeconstants.basecost/#hacknetnodeconstantsbasecost-property","text":"Base cost for a new node Signature: BaseCost: number;","title":"HacknetNodeConstants.BaseCost property"},{"location":"bitburner.hacknetnodeconstants.corebasecost/","text":"Home > bitburner > HacknetNodeConstants > CoreBaseCost HacknetNodeConstants.CoreBaseCost property Base cost to increase cores Signature: CoreBaseCost: number;","title":"Bitburner.hacknetnodeconstants.corebasecost"},{"location":"bitburner.hacknetnodeconstants.corebasecost/#hacknetnodeconstantscorebasecost-property","text":"Base cost to increase cores Signature: CoreBaseCost: number;","title":"HacknetNodeConstants.CoreBaseCost property"},{"location":"bitburner.hacknetnodeconstants.levelbasecost/","text":"Home > bitburner > HacknetNodeConstants > LevelBaseCost HacknetNodeConstants.LevelBaseCost property Base cost per level Signature: LevelBaseCost: number;","title":"Bitburner.hacknetnodeconstants.levelbasecost"},{"location":"bitburner.hacknetnodeconstants.levelbasecost/#hacknetnodeconstantslevelbasecost-property","text":"Base cost per level Signature: LevelBaseCost: number;","title":"HacknetNodeConstants.LevelBaseCost property"},{"location":"bitburner.hacknetnodeconstants.maxcores/","text":"Home > bitburner > HacknetNodeConstants > MaxCores HacknetNodeConstants.MaxCores property Max number of cores Signature: MaxCores: number;","title":"Bitburner.hacknetnodeconstants.maxcores"},{"location":"bitburner.hacknetnodeconstants.maxcores/#hacknetnodeconstantsmaxcores-property","text":"Max number of cores Signature: MaxCores: number;","title":"HacknetNodeConstants.MaxCores property"},{"location":"bitburner.hacknetnodeconstants.maxlevel/","text":"Home > bitburner > HacknetNodeConstants > MaxLevel HacknetNodeConstants.MaxLevel property Max node level Signature: MaxLevel: number;","title":"Bitburner.hacknetnodeconstants.maxlevel"},{"location":"bitburner.hacknetnodeconstants.maxlevel/#hacknetnodeconstantsmaxlevel-property","text":"Max node level Signature: MaxLevel: number;","title":"HacknetNodeConstants.MaxLevel property"},{"location":"bitburner.hacknetnodeconstants.maxram/","text":"Home > bitburner > HacknetNodeConstants > MaxRam HacknetNodeConstants.MaxRam property Max amount of RAM in GB Signature: MaxRam: number;","title":"Bitburner.hacknetnodeconstants.maxram"},{"location":"bitburner.hacknetnodeconstants.maxram/#hacknetnodeconstantsmaxram-property","text":"Max amount of RAM in GB Signature: MaxRam: number;","title":"HacknetNodeConstants.MaxRam property"},{"location":"bitburner.hacknetnodeconstants/","text":"Home > bitburner > HacknetNodeConstants HacknetNodeConstants interface Hacknet node related constants Signature: export interface HacknetNodeConstants Properties Property Type Description BaseCost number Base cost for a new node CoreBaseCost number Base cost to increase cores LevelBaseCost number Base cost per level MaxCores number Max number of cores MaxLevel number Max node level MaxRam number Max amount of RAM in GB MoneyGainPerLevel number Amount of money gained per level PurchaseNextMult number Multiplier to purchase new node RamBaseCost number Base cost to increase RAM UpgradeCoreMult number Multiplier to increase cores UpgradeLevelMult number Multiplier to increase node level UpgradeRamMult number Multiplier to increase RAM","title":"Bitburner.hacknetnodeconstants"},{"location":"bitburner.hacknetnodeconstants/#hacknetnodeconstants-interface","text":"Hacknet node related constants Signature: export interface HacknetNodeConstants","title":"HacknetNodeConstants interface"},{"location":"bitburner.hacknetnodeconstants/#properties","text":"Property Type Description BaseCost number Base cost for a new node CoreBaseCost number Base cost to increase cores LevelBaseCost number Base cost per level MaxCores number Max number of cores MaxLevel number Max node level MaxRam number Max amount of RAM in GB MoneyGainPerLevel number Amount of money gained per level PurchaseNextMult number Multiplier to purchase new node RamBaseCost number Base cost to increase RAM UpgradeCoreMult number Multiplier to increase cores UpgradeLevelMult number Multiplier to increase node level UpgradeRamMult number Multiplier to increase RAM","title":"Properties"},{"location":"bitburner.hacknetnodeconstants.moneygainperlevel/","text":"Home > bitburner > HacknetNodeConstants > MoneyGainPerLevel HacknetNodeConstants.MoneyGainPerLevel property Amount of money gained per level Signature: MoneyGainPerLevel: number;","title":"Bitburner.hacknetnodeconstants.moneygainperlevel"},{"location":"bitburner.hacknetnodeconstants.moneygainperlevel/#hacknetnodeconstantsmoneygainperlevel-property","text":"Amount of money gained per level Signature: MoneyGainPerLevel: number;","title":"HacknetNodeConstants.MoneyGainPerLevel property"},{"location":"bitburner.hacknetnodeconstants.purchasenextmult/","text":"Home > bitburner > HacknetNodeConstants > PurchaseNextMult HacknetNodeConstants.PurchaseNextMult property Multiplier to purchase new node Signature: PurchaseNextMult: number;","title":"Bitburner.hacknetnodeconstants.purchasenextmult"},{"location":"bitburner.hacknetnodeconstants.purchasenextmult/#hacknetnodeconstantspurchasenextmult-property","text":"Multiplier to purchase new node Signature: PurchaseNextMult: number;","title":"HacknetNodeConstants.PurchaseNextMult property"},{"location":"bitburner.hacknetnodeconstants.rambasecost/","text":"Home > bitburner > HacknetNodeConstants > RamBaseCost HacknetNodeConstants.RamBaseCost property Base cost to increase RAM Signature: RamBaseCost: number;","title":"Bitburner.hacknetnodeconstants.rambasecost"},{"location":"bitburner.hacknetnodeconstants.rambasecost/#hacknetnodeconstantsrambasecost-property","text":"Base cost to increase RAM Signature: RamBaseCost: number;","title":"HacknetNodeConstants.RamBaseCost property"},{"location":"bitburner.hacknetnodeconstants.upgradecoremult/","text":"Home > bitburner > HacknetNodeConstants > UpgradeCoreMult HacknetNodeConstants.UpgradeCoreMult property Multiplier to increase cores Signature: UpgradeCoreMult: number;","title":"Bitburner.hacknetnodeconstants.upgradecoremult"},{"location":"bitburner.hacknetnodeconstants.upgradecoremult/#hacknetnodeconstantsupgradecoremult-property","text":"Multiplier to increase cores Signature: UpgradeCoreMult: number;","title":"HacknetNodeConstants.UpgradeCoreMult property"},{"location":"bitburner.hacknetnodeconstants.upgradelevelmult/","text":"Home > bitburner > HacknetNodeConstants > UpgradeLevelMult HacknetNodeConstants.UpgradeLevelMult property Multiplier to increase node level Signature: UpgradeLevelMult: number;","title":"Bitburner.hacknetnodeconstants.upgradelevelmult"},{"location":"bitburner.hacknetnodeconstants.upgradelevelmult/#hacknetnodeconstantsupgradelevelmult-property","text":"Multiplier to increase node level Signature: UpgradeLevelMult: number;","title":"HacknetNodeConstants.UpgradeLevelMult property"},{"location":"bitburner.hacknetnodeconstants.upgraderammult/","text":"Home > bitburner > HacknetNodeConstants > UpgradeRamMult HacknetNodeConstants.UpgradeRamMult property Multiplier to increase RAM Signature: UpgradeRamMult: number;","title":"Bitburner.hacknetnodeconstants.upgraderammult"},{"location":"bitburner.hacknetnodeconstants.upgraderammult/#hacknetnodeconstantsupgraderammult-property","text":"Multiplier to increase RAM Signature: UpgradeRamMult: number;","title":"HacknetNodeConstants.UpgradeRamMult property"},{"location":"bitburner.hacknetnodesformulas.constants/","text":"Home > bitburner > HacknetNodesFormulas > constants HacknetNodesFormulas.constants() method All constants used by the game. Signature: constants(): HacknetNodeConstants; Returns: HacknetNodeConstants An object with all hacknet node constants used by the game.","title":"Bitburner.hacknetnodesformulas.constants"},{"location":"bitburner.hacknetnodesformulas.constants/#hacknetnodesformulasconstants-method","text":"All constants used by the game. Signature: constants(): HacknetNodeConstants; Returns: HacknetNodeConstants An object with all hacknet node constants used by the game.","title":"HacknetNodesFormulas.constants() method"},{"location":"bitburner.hacknetnodesformulas.coreupgradecost/","text":"Home > bitburner > HacknetNodesFormulas > coreUpgradeCost HacknetNodesFormulas.coreUpgradeCost() method Calculate cost of upgrading hacknet node cores. Signature: coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number; Parameters Parameter Type Description startingCore number starting cores extraCores number amount of cores to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetnodesformulas.coreupgradecost"},{"location":"bitburner.hacknetnodesformulas.coreupgradecost/#hacknetnodesformulascoreupgradecost-method","text":"Calculate cost of upgrading hacknet node cores. Signature: coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number;","title":"HacknetNodesFormulas.coreUpgradeCost() method"},{"location":"bitburner.hacknetnodesformulas.coreupgradecost/#parameters","text":"Parameter Type Description startingCore number starting cores extraCores number amount of cores to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetnodesformulas.hacknetnodecost/","text":"Home > bitburner > HacknetNodesFormulas > hacknetNodeCost HacknetNodesFormulas.hacknetNodeCost() method Calculate the cost of a hacknet node. Signature: hacknetNodeCost(n: number, mult: number): number; Parameters Parameter Type Description n number number of the hacknet node mult number player cost reduction (defaults to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetnodesformulas.hacknetnodecost"},{"location":"bitburner.hacknetnodesformulas.hacknetnodecost/#hacknetnodesformulashacknetnodecost-method","text":"Calculate the cost of a hacknet node. Signature: hacknetNodeCost(n: number, mult: number): number;","title":"HacknetNodesFormulas.hacknetNodeCost() method"},{"location":"bitburner.hacknetnodesformulas.hacknetnodecost/#parameters","text":"Parameter Type Description n number number of the hacknet node mult number player cost reduction (defaults to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetnodesformulas.levelupgradecost/","text":"Home > bitburner > HacknetNodesFormulas > levelUpgradeCost HacknetNodesFormulas.levelUpgradeCost() method Calculate cost of upgrading hacknet node level. Signature: levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number; Parameters Parameter Type Description startingLevel number starting level extraLevels number amount of level to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetnodesformulas.levelupgradecost"},{"location":"bitburner.hacknetnodesformulas.levelupgradecost/#hacknetnodesformulaslevelupgradecost-method","text":"Calculate cost of upgrading hacknet node level. Signature: levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number;","title":"HacknetNodesFormulas.levelUpgradeCost() method"},{"location":"bitburner.hacknetnodesformulas.levelupgradecost/#parameters","text":"Parameter Type Description startingLevel number starting level extraLevels number amount of level to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetnodesformulas/","text":"Home > bitburner > HacknetNodesFormulas HacknetNodesFormulas interface Hacknet Node formulas Signature: interface HacknetNodesFormulas Methods Method Description constants() All constants used by the game. coreUpgradeCost(startingCore, extraCores, costMult) Calculate cost of upgrading hacknet node cores. hacknetNodeCost(n, mult) Calculate the cost of a hacknet node. levelUpgradeCost(startingLevel, extraLevels, costMult) Calculate cost of upgrading hacknet node level. moneyGainRate(level, ram, cores, mult) Calculate money gain rate. ramUpgradeCost(startingRam, extraLevels, costMult) Calculate cost of upgrading hacknet node ram.","title":"Bitburner.hacknetnodesformulas"},{"location":"bitburner.hacknetnodesformulas/#hacknetnodesformulas-interface","text":"Hacknet Node formulas Signature: interface HacknetNodesFormulas","title":"HacknetNodesFormulas interface"},{"location":"bitburner.hacknetnodesformulas/#methods","text":"Method Description constants() All constants used by the game. coreUpgradeCost(startingCore, extraCores, costMult) Calculate cost of upgrading hacknet node cores. hacknetNodeCost(n, mult) Calculate the cost of a hacknet node. levelUpgradeCost(startingLevel, extraLevels, costMult) Calculate cost of upgrading hacknet node level. moneyGainRate(level, ram, cores, mult) Calculate money gain rate. ramUpgradeCost(startingRam, extraLevels, costMult) Calculate cost of upgrading hacknet node ram.","title":"Methods"},{"location":"bitburner.hacknetnodesformulas.moneygainrate/","text":"Home > bitburner > HacknetNodesFormulas > moneyGainRate HacknetNodesFormulas.moneyGainRate() method Calculate money gain rate. Signature: moneyGainRate(level: number, ram: number, cores: number, mult?: number): number; Parameters Parameter Type Description level number level of the node. ram number ram of the node. cores number cores of the node. mult number player production mult (default to 1) Returns: number The calculated money gain rate.","title":"Bitburner.hacknetnodesformulas.moneygainrate"},{"location":"bitburner.hacknetnodesformulas.moneygainrate/#hacknetnodesformulasmoneygainrate-method","text":"Calculate money gain rate. Signature: moneyGainRate(level: number, ram: number, cores: number, mult?: number): number;","title":"HacknetNodesFormulas.moneyGainRate() method"},{"location":"bitburner.hacknetnodesformulas.moneygainrate/#parameters","text":"Parameter Type Description level number level of the node. ram number ram of the node. cores number cores of the node. mult number player production mult (default to 1) Returns: number The calculated money gain rate.","title":"Parameters"},{"location":"bitburner.hacknetnodesformulas.ramupgradecost/","text":"Home > bitburner > HacknetNodesFormulas > ramUpgradeCost HacknetNodesFormulas.ramUpgradeCost() method Calculate cost of upgrading hacknet node ram. Signature: ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number; Parameters Parameter Type Description startingRam number starting ram extraLevels number amount of level of ram to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetnodesformulas.ramupgradecost"},{"location":"bitburner.hacknetnodesformulas.ramupgradecost/#hacknetnodesformulasramupgradecost-method","text":"Calculate cost of upgrading hacknet node ram. Signature: ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number;","title":"HacknetNodesFormulas.ramUpgradeCost() method"},{"location":"bitburner.hacknetnodesformulas.ramupgradecost/#parameters","text":"Parameter Type Description startingRam number starting ram extraLevels number amount of level of ram to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetserverconstants.basecost/","text":"Home > bitburner > HacknetServerConstants > BaseCost HacknetServerConstants.BaseCost property Base cost for a new server Signature: BaseCost: number;","title":"Bitburner.hacknetserverconstants.basecost"},{"location":"bitburner.hacknetserverconstants.basecost/#hacknetserverconstantsbasecost-property","text":"Base cost for a new server Signature: BaseCost: number;","title":"HacknetServerConstants.BaseCost property"},{"location":"bitburner.hacknetserverconstants.cachebasecost/","text":"Home > bitburner > HacknetServerConstants > CacheBaseCost HacknetServerConstants.CacheBaseCost property Base cost to upgrade cache Signature: CacheBaseCost: number;","title":"Bitburner.hacknetserverconstants.cachebasecost"},{"location":"bitburner.hacknetserverconstants.cachebasecost/#hacknetserverconstantscachebasecost-property","text":"Base cost to upgrade cache Signature: CacheBaseCost: number;","title":"HacknetServerConstants.CacheBaseCost property"},{"location":"bitburner.hacknetserverconstants.corebasecost/","text":"Home > bitburner > HacknetServerConstants > CoreBaseCost HacknetServerConstants.CoreBaseCost property Base cost to increase cores Signature: CoreBaseCost: number;","title":"Bitburner.hacknetserverconstants.corebasecost"},{"location":"bitburner.hacknetserverconstants.corebasecost/#hacknetserverconstantscorebasecost-property","text":"Base cost to increase cores Signature: CoreBaseCost: number;","title":"HacknetServerConstants.CoreBaseCost property"},{"location":"bitburner.hacknetserverconstants.hashesperlevel/","text":"Home > bitburner > HacknetServerConstants > HashesPerLevel HacknetServerConstants.HashesPerLevel property Number of hashes calculated per level Signature: HashesPerLevel: number;","title":"Bitburner.hacknetserverconstants.hashesperlevel"},{"location":"bitburner.hacknetserverconstants.hashesperlevel/#hacknetserverconstantshashesperlevel-property","text":"Number of hashes calculated per level Signature: HashesPerLevel: number;","title":"HacknetServerConstants.HashesPerLevel property"},{"location":"bitburner.hacknetserverconstants.maxcache/","text":"Home > bitburner > HacknetServerConstants > MaxCache HacknetServerConstants.MaxCache property Max cache size Signature: MaxCache: number;","title":"Bitburner.hacknetserverconstants.maxcache"},{"location":"bitburner.hacknetserverconstants.maxcache/#hacknetserverconstantsmaxcache-property","text":"Max cache size Signature: MaxCache: number;","title":"HacknetServerConstants.MaxCache property"},{"location":"bitburner.hacknetserverconstants.maxcores/","text":"Home > bitburner > HacknetServerConstants > MaxCores HacknetServerConstants.MaxCores property Max number of cores Signature: MaxCores: number;","title":"Bitburner.hacknetserverconstants.maxcores"},{"location":"bitburner.hacknetserverconstants.maxcores/#hacknetserverconstantsmaxcores-property","text":"Max number of cores Signature: MaxCores: number;","title":"HacknetServerConstants.MaxCores property"},{"location":"bitburner.hacknetserverconstants.maxlevel/","text":"Home > bitburner > HacknetServerConstants > MaxLevel HacknetServerConstants.MaxLevel property Max level for a server Signature: MaxLevel: number;","title":"Bitburner.hacknetserverconstants.maxlevel"},{"location":"bitburner.hacknetserverconstants.maxlevel/#hacknetserverconstantsmaxlevel-property","text":"Max level for a server Signature: MaxLevel: number;","title":"HacknetServerConstants.MaxLevel property"},{"location":"bitburner.hacknetserverconstants.maxram/","text":"Home > bitburner > HacknetServerConstants > MaxRam HacknetServerConstants.MaxRam property Max amount of RAM in GB Signature: MaxRam: number;","title":"Bitburner.hacknetserverconstants.maxram"},{"location":"bitburner.hacknetserverconstants.maxram/#hacknetserverconstantsmaxram-property","text":"Max amount of RAM in GB Signature: MaxRam: number;","title":"HacknetServerConstants.MaxRam property"},{"location":"bitburner.hacknetserverconstants.maxservers/","text":"Home > bitburner > HacknetServerConstants > MaxServers HacknetServerConstants.MaxServers property Max number of servers Signature: MaxServers: number;","title":"Bitburner.hacknetserverconstants.maxservers"},{"location":"bitburner.hacknetserverconstants.maxservers/#hacknetserverconstantsmaxservers-property","text":"Max number of servers Signature: MaxServers: number;","title":"HacknetServerConstants.MaxServers property"},{"location":"bitburner.hacknetserverconstants/","text":"Home > bitburner > HacknetServerConstants HacknetServerConstants interface Hacknet server related constants Signature: export interface HacknetServerConstants Properties Property Type Description BaseCost number Base cost for a new server CacheBaseCost number Base cost to upgrade cache CoreBaseCost number Base cost to increase cores HashesPerLevel number Number of hashes calculated per level MaxCache number Max cache size MaxCores number Max number of cores MaxLevel number Max level for a server MaxRam number Max amount of RAM in GB MaxServers number Max number of servers PurchaseMult number Multiplier to purchase a new server RamBaseCost number Base cost to increase RAM UpgradeCacheMult number Multiplier to upgrade cache UpgradeCoreMult number Multiplier to increase cores UpgradeLevelMult number Multiplier to increase server level UpgradeRamMult number Multiplier to increase RAM","title":"Bitburner.hacknetserverconstants"},{"location":"bitburner.hacknetserverconstants/#hacknetserverconstants-interface","text":"Hacknet server related constants Signature: export interface HacknetServerConstants","title":"HacknetServerConstants interface"},{"location":"bitburner.hacknetserverconstants/#properties","text":"Property Type Description BaseCost number Base cost for a new server CacheBaseCost number Base cost to upgrade cache CoreBaseCost number Base cost to increase cores HashesPerLevel number Number of hashes calculated per level MaxCache number Max cache size MaxCores number Max number of cores MaxLevel number Max level for a server MaxRam number Max amount of RAM in GB MaxServers number Max number of servers PurchaseMult number Multiplier to purchase a new server RamBaseCost number Base cost to increase RAM UpgradeCacheMult number Multiplier to upgrade cache UpgradeCoreMult number Multiplier to increase cores UpgradeLevelMult number Multiplier to increase server level UpgradeRamMult number Multiplier to increase RAM","title":"Properties"},{"location":"bitburner.hacknetserverconstants.purchasemult/","text":"Home > bitburner > HacknetServerConstants > PurchaseMult HacknetServerConstants.PurchaseMult property Multiplier to purchase a new server Signature: PurchaseMult: number;","title":"Bitburner.hacknetserverconstants.purchasemult"},{"location":"bitburner.hacknetserverconstants.purchasemult/#hacknetserverconstantspurchasemult-property","text":"Multiplier to purchase a new server Signature: PurchaseMult: number;","title":"HacknetServerConstants.PurchaseMult property"},{"location":"bitburner.hacknetserverconstants.rambasecost/","text":"Home > bitburner > HacknetServerConstants > RamBaseCost HacknetServerConstants.RamBaseCost property Base cost to increase RAM Signature: RamBaseCost: number;","title":"Bitburner.hacknetserverconstants.rambasecost"},{"location":"bitburner.hacknetserverconstants.rambasecost/#hacknetserverconstantsrambasecost-property","text":"Base cost to increase RAM Signature: RamBaseCost: number;","title":"HacknetServerConstants.RamBaseCost property"},{"location":"bitburner.hacknetserverconstants.upgradecachemult/","text":"Home > bitburner > HacknetServerConstants > UpgradeCacheMult HacknetServerConstants.UpgradeCacheMult property Multiplier to upgrade cache Signature: UpgradeCacheMult: number;","title":"Bitburner.hacknetserverconstants.upgradecachemult"},{"location":"bitburner.hacknetserverconstants.upgradecachemult/#hacknetserverconstantsupgradecachemult-property","text":"Multiplier to upgrade cache Signature: UpgradeCacheMult: number;","title":"HacknetServerConstants.UpgradeCacheMult property"},{"location":"bitburner.hacknetserverconstants.upgradecoremult/","text":"Home > bitburner > HacknetServerConstants > UpgradeCoreMult HacknetServerConstants.UpgradeCoreMult property Multiplier to increase cores Signature: UpgradeCoreMult: number;","title":"Bitburner.hacknetserverconstants.upgradecoremult"},{"location":"bitburner.hacknetserverconstants.upgradecoremult/#hacknetserverconstantsupgradecoremult-property","text":"Multiplier to increase cores Signature: UpgradeCoreMult: number;","title":"HacknetServerConstants.UpgradeCoreMult property"},{"location":"bitburner.hacknetserverconstants.upgradelevelmult/","text":"Home > bitburner > HacknetServerConstants > UpgradeLevelMult HacknetServerConstants.UpgradeLevelMult property Multiplier to increase server level Signature: UpgradeLevelMult: number;","title":"Bitburner.hacknetserverconstants.upgradelevelmult"},{"location":"bitburner.hacknetserverconstants.upgradelevelmult/#hacknetserverconstantsupgradelevelmult-property","text":"Multiplier to increase server level Signature: UpgradeLevelMult: number;","title":"HacknetServerConstants.UpgradeLevelMult property"},{"location":"bitburner.hacknetserverconstants.upgraderammult/","text":"Home > bitburner > HacknetServerConstants > UpgradeRamMult HacknetServerConstants.UpgradeRamMult property Multiplier to increase RAM Signature: UpgradeRamMult: number;","title":"Bitburner.hacknetserverconstants.upgraderammult"},{"location":"bitburner.hacknetserverconstants.upgraderammult/#hacknetserverconstantsupgraderammult-property","text":"Multiplier to increase RAM Signature: UpgradeRamMult: number;","title":"HacknetServerConstants.UpgradeRamMult property"},{"location":"bitburner.hacknetserversformulas.cacheupgradecost/","text":"Home > bitburner > HacknetServersFormulas > cacheUpgradeCost HacknetServersFormulas.cacheUpgradeCost() method Calculate cost of upgrading hacknet server cache. Signature: cacheUpgradeCost(startingCache: number, extraCache?: number): number; Parameters Parameter Type Description startingCache number starting cache level extraCache number amount of levels of cache to purchase (defaults to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetserversformulas.cacheupgradecost"},{"location":"bitburner.hacknetserversformulas.cacheupgradecost/#hacknetserversformulascacheupgradecost-method","text":"Calculate cost of upgrading hacknet server cache. Signature: cacheUpgradeCost(startingCache: number, extraCache?: number): number;","title":"HacknetServersFormulas.cacheUpgradeCost() method"},{"location":"bitburner.hacknetserversformulas.cacheupgradecost/#parameters","text":"Parameter Type Description startingCache number starting cache level extraCache number amount of levels of cache to purchase (defaults to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas.constants/","text":"Home > bitburner > HacknetServersFormulas > constants HacknetServersFormulas.constants() method All constants used by the game. Signature: constants(): HacknetServerConstants; Returns: HacknetServerConstants An object with all hacknet server constants used by the game.","title":"Bitburner.hacknetserversformulas.constants"},{"location":"bitburner.hacknetserversformulas.constants/#hacknetserversformulasconstants-method","text":"All constants used by the game. Signature: constants(): HacknetServerConstants; Returns: HacknetServerConstants An object with all hacknet server constants used by the game.","title":"HacknetServersFormulas.constants() method"},{"location":"bitburner.hacknetserversformulas.coreupgradecost/","text":"Home > bitburner > HacknetServersFormulas > coreUpgradeCost HacknetServersFormulas.coreUpgradeCost() method Calculate cost of upgrading hacknet server cores. Signature: coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number; Parameters Parameter Type Description startingCore number starting cores extraCores number amount of cores to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetserversformulas.coreupgradecost"},{"location":"bitburner.hacknetserversformulas.coreupgradecost/#hacknetserversformulascoreupgradecost-method","text":"Calculate cost of upgrading hacknet server cores. Signature: coreUpgradeCost(startingCore: number, extraCores?: number, costMult?: number): number;","title":"HacknetServersFormulas.coreUpgradeCost() method"},{"location":"bitburner.hacknetserversformulas.coreupgradecost/#parameters","text":"Parameter Type Description startingCore number starting cores extraCores number amount of cores to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas.hacknetservercost/","text":"Home > bitburner > HacknetServersFormulas > hacknetServerCost HacknetServersFormulas.hacknetServerCost() method Calculate the cost of a hacknet server. Signature: hacknetServerCost(n: number, mult?: number): number; Parameters Parameter Type Description n number number of the hacknet server mult number player cost reduction (defaults to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetserversformulas.hacknetservercost"},{"location":"bitburner.hacknetserversformulas.hacknetservercost/#hacknetserversformulashacknetservercost-method","text":"Calculate the cost of a hacknet server. Signature: hacknetServerCost(n: number, mult?: number): number;","title":"HacknetServersFormulas.hacknetServerCost() method"},{"location":"bitburner.hacknetserversformulas.hacknetservercost/#parameters","text":"Parameter Type Description n number number of the hacknet server mult number player cost reduction (defaults to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas.hashgainrate/","text":"Home > bitburner > HacknetServersFormulas > hashGainRate HacknetServersFormulas.hashGainRate() method Calculate hash gain rate. Signature: hashGainRate(level: number, ramUsed: number, maxRam: number, cores: number, mult?: number): number; Parameters Parameter Type Description level number level of the server. ramUsed number ramUsed of the server. maxRam number maxRam of the server. cores number cores of the server. mult number player production mult (default to 1) Returns: number The calculated hash gain rate.","title":"Bitburner.hacknetserversformulas.hashgainrate"},{"location":"bitburner.hacknetserversformulas.hashgainrate/#hacknetserversformulashashgainrate-method","text":"Calculate hash gain rate. Signature: hashGainRate(level: number, ramUsed: number, maxRam: number, cores: number, mult?: number): number;","title":"HacknetServersFormulas.hashGainRate() method"},{"location":"bitburner.hacknetserversformulas.hashgainrate/#parameters","text":"Parameter Type Description level number level of the server. ramUsed number ramUsed of the server. maxRam number maxRam of the server. cores number cores of the server. mult number player production mult (default to 1) Returns: number The calculated hash gain rate.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas.hashupgradecost/","text":"Home > bitburner > HacknetServersFormulas > hashUpgradeCost HacknetServersFormulas.hashUpgradeCost() method Calculate hash cost of an upgrade. Signature: hashUpgradeCost(upgName: number, level: number): number; Parameters Parameter Type Description upgName number name of the upgrade level number level of the upgrade Returns: number The calculated hash cost.","title":"Bitburner.hacknetserversformulas.hashupgradecost"},{"location":"bitburner.hacknetserversformulas.hashupgradecost/#hacknetserversformulashashupgradecost-method","text":"Calculate hash cost of an upgrade. Signature: hashUpgradeCost(upgName: number, level: number): number;","title":"HacknetServersFormulas.hashUpgradeCost() method"},{"location":"bitburner.hacknetserversformulas.hashupgradecost/#parameters","text":"Parameter Type Description upgName number name of the upgrade level number level of the upgrade Returns: number The calculated hash cost.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas.levelupgradecost/","text":"Home > bitburner > HacknetServersFormulas > levelUpgradeCost HacknetServersFormulas.levelUpgradeCost() method Calculate cost of upgrading hacknet server level. Signature: levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number; Parameters Parameter Type Description startingLevel number starting level extraLevels number amount of level to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetserversformulas.levelupgradecost"},{"location":"bitburner.hacknetserversformulas.levelupgradecost/#hacknetserversformulaslevelupgradecost-method","text":"Calculate cost of upgrading hacknet server level. Signature: levelUpgradeCost(startingLevel: number, extraLevels?: number, costMult?: number): number;","title":"HacknetServersFormulas.levelUpgradeCost() method"},{"location":"bitburner.hacknetserversformulas.levelupgradecost/#parameters","text":"Parameter Type Description startingLevel number starting level extraLevels number amount of level to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hacknetserversformulas/","text":"Home > bitburner > HacknetServersFormulas HacknetServersFormulas interface Hacknet Server formulas Signature: interface HacknetServersFormulas Methods Method Description cacheUpgradeCost(startingCache, extraCache) Calculate cost of upgrading hacknet server cache. constants() All constants used by the game. coreUpgradeCost(startingCore, extraCores, costMult) Calculate cost of upgrading hacknet server cores. hacknetServerCost(n, mult) Calculate the cost of a hacknet server. hashGainRate(level, ramUsed, maxRam, cores, mult) Calculate hash gain rate. hashUpgradeCost(upgName, level) Calculate hash cost of an upgrade. levelUpgradeCost(startingLevel, extraLevels, costMult) Calculate cost of upgrading hacknet server level. ramUpgradeCost(startingRam, extraLevels, costMult) Calculate cost of upgrading hacknet server ram.","title":"Bitburner.hacknetserversformulas"},{"location":"bitburner.hacknetserversformulas/#hacknetserversformulas-interface","text":"Hacknet Server formulas Signature: interface HacknetServersFormulas","title":"HacknetServersFormulas interface"},{"location":"bitburner.hacknetserversformulas/#methods","text":"Method Description cacheUpgradeCost(startingCache, extraCache) Calculate cost of upgrading hacknet server cache. constants() All constants used by the game. coreUpgradeCost(startingCore, extraCores, costMult) Calculate cost of upgrading hacknet server cores. hacknetServerCost(n, mult) Calculate the cost of a hacknet server. hashGainRate(level, ramUsed, maxRam, cores, mult) Calculate hash gain rate. hashUpgradeCost(upgName, level) Calculate hash cost of an upgrade. levelUpgradeCost(startingLevel, extraLevels, costMult) Calculate cost of upgrading hacknet server level. ramUpgradeCost(startingRam, extraLevels, costMult) Calculate cost of upgrading hacknet server ram.","title":"Methods"},{"location":"bitburner.hacknetserversformulas.ramupgradecost/","text":"Home > bitburner > HacknetServersFormulas > ramUpgradeCost HacknetServersFormulas.ramUpgradeCost() method Calculate cost of upgrading hacknet server ram. Signature: ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number; Parameters Parameter Type Description startingRam number starting ram extraLevels number amount of level of ram to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Bitburner.hacknetserversformulas.ramupgradecost"},{"location":"bitburner.hacknetserversformulas.ramupgradecost/#hacknetserversformulasramupgradecost-method","text":"Calculate cost of upgrading hacknet server ram. Signature: ramUpgradeCost(startingRam: number, extraLevels?: number, costMult?: number): number;","title":"HacknetServersFormulas.ramUpgradeCost() method"},{"location":"bitburner.hacknetserversformulas.ramupgradecost/#parameters","text":"Parameter Type Description startingRam number starting ram extraLevels number amount of level of ram to purchase (defaults to 1) costMult number player cost reduction (default to 1) Returns: number The calculated cost.","title":"Parameters"},{"location":"bitburner.hp.current/","text":"Home > bitburner > HP > current HP.current property Signature: current: number;","title":"Bitburner.hp.current"},{"location":"bitburner.hp.current/#hpcurrent-property","text":"Signature: current: number;","title":"HP.current property"},{"location":"bitburner.hp.max/","text":"Home > bitburner > HP > max HP.max property Signature: max: number;","title":"Bitburner.hp.max"},{"location":"bitburner.hp.max/#hpmax-property","text":"Signature: max: number;","title":"HP.max property"},{"location":"bitburner.hp/","text":"Home > bitburner > HP HP interface Signature: export interface HP Properties Property Type Description current number max number","title":"Bitburner.hp"},{"location":"bitburner.hp/#hp-interface","text":"Signature: export interface HP","title":"HP interface"},{"location":"bitburner.hp/#properties","text":"Property Type Description current number max number","title":"Properties"},{"location":"bitburner.ilocation.city/","text":"Home > bitburner > ILocation > city ILocation.city property Signature: city: string;","title":"Bitburner.ilocation.city"},{"location":"bitburner.ilocation.city/#ilocationcity-property","text":"Signature: city: string;","title":"ILocation.city property"},{"location":"bitburner.ilocation/","text":"Home > bitburner > ILocation ILocation interface Signature: export interface ILocation Properties Property Type Description city string name string","title":"Bitburner.ilocation"},{"location":"bitburner.ilocation/#ilocation-interface","text":"Signature: export interface ILocation","title":"ILocation interface"},{"location":"bitburner.ilocation/#properties","text":"Property Type Description city string name string","title":"Properties"},{"location":"bitburner.ilocation.name/","text":"Home > bitburner > ILocation > name ILocation.name property Signature: name: string;","title":"Bitburner.ilocation.name"},{"location":"bitburner.ilocation.name/#ilocationname-property","text":"Signature: name: string;","title":"ILocation.name property"},{"location":"bitburner.infiltration.getinfiltration/","text":"Home > bitburner > Infiltration > getInfiltration Infiltration.getInfiltration() method Get all infiltrations with difficulty, location and rewards. Signature: getInfiltration(location: string): InfiltrationLocation; Parameters Parameter Type Description location string Returns: InfiltrationLocation Infiltration data for given location. Remarks RAM cost: 15 GB","title":"Bitburner.infiltration.getinfiltration"},{"location":"bitburner.infiltration.getinfiltration/#infiltrationgetinfiltration-method","text":"Get all infiltrations with difficulty, location and rewards. Signature: getInfiltration(location: string): InfiltrationLocation;","title":"Infiltration.getInfiltration() method"},{"location":"bitburner.infiltration.getinfiltration/#parameters","text":"Parameter Type Description location string Returns: InfiltrationLocation Infiltration data for given location.","title":"Parameters"},{"location":"bitburner.infiltration.getinfiltration/#remarks","text":"RAM cost: 15 GB","title":"Remarks"},{"location":"bitburner.infiltration.getpossiblelocations/","text":"Home > bitburner > Infiltration > getPossibleLocations Infiltration.getPossibleLocations() method Get all locations that can be infiltrated. Signature: getPossibleLocations(): PossibleInfiltrationLocation[]; Returns: PossibleInfiltrationLocation [] all locations that can be infiltrated. Remarks RAM cost: 5 GB","title":"Bitburner.infiltration.getpossiblelocations"},{"location":"bitburner.infiltration.getpossiblelocations/#infiltrationgetpossiblelocations-method","text":"Get all locations that can be infiltrated. Signature: getPossibleLocations(): PossibleInfiltrationLocation[]; Returns: PossibleInfiltrationLocation [] all locations that can be infiltrated.","title":"Infiltration.getPossibleLocations() method"},{"location":"bitburner.infiltration.getpossiblelocations/#remarks","text":"RAM cost: 5 GB","title":"Remarks"},{"location":"bitburner.infiltration/","text":"Home > bitburner > Infiltration Infiltration interface Infiltration API. Signature: interface Infiltration Methods Method Description getInfiltration(location) Get all infiltrations with difficulty, location and rewards. getPossibleLocations() Get all locations that can be infiltrated.","title":"Bitburner.infiltration"},{"location":"bitburner.infiltration/#infiltration-interface","text":"Infiltration API. Signature: interface Infiltration","title":"Infiltration interface"},{"location":"bitburner.infiltration/#methods","text":"Method Description getInfiltration(location) Get all infiltrations with difficulty, location and rewards. getPossibleLocations() Get all locations that can be infiltrated.","title":"Methods"},{"location":"bitburner.infiltrationlocation.difficulty/","text":"Home > bitburner > InfiltrationLocation > difficulty InfiltrationLocation.difficulty property Signature: difficulty: number;","title":"Bitburner.infiltrationlocation.difficulty"},{"location":"bitburner.infiltrationlocation.difficulty/#infiltrationlocationdifficulty-property","text":"Signature: difficulty: number;","title":"InfiltrationLocation.difficulty property"},{"location":"bitburner.infiltrationlocation.location/","text":"Home > bitburner > InfiltrationLocation > location InfiltrationLocation.location property Signature: location: ILocation;","title":"Bitburner.infiltrationlocation.location"},{"location":"bitburner.infiltrationlocation.location/#infiltrationlocationlocation-property","text":"Signature: location: ILocation;","title":"InfiltrationLocation.location property"},{"location":"bitburner.infiltrationlocation/","text":"Home > bitburner > InfiltrationLocation InfiltrationLocation interface Signature: export interface InfiltrationLocation Properties Property Type Description difficulty number location ILocation reward InfiltrationReward","title":"Bitburner.infiltrationlocation"},{"location":"bitburner.infiltrationlocation/#infiltrationlocation-interface","text":"Signature: export interface InfiltrationLocation","title":"InfiltrationLocation interface"},{"location":"bitburner.infiltrationlocation/#properties","text":"Property Type Description difficulty number location ILocation reward InfiltrationReward","title":"Properties"},{"location":"bitburner.infiltrationlocation.reward/","text":"Home > bitburner > InfiltrationLocation > reward InfiltrationLocation.reward property Signature: reward: InfiltrationReward;","title":"Bitburner.infiltrationlocation.reward"},{"location":"bitburner.infiltrationlocation.reward/#infiltrationlocationreward-property","text":"Signature: reward: InfiltrationReward;","title":"InfiltrationLocation.reward property"},{"location":"bitburner.infiltrationreward/","text":"Home > bitburner > InfiltrationReward InfiltrationReward interface Signature: export interface InfiltrationReward Properties Property Type Description sellCash number SoARep number tradeRep number","title":"Bitburner.infiltrationreward"},{"location":"bitburner.infiltrationreward/#infiltrationreward-interface","text":"Signature: export interface InfiltrationReward","title":"InfiltrationReward interface"},{"location":"bitburner.infiltrationreward/#properties","text":"Property Type Description sellCash number SoARep number tradeRep number","title":"Properties"},{"location":"bitburner.infiltrationreward.sellcash/","text":"Home > bitburner > InfiltrationReward > sellCash InfiltrationReward.sellCash property Signature: sellCash: number;","title":"Bitburner.infiltrationreward.sellcash"},{"location":"bitburner.infiltrationreward.sellcash/#infiltrationrewardsellcash-property","text":"Signature: sellCash: number;","title":"InfiltrationReward.sellCash property"},{"location":"bitburner.infiltrationreward.soarep/","text":"Home > bitburner > InfiltrationReward > SoARep InfiltrationReward.SoARep property Signature: SoARep: number;","title":"Bitburner.infiltrationreward.soarep"},{"location":"bitburner.infiltrationreward.soarep/#infiltrationrewardsoarep-property","text":"Signature: SoARep: number;","title":"InfiltrationReward.SoARep property"},{"location":"bitburner.infiltrationreward.traderep/","text":"Home > bitburner > InfiltrationReward > tradeRep InfiltrationReward.tradeRep property Signature: tradeRep: number;","title":"Bitburner.infiltrationreward.traderep"},{"location":"bitburner.infiltrationreward.traderep/#infiltrationrewardtraderep-property","text":"Signature: tradeRep: number;","title":"InfiltrationReward.tradeRep property"},{"location":"bitburner.investmentoffer.funds/","text":"Home > bitburner > InvestmentOffer > funds InvestmentOffer.funds property Amount of funds you will get from this investment Signature: funds: number;","title":"Bitburner.investmentoffer.funds"},{"location":"bitburner.investmentoffer.funds/#investmentofferfunds-property","text":"Amount of funds you will get from this investment Signature: funds: number;","title":"InvestmentOffer.funds property"},{"location":"bitburner.investmentoffer/","text":"Home > bitburner > InvestmentOffer InvestmentOffer interface Corporation investment offer Signature: interface InvestmentOffer Properties Property Type Description funds number Amount of funds you will get from this investment round number Current round of funding (max 4) shares number Amount of share you will give in exchange for this investment","title":"Bitburner.investmentoffer"},{"location":"bitburner.investmentoffer/#investmentoffer-interface","text":"Corporation investment offer Signature: interface InvestmentOffer","title":"InvestmentOffer interface"},{"location":"bitburner.investmentoffer/#properties","text":"Property Type Description funds number Amount of funds you will get from this investment round number Current round of funding (max 4) shares number Amount of share you will give in exchange for this investment","title":"Properties"},{"location":"bitburner.investmentoffer.round/","text":"Home > bitburner > InvestmentOffer > round InvestmentOffer.round property Current round of funding (max 4) Signature: round: number;","title":"Bitburner.investmentoffer.round"},{"location":"bitburner.investmentoffer.round/#investmentofferround-property","text":"Current round of funding (max 4) Signature: round: number;","title":"InvestmentOffer.round property"},{"location":"bitburner.investmentoffer.shares/","text":"Home > bitburner > InvestmentOffer > shares InvestmentOffer.shares property Amount of share you will give in exchange for this investment Signature: shares: number;","title":"Bitburner.investmentoffer.shares"},{"location":"bitburner.investmentoffer.shares/#investmentoffershares-property","text":"Amount of share you will give in exchange for this investment Signature: shares: number;","title":"InvestmentOffer.shares property"},{"location":"bitburner.istylesettings.fontfamily/","text":"Home > bitburner > IStyleSettings > fontFamily IStyleSettings.fontFamily property Signature: fontFamily: string;","title":"Bitburner.istylesettings.fontfamily"},{"location":"bitburner.istylesettings.fontfamily/#istylesettingsfontfamily-property","text":"Signature: fontFamily: string;","title":"IStyleSettings.fontFamily property"},{"location":"bitburner.istylesettings.lineheight/","text":"Home > bitburner > IStyleSettings > lineHeight IStyleSettings.lineHeight property Signature: lineHeight: number;","title":"Bitburner.istylesettings.lineheight"},{"location":"bitburner.istylesettings.lineheight/#istylesettingslineheight-property","text":"Signature: lineHeight: number;","title":"IStyleSettings.lineHeight property"},{"location":"bitburner.istylesettings/","text":"Home > bitburner > IStyleSettings IStyleSettings interface Interface Styles Signature: interface IStyleSettings Properties Property Type Description fontFamily string lineHeight number","title":"Bitburner.istylesettings"},{"location":"bitburner.istylesettings/#istylesettings-interface","text":"Interface Styles Signature: interface IStyleSettings","title":"IStyleSettings interface"},{"location":"bitburner.istylesettings/#properties","text":"Property Type Description fontFamily string lineHeight number","title":"Properties"},{"location":"bitburner.material.cmp/","text":"Home > bitburner > Material > cmp Material.cmp property Competition for the material, only present if \"Market Research - Competition\" unlocked Signature: cmp: number | undefined;","title":"Bitburner.material.cmp"},{"location":"bitburner.material.cmp/#materialcmp-property","text":"Competition for the material, only present if \"Market Research - Competition\" unlocked Signature: cmp: number | undefined;","title":"Material.cmp property"},{"location":"bitburner.material.cost/","text":"Home > bitburner > Material > cost Material.cost property Cost to buy material Signature: cost: number;","title":"Bitburner.material.cost"},{"location":"bitburner.material.cost/#materialcost-property","text":"Cost to buy material Signature: cost: number;","title":"Material.cost property"},{"location":"bitburner.material.dmd/","text":"Home > bitburner > Material > dmd Material.dmd property Demand for the material, only present if \"Market Research - Demand\" unlocked Signature: dmd: number | undefined;","title":"Bitburner.material.dmd"},{"location":"bitburner.material.dmd/#materialdmd-property","text":"Demand for the material, only present if \"Market Research - Demand\" unlocked Signature: dmd: number | undefined;","title":"Material.dmd property"},{"location":"bitburner.material.exp/","text":"Home > bitburner > Material > exp Material.exp property Export orders Signature: exp: Export[];","title":"Bitburner.material.exp"},{"location":"bitburner.material.exp/#materialexp-property","text":"Export orders Signature: exp: Export[];","title":"Material.exp property"},{"location":"bitburner.material/","text":"Home > bitburner > Material Material interface Material in a warehouse Signature: interface Material Properties Property Type Description cmp number | undefined Competition for the material, only present if \"Market Research - Competition\" unlocked cost number Cost to buy material dmd number | undefined Demand for the material, only present if \"Market Research - Demand\" unlocked exp Export [] Export orders name string Name of the material prod number Amount of material produced qlt number Quality of the material qty number Amount of material sCost string | number Sell cost, can be \"MP+5\" sell number Amount of material sold","title":"Bitburner.material"},{"location":"bitburner.material/#material-interface","text":"Material in a warehouse Signature: interface Material","title":"Material interface"},{"location":"bitburner.material/#properties","text":"Property Type Description cmp number | undefined Competition for the material, only present if \"Market Research - Competition\" unlocked cost number Cost to buy material dmd number | undefined Demand for the material, only present if \"Market Research - Demand\" unlocked exp Export [] Export orders name string Name of the material prod number Amount of material produced qlt number Quality of the material qty number Amount of material sCost string | number Sell cost, can be \"MP+5\" sell number Amount of material sold","title":"Properties"},{"location":"bitburner.material.name/","text":"Home > bitburner > Material > name Material.name property Name of the material Signature: name: string;","title":"Bitburner.material.name"},{"location":"bitburner.material.name/#materialname-property","text":"Name of the material Signature: name: string;","title":"Material.name property"},{"location":"bitburner.material.prod/","text":"Home > bitburner > Material > prod Material.prod property Amount of material produced Signature: prod: number;","title":"Bitburner.material.prod"},{"location":"bitburner.material.prod/#materialprod-property","text":"Amount of material produced Signature: prod: number;","title":"Material.prod property"},{"location":"bitburner.material.qlt/","text":"Home > bitburner > Material > qlt Material.qlt property Quality of the material Signature: qlt: number;","title":"Bitburner.material.qlt"},{"location":"bitburner.material.qlt/#materialqlt-property","text":"Quality of the material Signature: qlt: number;","title":"Material.qlt property"},{"location":"bitburner.material.qty/","text":"Home > bitburner > Material > qty Material.qty property Amount of material Signature: qty: number;","title":"Bitburner.material.qty"},{"location":"bitburner.material.qty/#materialqty-property","text":"Amount of material Signature: qty: number;","title":"Material.qty property"},{"location":"bitburner.material.scost/","text":"Home > bitburner > Material > sCost Material.sCost property Sell cost, can be \"MP+5\" Signature: sCost: string | number;","title":"Bitburner.material.scost"},{"location":"bitburner.material.scost/#materialscost-property","text":"Sell cost, can be \"MP+5\" Signature: sCost: string | number;","title":"Material.sCost property"},{"location":"bitburner.material.sell/","text":"Home > bitburner > Material > sell Material.sell property Amount of material sold Signature: sell: number;","title":"Bitburner.material.sell"},{"location":"bitburner.material.sell/#materialsell-property","text":"Amount of material sold Signature: sell: number;","title":"Material.sell property"},{"location":"bitburner/","text":"Home > bitburner bitburner package Enumerations Enumeration Description CrimeType OrderTypes PositionTypes ToastVariant Interfaces Interface Description ActiveFragment AugmentPair Return value of getSleevePurchasableAugs AutocompleteData Used for autocompletion BasicHGWOptions Options to affect the behavior of hack , grow , and weaken . BitNodeMultipliers All multipliers affecting the difficulty of the current challenge. Bladeburner Bladeburner API BladeburnerCurAction Bladeburner current action. CharacterMult CodingAttemptOptions Options to affect the behavior of CodingContract attempt. CodingContract Coding Contract API Corporation Corporation API CorporationInfo General info about a corporation CrimeStats Data representing the internal values of a crime. Division Corporation division Employee Employee in an office EmployeeJobs Object representing the number of employee in each job. EquipmentStats Object representing data representing a gang member equipment. Export Export order for a material Formulas Formulas API Fragment GameInfo Game Information Gang Gang API GangFormulas Gang formulas GangGenInfo Gang general info. GangMemberAscension GangMemberInfo GangOtherInfo GangOtherInfoObject GangTaskStats Object representing data representing a gang member task. GangTerritory Grafting Grafting API HackingFormulas Hacking formulas HackingMultipliers Hack related multipliers. Hacknet Hacknet API HacknetMultipliers Hacknet related multipliers. HacknetNodeConstants Hacknet node related constants HacknetNodesFormulas Hacknet Node formulas HacknetServerConstants Hacknet server related constants HacknetServersFormulas Hacknet Server formulas HP ILocation Infiltration Infiltration API. InfiltrationLocation InfiltrationReward InvestmentOffer Corporation investment offer IStyleSettings Interface Styles Material Material in a warehouse MoneySource MoneySources Multipliers NetscriptPort Object representing a port. A port is a serialized queue. NodeStats Object representing all the values related to a hacknet node. NS Collection of all functions passed to scripts Office Office for a division in a city. OfficeAPI Corporation Office API Player PossibleInfiltrationLocation ProcessInfo A single process on a server. Product Product in a warehouse RecentScript ReputationFormulas Reputation formulas RunningScript Server A single server. Singularity Singularity API Skills SkillsFormulas Skills formulas Sleeve Sleeve API SleeveInformation Object representing sleeve information. SleeveSkills Object representing a sleeve stats. SleeveWorkGains SourceFileLvl Stanek Stanek's Gift API. StockOrder Return value of getOrders Keys are stock symbols, properties are arrays of StockOrderObject StockOrderObject Value in map of StockOrder TIX Stock market API UserInterface User Interface API. UserInterfaceTheme Interface Theme Warehouse Warehouse for a division in a city WarehouseAPI Corporation Warehouse API WorkFormulas Work formulas WorkStats Type Aliases Type Alias Description CodingContractData Coding contract data will differ depending on coding contract. CrimeNames FilenameOrPID NSEnums PortData ScriptArg SleeveTask Object representing a sleeve current task. ToastTypes","title":"Bitburner"},{"location":"bitburner/#bitburner-package","text":"","title":"bitburner package"},{"location":"bitburner/#enumerations","text":"Enumeration Description CrimeType OrderTypes PositionTypes ToastVariant","title":"Enumerations"},{"location":"bitburner/#interfaces","text":"Interface Description ActiveFragment AugmentPair Return value of getSleevePurchasableAugs AutocompleteData Used for autocompletion BasicHGWOptions Options to affect the behavior of hack , grow , and weaken . BitNodeMultipliers All multipliers affecting the difficulty of the current challenge. Bladeburner Bladeburner API BladeburnerCurAction Bladeburner current action. CharacterMult CodingAttemptOptions Options to affect the behavior of CodingContract attempt. CodingContract Coding Contract API Corporation Corporation API CorporationInfo General info about a corporation CrimeStats Data representing the internal values of a crime. Division Corporation division Employee Employee in an office EmployeeJobs Object representing the number of employee in each job. EquipmentStats Object representing data representing a gang member equipment. Export Export order for a material Formulas Formulas API Fragment GameInfo Game Information Gang Gang API GangFormulas Gang formulas GangGenInfo Gang general info. GangMemberAscension GangMemberInfo GangOtherInfo GangOtherInfoObject GangTaskStats Object representing data representing a gang member task. GangTerritory Grafting Grafting API HackingFormulas Hacking formulas HackingMultipliers Hack related multipliers. Hacknet Hacknet API HacknetMultipliers Hacknet related multipliers. HacknetNodeConstants Hacknet node related constants HacknetNodesFormulas Hacknet Node formulas HacknetServerConstants Hacknet server related constants HacknetServersFormulas Hacknet Server formulas HP ILocation Infiltration Infiltration API. InfiltrationLocation InfiltrationReward InvestmentOffer Corporation investment offer IStyleSettings Interface Styles Material Material in a warehouse MoneySource MoneySources Multipliers NetscriptPort Object representing a port. A port is a serialized queue. NodeStats Object representing all the values related to a hacknet node. NS Collection of all functions passed to scripts Office Office for a division in a city. OfficeAPI Corporation Office API Player PossibleInfiltrationLocation ProcessInfo A single process on a server. Product Product in a warehouse RecentScript ReputationFormulas Reputation formulas RunningScript Server A single server. Singularity Singularity API Skills SkillsFormulas Skills formulas Sleeve Sleeve API SleeveInformation Object representing sleeve information. SleeveSkills Object representing a sleeve stats. SleeveWorkGains SourceFileLvl Stanek Stanek's Gift API. StockOrder Return value of getOrders Keys are stock symbols, properties are arrays of StockOrderObject StockOrderObject Value in map of StockOrder TIX Stock market API UserInterface User Interface API. UserInterfaceTheme Interface Theme Warehouse Warehouse for a division in a city WarehouseAPI Corporation Warehouse API WorkFormulas Work formulas WorkStats","title":"Interfaces"},{"location":"bitburner/#type-aliases","text":"Type Alias Description CodingContractData Coding contract data will differ depending on coding contract. CrimeNames FilenameOrPID NSEnums PortData ScriptArg SleeveTask Object representing a sleeve current task. ToastTypes","title":"Type Aliases"},{"location":"bitburner.moneysource.augmentations/","text":"Home > bitburner > MoneySource > augmentations MoneySource.augmentations property Signature: augmentations: number;","title":"Bitburner.moneysource.augmentations"},{"location":"bitburner.moneysource.augmentations/#moneysourceaugmentations-property","text":"Signature: augmentations: number;","title":"MoneySource.augmentations property"},{"location":"bitburner.moneysource.bladeburner/","text":"Home > bitburner > MoneySource > bladeburner MoneySource.bladeburner property Signature: bladeburner: number;","title":"Bitburner.moneysource.bladeburner"},{"location":"bitburner.moneysource.bladeburner/#moneysourcebladeburner-property","text":"Signature: bladeburner: number;","title":"MoneySource.bladeburner property"},{"location":"bitburner.moneysource.casino/","text":"Home > bitburner > MoneySource > casino MoneySource.casino property Signature: casino: number;","title":"Bitburner.moneysource.casino"},{"location":"bitburner.moneysource.casino/#moneysourcecasino-property","text":"Signature: casino: number;","title":"MoneySource.casino property"},{"location":"bitburner.moneysource.class/","text":"Home > bitburner > MoneySource > class MoneySource.class property Signature: class: number;","title":"Bitburner.moneysource.class"},{"location":"bitburner.moneysource.class/#moneysourceclass-property","text":"Signature: class: number;","title":"MoneySource.class property"},{"location":"bitburner.moneysource.codingcontract/","text":"Home > bitburner > MoneySource > codingcontract MoneySource.codingcontract property Signature: codingcontract: number;","title":"Bitburner.moneysource.codingcontract"},{"location":"bitburner.moneysource.codingcontract/#moneysourcecodingcontract-property","text":"Signature: codingcontract: number;","title":"MoneySource.codingcontract property"},{"location":"bitburner.moneysource.corporation/","text":"Home > bitburner > MoneySource > corporation MoneySource.corporation property Signature: corporation: number;","title":"Bitburner.moneysource.corporation"},{"location":"bitburner.moneysource.corporation/#moneysourcecorporation-property","text":"Signature: corporation: number;","title":"MoneySource.corporation property"},{"location":"bitburner.moneysource.crime/","text":"Home > bitburner > MoneySource > crime MoneySource.crime property Signature: crime: number;","title":"Bitburner.moneysource.crime"},{"location":"bitburner.moneysource.crime/#moneysourcecrime-property","text":"Signature: crime: number;","title":"MoneySource.crime property"},{"location":"bitburner.moneysource.gang/","text":"Home > bitburner > MoneySource > gang MoneySource.gang property Signature: gang: number;","title":"Bitburner.moneysource.gang"},{"location":"bitburner.moneysource.gang/#moneysourcegang-property","text":"Signature: gang: number;","title":"MoneySource.gang property"},{"location":"bitburner.moneysource.hacking/","text":"Home > bitburner > MoneySource > hacking MoneySource.hacking property Signature: hacking: number;","title":"Bitburner.moneysource.hacking"},{"location":"bitburner.moneysource.hacking/#moneysourcehacking-property","text":"Signature: hacking: number;","title":"MoneySource.hacking property"},{"location":"bitburner.moneysource.hacknet/","text":"Home > bitburner > MoneySource > hacknet MoneySource.hacknet property Signature: hacknet: number;","title":"Bitburner.moneysource.hacknet"},{"location":"bitburner.moneysource.hacknet/#moneysourcehacknet-property","text":"Signature: hacknet: number;","title":"MoneySource.hacknet property"},{"location":"bitburner.moneysource.hacknet_expenses/","text":"Home > bitburner > MoneySource > hacknet_expenses MoneySource.hacknet_expenses property Signature: hacknet_expenses: number;","title":"Bitburner.moneysource.hacknet expenses"},{"location":"bitburner.moneysource.hacknet_expenses/#moneysourcehacknet_expenses-property","text":"Signature: hacknet_expenses: number;","title":"MoneySource.hacknet_expenses property"},{"location":"bitburner.moneysource.hospitalization/","text":"Home > bitburner > MoneySource > hospitalization MoneySource.hospitalization property Signature: hospitalization: number;","title":"Bitburner.moneysource.hospitalization"},{"location":"bitburner.moneysource.hospitalization/#moneysourcehospitalization-property","text":"Signature: hospitalization: number;","title":"MoneySource.hospitalization property"},{"location":"bitburner.moneysource.infiltration/","text":"Home > bitburner > MoneySource > infiltration MoneySource.infiltration property Signature: infiltration: number;","title":"Bitburner.moneysource.infiltration"},{"location":"bitburner.moneysource.infiltration/#moneysourceinfiltration-property","text":"Signature: infiltration: number;","title":"MoneySource.infiltration property"},{"location":"bitburner.moneysource/","text":"Home > bitburner > MoneySource MoneySource interface Signature: interface MoneySource Properties Property Type Description augmentations number bladeburner number casino number class number codingcontract number corporation number crime number gang number hacking number hacknet_expenses number hacknet number hospitalization number infiltration number other number servers number sleeves number stock number total number work number","title":"Bitburner.moneysource"},{"location":"bitburner.moneysource/#moneysource-interface","text":"Signature: interface MoneySource","title":"MoneySource interface"},{"location":"bitburner.moneysource/#properties","text":"Property Type Description augmentations number bladeburner number casino number class number codingcontract number corporation number crime number gang number hacking number hacknet_expenses number hacknet number hospitalization number infiltration number other number servers number sleeves number stock number total number work number","title":"Properties"},{"location":"bitburner.moneysource.other/","text":"Home > bitburner > MoneySource > other MoneySource.other property Signature: other: number;","title":"Bitburner.moneysource.other"},{"location":"bitburner.moneysource.other/#moneysourceother-property","text":"Signature: other: number;","title":"MoneySource.other property"},{"location":"bitburner.moneysource.servers/","text":"Home > bitburner > MoneySource > servers MoneySource.servers property Signature: servers: number;","title":"Bitburner.moneysource.servers"},{"location":"bitburner.moneysource.servers/#moneysourceservers-property","text":"Signature: servers: number;","title":"MoneySource.servers property"},{"location":"bitburner.moneysource.sleeves/","text":"Home > bitburner > MoneySource > sleeves MoneySource.sleeves property Signature: sleeves: number;","title":"Bitburner.moneysource.sleeves"},{"location":"bitburner.moneysource.sleeves/#moneysourcesleeves-property","text":"Signature: sleeves: number;","title":"MoneySource.sleeves property"},{"location":"bitburner.moneysource.stock/","text":"Home > bitburner > MoneySource > stock MoneySource.stock property Signature: stock: number;","title":"Bitburner.moneysource.stock"},{"location":"bitburner.moneysource.stock/#moneysourcestock-property","text":"Signature: stock: number;","title":"MoneySource.stock property"},{"location":"bitburner.moneysource.total/","text":"Home > bitburner > MoneySource > total MoneySource.total property Signature: total: number;","title":"Bitburner.moneysource.total"},{"location":"bitburner.moneysource.total/#moneysourcetotal-property","text":"Signature: total: number;","title":"MoneySource.total property"},{"location":"bitburner.moneysource.work/","text":"Home > bitburner > MoneySource > work MoneySource.work property Signature: work: number;","title":"Bitburner.moneysource.work"},{"location":"bitburner.moneysource.work/#moneysourcework-property","text":"Signature: work: number;","title":"MoneySource.work property"},{"location":"bitburner.moneysources/","text":"Home > bitburner > MoneySources MoneySources interface Signature: interface MoneySources Properties Property Type Description sinceInstall MoneySource sinceStart MoneySource","title":"Bitburner.moneysources"},{"location":"bitburner.moneysources/#moneysources-interface","text":"Signature: interface MoneySources","title":"MoneySources interface"},{"location":"bitburner.moneysources/#properties","text":"Property Type Description sinceInstall MoneySource sinceStart MoneySource","title":"Properties"},{"location":"bitburner.moneysources.sinceinstall/","text":"Home > bitburner > MoneySources > sinceInstall MoneySources.sinceInstall property Signature: sinceInstall: MoneySource;","title":"Bitburner.moneysources.sinceinstall"},{"location":"bitburner.moneysources.sinceinstall/#moneysourcessinceinstall-property","text":"Signature: sinceInstall: MoneySource;","title":"MoneySources.sinceInstall property"},{"location":"bitburner.moneysources.sincestart/","text":"Home > bitburner > MoneySources > sinceStart MoneySources.sinceStart property Signature: sinceStart: MoneySource;","title":"Bitburner.moneysources.sincestart"},{"location":"bitburner.moneysources.sincestart/#moneysourcessincestart-property","text":"Signature: sinceStart: MoneySource;","title":"MoneySources.sinceStart property"},{"location":"bitburner.multipliers.agility/","text":"Home > bitburner > Multipliers > agility Multipliers.agility property Multiplier to agility skill Signature: agility?: number;","title":"Bitburner.multipliers.agility"},{"location":"bitburner.multipliers.agility/#multipliersagility-property","text":"Multiplier to agility skill Signature: agility?: number;","title":"Multipliers.agility property"},{"location":"bitburner.multipliers.agility_exp/","text":"Home > bitburner > Multipliers > agility_exp Multipliers.agility_exp property Multiplier to agility experience gain rate Signature: agility_exp?: number;","title":"Bitburner.multipliers.agility exp"},{"location":"bitburner.multipliers.agility_exp/#multipliersagility_exp-property","text":"Multiplier to agility experience gain rate Signature: agility_exp?: number;","title":"Multipliers.agility_exp property"},{"location":"bitburner.multipliers.bladeburner_analysis/","text":"Home > bitburner > Multipliers > bladeburner_analysis Multipliers.bladeburner_analysis property Multiplier to effectiveness in Bladeburner Field Analysis Signature: bladeburner_analysis?: number;","title":"Bitburner.multipliers.bladeburner analysis"},{"location":"bitburner.multipliers.bladeburner_analysis/#multipliersbladeburner_analysis-property","text":"Multiplier to effectiveness in Bladeburner Field Analysis Signature: bladeburner_analysis?: number;","title":"Multipliers.bladeburner_analysis property"},{"location":"bitburner.multipliers.bladeburner_max_stamina/","text":"Home > bitburner > Multipliers > bladeburner_max_stamina Multipliers.bladeburner_max_stamina property Multiplier to Bladeburner max stamina Signature: bladeburner_max_stamina?: number;","title":"Bitburner.multipliers.bladeburner max stamina"},{"location":"bitburner.multipliers.bladeburner_max_stamina/#multipliersbladeburner_max_stamina-property","text":"Multiplier to Bladeburner max stamina Signature: bladeburner_max_stamina?: number;","title":"Multipliers.bladeburner_max_stamina property"},{"location":"bitburner.multipliers.bladeburner_stamina_gain/","text":"Home > bitburner > Multipliers > bladeburner_stamina_gain Multipliers.bladeburner_stamina_gain property Multiplier to Bladeburner stamina gain rate Signature: bladeburner_stamina_gain?: number;","title":"Bitburner.multipliers.bladeburner stamina gain"},{"location":"bitburner.multipliers.bladeburner_stamina_gain/#multipliersbladeburner_stamina_gain-property","text":"Multiplier to Bladeburner stamina gain rate Signature: bladeburner_stamina_gain?: number;","title":"Multipliers.bladeburner_stamina_gain property"},{"location":"bitburner.multipliers.bladeburner_success_chance/","text":"Home > bitburner > Multipliers > bladeburner_success_chance Multipliers.bladeburner_success_chance property Multiplier to success chance in Bladeburner contracts/operations Signature: bladeburner_success_chance?: number;","title":"Bitburner.multipliers.bladeburner success chance"},{"location":"bitburner.multipliers.bladeburner_success_chance/#multipliersbladeburner_success_chance-property","text":"Multiplier to success chance in Bladeburner contracts/operations Signature: bladeburner_success_chance?: number;","title":"Multipliers.bladeburner_success_chance property"},{"location":"bitburner.multipliers.charisma/","text":"Home > bitburner > Multipliers > charisma Multipliers.charisma property Multiplier to charisma skill Signature: charisma?: number;","title":"Bitburner.multipliers.charisma"},{"location":"bitburner.multipliers.charisma/#multiplierscharisma-property","text":"Multiplier to charisma skill Signature: charisma?: number;","title":"Multipliers.charisma property"},{"location":"bitburner.multipliers.charisma_exp/","text":"Home > bitburner > Multipliers > charisma_exp Multipliers.charisma_exp property Multiplier to charisma experience gain rate Signature: charisma_exp?: number;","title":"Bitburner.multipliers.charisma exp"},{"location":"bitburner.multipliers.charisma_exp/#multiplierscharisma_exp-property","text":"Multiplier to charisma experience gain rate Signature: charisma_exp?: number;","title":"Multipliers.charisma_exp property"},{"location":"bitburner.multipliers.company_rep/","text":"Home > bitburner > Multipliers > company_rep Multipliers.company_rep property Multiplier to amount of reputation gained when working Signature: company_rep?: number;","title":"Bitburner.multipliers.company rep"},{"location":"bitburner.multipliers.company_rep/#multiplierscompany_rep-property","text":"Multiplier to amount of reputation gained when working Signature: company_rep?: number;","title":"Multipliers.company_rep property"},{"location":"bitburner.multipliers.crime_money/","text":"Home > bitburner > Multipliers > crime_money Multipliers.crime_money property Multiplier to amount of money gained from crimes Signature: crime_money?: number;","title":"Bitburner.multipliers.crime money"},{"location":"bitburner.multipliers.crime_money/#multiplierscrime_money-property","text":"Multiplier to amount of money gained from crimes Signature: crime_money?: number;","title":"Multipliers.crime_money property"},{"location":"bitburner.multipliers.crime_success/","text":"Home > bitburner > Multipliers > crime_success Multipliers.crime_success property Multiplier to crime success rate Signature: crime_success?: number;","title":"Bitburner.multipliers.crime success"},{"location":"bitburner.multipliers.crime_success/#multiplierscrime_success-property","text":"Multiplier to crime success rate Signature: crime_success?: number;","title":"Multipliers.crime_success property"},{"location":"bitburner.multipliers.defense/","text":"Home > bitburner > Multipliers > defense Multipliers.defense property Multiplier to defense skill Signature: defense?: number;","title":"Bitburner.multipliers.defense"},{"location":"bitburner.multipliers.defense/#multipliersdefense-property","text":"Multiplier to defense skill Signature: defense?: number;","title":"Multipliers.defense property"},{"location":"bitburner.multipliers.defense_exp/","text":"Home > bitburner > Multipliers > defense_exp Multipliers.defense_exp property Multiplier to defense experience gain rate Signature: defense_exp?: number;","title":"Bitburner.multipliers.defense exp"},{"location":"bitburner.multipliers.defense_exp/#multipliersdefense_exp-property","text":"Multiplier to defense experience gain rate Signature: defense_exp?: number;","title":"Multipliers.defense_exp property"},{"location":"bitburner.multipliers.dexterity/","text":"Home > bitburner > Multipliers > dexterity Multipliers.dexterity property Multiplier to dexterity skill Signature: dexterity?: number;","title":"Bitburner.multipliers.dexterity"},{"location":"bitburner.multipliers.dexterity/#multipliersdexterity-property","text":"Multiplier to dexterity skill Signature: dexterity?: number;","title":"Multipliers.dexterity property"},{"location":"bitburner.multipliers.dexterity_exp/","text":"Home > bitburner > Multipliers > dexterity_exp Multipliers.dexterity_exp property Multiplier to dexterity experience gain rate Signature: dexterity_exp?: number;","title":"Bitburner.multipliers.dexterity exp"},{"location":"bitburner.multipliers.dexterity_exp/#multipliersdexterity_exp-property","text":"Multiplier to dexterity experience gain rate Signature: dexterity_exp?: number;","title":"Multipliers.dexterity_exp property"},{"location":"bitburner.multipliers.faction_rep/","text":"Home > bitburner > Multipliers > faction_rep Multipliers.faction_rep property Multiplier to amount of reputation gained when working Signature: faction_rep?: number;","title":"Bitburner.multipliers.faction rep"},{"location":"bitburner.multipliers.faction_rep/#multipliersfaction_rep-property","text":"Multiplier to amount of reputation gained when working Signature: faction_rep?: number;","title":"Multipliers.faction_rep property"},{"location":"bitburner.multipliers.hacking/","text":"Home > bitburner > Multipliers > hacking Multipliers.hacking property Multiplier to hacking skill Signature: hacking?: number;","title":"Bitburner.multipliers.hacking"},{"location":"bitburner.multipliers.hacking/#multipliershacking-property","text":"Multiplier to hacking skill Signature: hacking?: number;","title":"Multipliers.hacking property"},{"location":"bitburner.multipliers.hacking_chance/","text":"Home > bitburner > Multipliers > hacking_chance Multipliers.hacking_chance property Multiplier to chance of successfully performing a hack Signature: hacking_chance?: number;","title":"Bitburner.multipliers.hacking chance"},{"location":"bitburner.multipliers.hacking_chance/#multipliershacking_chance-property","text":"Multiplier to chance of successfully performing a hack Signature: hacking_chance?: number;","title":"Multipliers.hacking_chance property"},{"location":"bitburner.multipliers.hacking_exp/","text":"Home > bitburner > Multipliers > hacking_exp Multipliers.hacking_exp property Multiplier to hacking experience gain rate Signature: hacking_exp?: number;","title":"Bitburner.multipliers.hacking exp"},{"location":"bitburner.multipliers.hacking_exp/#multipliershacking_exp-property","text":"Multiplier to hacking experience gain rate Signature: hacking_exp?: number;","title":"Multipliers.hacking_exp property"},{"location":"bitburner.multipliers.hacking_grow/","text":"Home > bitburner > Multipliers > hacking_grow Multipliers.hacking_grow property Multiplier to amount of money injected into servers using grow Signature: hacking_grow?: number;","title":"Bitburner.multipliers.hacking grow"},{"location":"bitburner.multipliers.hacking_grow/#multipliershacking_grow-property","text":"Multiplier to amount of money injected into servers using grow Signature: hacking_grow?: number;","title":"Multipliers.hacking_grow property"},{"location":"bitburner.multipliers.hacking_money/","text":"Home > bitburner > Multipliers > hacking_money Multipliers.hacking_money property Multiplier to amount of money the player gains from hacking Signature: hacking_money?: number;","title":"Bitburner.multipliers.hacking money"},{"location":"bitburner.multipliers.hacking_money/#multipliershacking_money-property","text":"Multiplier to amount of money the player gains from hacking Signature: hacking_money?: number;","title":"Multipliers.hacking_money property"},{"location":"bitburner.multipliers.hacking_speed/","text":"Home > bitburner > Multipliers > hacking_speed Multipliers.hacking_speed property Multiplier to hacking speed Signature: hacking_speed?: number;","title":"Bitburner.multipliers.hacking speed"},{"location":"bitburner.multipliers.hacking_speed/#multipliershacking_speed-property","text":"Multiplier to hacking speed Signature: hacking_speed?: number;","title":"Multipliers.hacking_speed property"},{"location":"bitburner.multipliers.hacknet_node_core_cost/","text":"Home > bitburner > Multipliers > hacknet_node_core_cost Multipliers.hacknet_node_core_cost property Multiplier to cost of core for a Hacknet Node Signature: hacknet_node_core_cost?: number;","title":"Bitburner.multipliers.hacknet node core cost"},{"location":"bitburner.multipliers.hacknet_node_core_cost/#multipliershacknet_node_core_cost-property","text":"Multiplier to cost of core for a Hacknet Node Signature: hacknet_node_core_cost?: number;","title":"Multipliers.hacknet_node_core_cost property"},{"location":"bitburner.multipliers.hacknet_node_level_cost/","text":"Home > bitburner > Multipliers > hacknet_node_level_cost Multipliers.hacknet_node_level_cost property Multiplier to cost of leveling up a Hacknet Node Signature: hacknet_node_level_cost?: number;","title":"Bitburner.multipliers.hacknet node level cost"},{"location":"bitburner.multipliers.hacknet_node_level_cost/#multipliershacknet_node_level_cost-property","text":"Multiplier to cost of leveling up a Hacknet Node Signature: hacknet_node_level_cost?: number;","title":"Multipliers.hacknet_node_level_cost property"},{"location":"bitburner.multipliers.hacknet_node_money/","text":"Home > bitburner > Multipliers > hacknet_node_money Multipliers.hacknet_node_money property Multiplier to amount of money produced by Hacknet Nodes Signature: hacknet_node_money?: number;","title":"Bitburner.multipliers.hacknet node money"},{"location":"bitburner.multipliers.hacknet_node_money/#multipliershacknet_node_money-property","text":"Multiplier to amount of money produced by Hacknet Nodes Signature: hacknet_node_money?: number;","title":"Multipliers.hacknet_node_money property"},{"location":"bitburner.multipliers.hacknet_node_purchase_cost/","text":"Home > bitburner > Multipliers > hacknet_node_purchase_cost Multipliers.hacknet_node_purchase_cost property Multiplier to cost of purchasing a Hacknet Node Signature: hacknet_node_purchase_cost?: number;","title":"Bitburner.multipliers.hacknet node purchase cost"},{"location":"bitburner.multipliers.hacknet_node_purchase_cost/#multipliershacknet_node_purchase_cost-property","text":"Multiplier to cost of purchasing a Hacknet Node Signature: hacknet_node_purchase_cost?: number;","title":"Multipliers.hacknet_node_purchase_cost property"},{"location":"bitburner.multipliers.hacknet_node_ram_cost/","text":"Home > bitburner > Multipliers > hacknet_node_ram_cost Multipliers.hacknet_node_ram_cost property Multiplier to cost of ram for a Hacknet Node Signature: hacknet_node_ram_cost?: number;","title":"Bitburner.multipliers.hacknet node ram cost"},{"location":"bitburner.multipliers.hacknet_node_ram_cost/#multipliershacknet_node_ram_cost-property","text":"Multiplier to cost of ram for a Hacknet Node Signature: hacknet_node_ram_cost?: number;","title":"Multipliers.hacknet_node_ram_cost property"},{"location":"bitburner.multipliers/","text":"Home > bitburner > Multipliers Multipliers interface Signature: export interface Multipliers Properties Property Type Description agility_exp? number (Optional) Multiplier to agility experience gain rate agility? number (Optional) Multiplier to agility skill bladeburner_analysis? number (Optional) Multiplier to effectiveness in Bladeburner Field Analysis bladeburner_max_stamina? number (Optional) Multiplier to Bladeburner max stamina bladeburner_stamina_gain? number (Optional) Multiplier to Bladeburner stamina gain rate bladeburner_success_chance? number (Optional) Multiplier to success chance in Bladeburner contracts/operations charisma_exp? number (Optional) Multiplier to charisma experience gain rate charisma? number (Optional) Multiplier to charisma skill company_rep? number (Optional) Multiplier to amount of reputation gained when working crime_money? number (Optional) Multiplier to amount of money gained from crimes crime_success? number (Optional) Multiplier to crime success rate defense_exp? number (Optional) Multiplier to defense experience gain rate defense? number (Optional) Multiplier to defense skill dexterity_exp? number (Optional) Multiplier to dexterity experience gain rate dexterity? number (Optional) Multiplier to dexterity skill faction_rep? number (Optional) Multiplier to amount of reputation gained when working hacking_chance? number (Optional) Multiplier to chance of successfully performing a hack hacking_exp? number (Optional) Multiplier to hacking experience gain rate hacking_grow? number (Optional) Multiplier to amount of money injected into servers using grow hacking_money? number (Optional) Multiplier to amount of money the player gains from hacking hacking_speed? number (Optional) Multiplier to hacking speed hacking? number (Optional) Multiplier to hacking skill hacknet_node_core_cost? number (Optional) Multiplier to cost of core for a Hacknet Node hacknet_node_level_cost? number (Optional) Multiplier to cost of leveling up a Hacknet Node hacknet_node_money? number (Optional) Multiplier to amount of money produced by Hacknet Nodes hacknet_node_purchase_cost? number (Optional) Multiplier to cost of purchasing a Hacknet Node hacknet_node_ram_cost? number (Optional) Multiplier to cost of ram for a Hacknet Node strength_exp? number (Optional) Multiplier to strength experience gain rate strength? number (Optional) Multiplier to strength skill work_money? number (Optional) Multiplier to amount of money gained from working","title":"Bitburner.multipliers"},{"location":"bitburner.multipliers/#multipliers-interface","text":"Signature: export interface Multipliers","title":"Multipliers interface"},{"location":"bitburner.multipliers/#properties","text":"Property Type Description agility_exp? number (Optional) Multiplier to agility experience gain rate agility? number (Optional) Multiplier to agility skill bladeburner_analysis? number (Optional) Multiplier to effectiveness in Bladeburner Field Analysis bladeburner_max_stamina? number (Optional) Multiplier to Bladeburner max stamina bladeburner_stamina_gain? number (Optional) Multiplier to Bladeburner stamina gain rate bladeburner_success_chance? number (Optional) Multiplier to success chance in Bladeburner contracts/operations charisma_exp? number (Optional) Multiplier to charisma experience gain rate charisma? number (Optional) Multiplier to charisma skill company_rep? number (Optional) Multiplier to amount of reputation gained when working crime_money? number (Optional) Multiplier to amount of money gained from crimes crime_success? number (Optional) Multiplier to crime success rate defense_exp? number (Optional) Multiplier to defense experience gain rate defense? number (Optional) Multiplier to defense skill dexterity_exp? number (Optional) Multiplier to dexterity experience gain rate dexterity? number (Optional) Multiplier to dexterity skill faction_rep? number (Optional) Multiplier to amount of reputation gained when working hacking_chance? number (Optional) Multiplier to chance of successfully performing a hack hacking_exp? number (Optional) Multiplier to hacking experience gain rate hacking_grow? number (Optional) Multiplier to amount of money injected into servers using grow hacking_money? number (Optional) Multiplier to amount of money the player gains from hacking hacking_speed? number (Optional) Multiplier to hacking speed hacking? number (Optional) Multiplier to hacking skill hacknet_node_core_cost? number (Optional) Multiplier to cost of core for a Hacknet Node hacknet_node_level_cost? number (Optional) Multiplier to cost of leveling up a Hacknet Node hacknet_node_money? number (Optional) Multiplier to amount of money produced by Hacknet Nodes hacknet_node_purchase_cost? number (Optional) Multiplier to cost of purchasing a Hacknet Node hacknet_node_ram_cost? number (Optional) Multiplier to cost of ram for a Hacknet Node strength_exp? number (Optional) Multiplier to strength experience gain rate strength? number (Optional) Multiplier to strength skill work_money? number (Optional) Multiplier to amount of money gained from working","title":"Properties"},{"location":"bitburner.multipliers.strength/","text":"Home > bitburner > Multipliers > strength Multipliers.strength property Multiplier to strength skill Signature: strength?: number;","title":"Bitburner.multipliers.strength"},{"location":"bitburner.multipliers.strength/#multipliersstrength-property","text":"Multiplier to strength skill Signature: strength?: number;","title":"Multipliers.strength property"},{"location":"bitburner.multipliers.strength_exp/","text":"Home > bitburner > Multipliers > strength_exp Multipliers.strength_exp property Multiplier to strength experience gain rate Signature: strength_exp?: number;","title":"Bitburner.multipliers.strength exp"},{"location":"bitburner.multipliers.strength_exp/#multipliersstrength_exp-property","text":"Multiplier to strength experience gain rate Signature: strength_exp?: number;","title":"Multipliers.strength_exp property"},{"location":"bitburner.multipliers.work_money/","text":"Home > bitburner > Multipliers > work_money Multipliers.work_money property Multiplier to amount of money gained from working Signature: work_money?: number;","title":"Bitburner.multipliers.work money"},{"location":"bitburner.multipliers.work_money/#multiplierswork_money-property","text":"Multiplier to amount of money gained from working Signature: work_money?: number;","title":"Multipliers.work_money property"},{"location":"bitburner.netscriptport.clear/","text":"Home > bitburner > NetscriptPort > clear NetscriptPort.clear() method Empties all data from the port. Signature: clear(): void; Returns: void Remarks RAM cost: 0 GB","title":"Bitburner.netscriptport.clear"},{"location":"bitburner.netscriptport.clear/#netscriptportclear-method","text":"Empties all data from the port. Signature: clear(): void; Returns: void","title":"NetscriptPort.clear() method"},{"location":"bitburner.netscriptport.clear/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.netscriptport.empty/","text":"Home > bitburner > NetscriptPort > empty NetscriptPort.empty() method Check if the port is empty. Signature: empty(): boolean; Returns: boolean true if the port is empty, otherwise false Remarks RAM cost: 0 GB","title":"Bitburner.netscriptport.empty"},{"location":"bitburner.netscriptport.empty/#netscriptportempty-method","text":"Check if the port is empty. Signature: empty(): boolean; Returns: boolean true if the port is empty, otherwise false","title":"NetscriptPort.empty() method"},{"location":"bitburner.netscriptport.empty/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.netscriptport.full/","text":"Home > bitburner > NetscriptPort > full NetscriptPort.full() method Check if the port is full. Signature: full(): boolean; Returns: boolean true if the port is full, otherwise false Remarks RAM cost: 0 GB","title":"Bitburner.netscriptport.full"},{"location":"bitburner.netscriptport.full/#netscriptportfull-method","text":"Check if the port is full. Signature: full(): boolean; Returns: boolean true if the port is full, otherwise false","title":"NetscriptPort.full() method"},{"location":"bitburner.netscriptport.full/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.netscriptport/","text":"Home > bitburner > NetscriptPort NetscriptPort interface Object representing a port. A port is a serialized queue. Signature: export interface NetscriptPort Methods Method Description clear() Empties all data from the port. empty() Check if the port is empty. full() Check if the port is full. peek() Retrieve the first element from the port without removing it. read() Shift an element out of the port. tryWrite(value) Attempt to write data to the port. write(value) Write data to a port.","title":"Bitburner.netscriptport"},{"location":"bitburner.netscriptport/#netscriptport-interface","text":"Object representing a port. A port is a serialized queue. Signature: export interface NetscriptPort","title":"NetscriptPort interface"},{"location":"bitburner.netscriptport/#methods","text":"Method Description clear() Empties all data from the port. empty() Check if the port is empty. full() Check if the port is full. peek() Retrieve the first element from the port without removing it. read() Shift an element out of the port. tryWrite(value) Attempt to write data to the port. write(value) Write data to a port.","title":"Methods"},{"location":"bitburner.netscriptport.peek/","text":"Home > bitburner > NetscriptPort > peek NetscriptPort.peek() method Retrieve the first element from the port without removing it. Signature: peek(): PortData; Returns: PortData the data read Remarks RAM cost: 0 GB This function is used to peek at the data from a port. It returns the first element in the specified port without removing that element. If the port is empty, the string \u201cNULL PORT DATA\u201d will be returned.","title":"Bitburner.netscriptport.peek"},{"location":"bitburner.netscriptport.peek/#netscriptportpeek-method","text":"Retrieve the first element from the port without removing it. Signature: peek(): PortData; Returns: PortData the data read","title":"NetscriptPort.peek() method"},{"location":"bitburner.netscriptport.peek/#remarks","text":"RAM cost: 0 GB This function is used to peek at the data from a port. It returns the first element in the specified port without removing that element. If the port is empty, the string \u201cNULL PORT DATA\u201d will be returned.","title":"Remarks"},{"location":"bitburner.netscriptport.read/","text":"Home > bitburner > NetscriptPort > read NetscriptPort.read() method Shift an element out of the port. Signature: read(): PortData; Returns: PortData the data read. Remarks RAM cost: 0 GB This function will remove the first element from the port and return it. If the port is empty, then the string \u201cNULL PORT DATA\u201d will be returned.","title":"Bitburner.netscriptport.read"},{"location":"bitburner.netscriptport.read/#netscriptportread-method","text":"Shift an element out of the port. Signature: read(): PortData; Returns: PortData the data read.","title":"NetscriptPort.read() method"},{"location":"bitburner.netscriptport.read/#remarks","text":"RAM cost: 0 GB This function will remove the first element from the port and return it. If the port is empty, then the string \u201cNULL PORT DATA\u201d will be returned.","title":"Remarks"},{"location":"bitburner.netscriptport.trywrite/","text":"Home > bitburner > NetscriptPort > tryWrite NetscriptPort.tryWrite() method Attempt to write data to the port. Signature: tryWrite(value: string | number): boolean; Parameters Parameter Type Description value string | number Returns: boolean True if the data was added to the port, false if the port was full Remarks RAM cost: 0 GB","title":"Bitburner.netscriptport.trywrite"},{"location":"bitburner.netscriptport.trywrite/#netscriptporttrywrite-method","text":"Attempt to write data to the port. Signature: tryWrite(value: string | number): boolean;","title":"NetscriptPort.tryWrite() method"},{"location":"bitburner.netscriptport.trywrite/#parameters","text":"Parameter Type Description value string | number Returns: boolean True if the data was added to the port, false if the port was full","title":"Parameters"},{"location":"bitburner.netscriptport.trywrite/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.netscriptport.write/","text":"Home > bitburner > NetscriptPort > write NetscriptPort.write() method Write data to a port. Signature: write(value: string | number): PortData | null; Parameters Parameter Type Description value string | number Returns: PortData | null The data popped off the queue if it was full. Remarks RAM cost: 0 GB","title":"Bitburner.netscriptport.write"},{"location":"bitburner.netscriptport.write/#netscriptportwrite-method","text":"Write data to a port. Signature: write(value: string | number): PortData | null;","title":"NetscriptPort.write() method"},{"location":"bitburner.netscriptport.write/#parameters","text":"Parameter Type Description value string | number Returns: PortData | null The data popped off the queue if it was full.","title":"Parameters"},{"location":"bitburner.netscriptport.write/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.nodestats.cache/","text":"Home > bitburner > NodeStats > cache NodeStats.cache property Cache level. Only applicable for Hacknet Servers Signature: cache?: number;","title":"Bitburner.nodestats.cache"},{"location":"bitburner.nodestats.cache/#nodestatscache-property","text":"Cache level. Only applicable for Hacknet Servers Signature: cache?: number;","title":"NodeStats.cache property"},{"location":"bitburner.nodestats.cores/","text":"Home > bitburner > NodeStats > cores NodeStats.cores property Node's number of cores Signature: cores: number;","title":"Bitburner.nodestats.cores"},{"location":"bitburner.nodestats.cores/#nodestatscores-property","text":"Node's number of cores Signature: cores: number;","title":"NodeStats.cores property"},{"location":"bitburner.nodestats.hashcapacity/","text":"Home > bitburner > NodeStats > hashCapacity NodeStats.hashCapacity property Hash Capacity provided by this Node. Only applicable for Hacknet Servers Signature: hashCapacity?: number;","title":"Bitburner.nodestats.hashcapacity"},{"location":"bitburner.nodestats.hashcapacity/#nodestatshashcapacity-property","text":"Hash Capacity provided by this Node. Only applicable for Hacknet Servers Signature: hashCapacity?: number;","title":"NodeStats.hashCapacity property"},{"location":"bitburner.nodestats.level/","text":"Home > bitburner > NodeStats > level NodeStats.level property Node's level Signature: level: number;","title":"Bitburner.nodestats.level"},{"location":"bitburner.nodestats.level/#nodestatslevel-property","text":"Node's level Signature: level: number;","title":"NodeStats.level property"},{"location":"bitburner.nodestats/","text":"Home > bitburner > NodeStats NodeStats interface Object representing all the values related to a hacknet node. Signature: export interface NodeStats Properties Property Type Description cache? number (Optional) Cache level. Only applicable for Hacknet Servers cores number Node's number of cores hashCapacity? number (Optional) Hash Capacity provided by this Node. Only applicable for Hacknet Servers level number Node's level name string Node's name production number Node's production per second ram number Node's RAM (GB) ramUsed? number (Optional) Node's used RAM (GB) timeOnline number Number of seconds since Node has been purchased totalProduction number Total number of money Node has produced","title":"Bitburner.nodestats"},{"location":"bitburner.nodestats/#nodestats-interface","text":"Object representing all the values related to a hacknet node. Signature: export interface NodeStats","title":"NodeStats interface"},{"location":"bitburner.nodestats/#properties","text":"Property Type Description cache? number (Optional) Cache level. Only applicable for Hacknet Servers cores number Node's number of cores hashCapacity? number (Optional) Hash Capacity provided by this Node. Only applicable for Hacknet Servers level number Node's level name string Node's name production number Node's production per second ram number Node's RAM (GB) ramUsed? number (Optional) Node's used RAM (GB) timeOnline number Number of seconds since Node has been purchased totalProduction number Total number of money Node has produced","title":"Properties"},{"location":"bitburner.nodestats.name/","text":"Home > bitburner > NodeStats > name NodeStats.name property Node's name Signature: name: string;","title":"Bitburner.nodestats.name"},{"location":"bitburner.nodestats.name/#nodestatsname-property","text":"Node's name Signature: name: string;","title":"NodeStats.name property"},{"location":"bitburner.nodestats.production/","text":"Home > bitburner > NodeStats > production NodeStats.production property Node's production per second Signature: production: number;","title":"Bitburner.nodestats.production"},{"location":"bitburner.nodestats.production/#nodestatsproduction-property","text":"Node's production per second Signature: production: number;","title":"NodeStats.production property"},{"location":"bitburner.nodestats.ram/","text":"Home > bitburner > NodeStats > ram NodeStats.ram property Node's RAM (GB) Signature: ram: number;","title":"Bitburner.nodestats.ram"},{"location":"bitburner.nodestats.ram/#nodestatsram-property","text":"Node's RAM (GB) Signature: ram: number;","title":"NodeStats.ram property"},{"location":"bitburner.nodestats.ramused/","text":"Home > bitburner > NodeStats > ramUsed NodeStats.ramUsed property Node's used RAM (GB) Signature: ramUsed?: number;","title":"Bitburner.nodestats.ramused"},{"location":"bitburner.nodestats.ramused/#nodestatsramused-property","text":"Node's used RAM (GB) Signature: ramUsed?: number;","title":"NodeStats.ramUsed property"},{"location":"bitburner.nodestats.timeonline/","text":"Home > bitburner > NodeStats > timeOnline NodeStats.timeOnline property Number of seconds since Node has been purchased Signature: timeOnline: number;","title":"Bitburner.nodestats.timeonline"},{"location":"bitburner.nodestats.timeonline/#nodestatstimeonline-property","text":"Number of seconds since Node has been purchased Signature: timeOnline: number;","title":"NodeStats.timeOnline property"},{"location":"bitburner.nodestats.totalproduction/","text":"Home > bitburner > NodeStats > totalProduction NodeStats.totalProduction property Total number of money Node has produced Signature: totalProduction: number;","title":"Bitburner.nodestats.totalproduction"},{"location":"bitburner.nodestats.totalproduction/#nodestatstotalproduction-property","text":"Total number of money Node has produced Signature: totalProduction: number;","title":"NodeStats.totalProduction property"},{"location":"bitburner.ns.alert/","text":"Home > bitburner > NS > alert NS.alert() method Open up a message box. Signature: alert(msg: string): void; Parameters Parameter Type Description msg string Message to alert. Returns: void","title":"Bitburner.ns.alert"},{"location":"bitburner.ns.alert/#nsalert-method","text":"Open up a message box. Signature: alert(msg: string): void;","title":"NS.alert() method"},{"location":"bitburner.ns.alert/#parameters","text":"Parameter Type Description msg string Message to alert. Returns: void","title":"Parameters"},{"location":"bitburner.ns.args/","text":"Home > bitburner > NS > args NS.args property Arguments passed into the script. Signature: readonly args: (string | number | boolean)[]; Remarks RAM cost: 0 GB Arguments passed into a script can be accessed using a normal array using the [] operator (args[0], args[1], etc\u2026). It is also possible to get the number of arguments that was passed into a script using: 'args.length' WARNING: Do not try to modify the args array. This will break the game.","title":"Bitburner.ns.args"},{"location":"bitburner.ns.args/#nsargs-property","text":"Arguments passed into the script. Signature: readonly args: (string | number | boolean)[];","title":"NS.args property"},{"location":"bitburner.ns.args/#remarks","text":"RAM cost: 0 GB Arguments passed into a script can be accessed using a normal array using the [] operator (args[0], args[1], etc\u2026). It is also possible to get the number of arguments that was passed into a script using: 'args.length' WARNING: Do not try to modify the args array. This will break the game.","title":"Remarks"},{"location":"bitburner.ns.asleep/","text":"Home > bitburner > NS > asleep NS.asleep() method Suspends the script for n milliseconds. Doesn't block with concurrent calls. You should prefer 'sleep' over 'asleep' except when doing very complex UI work. Signature: asleep(millis: number): Promise<true>; Parameters Parameter Type Description millis number Number of milliseconds to sleep. Returns: Promise<true> Remarks RAM cost: 0 GB","title":"Bitburner.ns.asleep"},{"location":"bitburner.ns.asleep/#nsasleep-method","text":"Suspends the script for n milliseconds. Doesn't block with concurrent calls. You should prefer 'sleep' over 'asleep' except when doing very complex UI work. Signature: asleep(millis: number): Promise<true>;","title":"NS.asleep() method"},{"location":"bitburner.ns.asleep/#parameters","text":"Parameter Type Description millis number Number of milliseconds to sleep. Returns: Promise<true>","title":"Parameters"},{"location":"bitburner.ns.asleep/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.atexit/","text":"Home > bitburner > NS > atExit NS.atExit() method Add callback function when the script dies Signature: atExit(f: () => void): void; Parameters Parameter Type Description f () => void Returns: void Remarks RAM cost: 0 GB NS2 exclusive Add callback to be executed when the script dies.","title":"Bitburner.ns.atexit"},{"location":"bitburner.ns.atexit/#nsatexit-method","text":"Add callback function when the script dies Signature: atExit(f: () => void): void;","title":"NS.atExit() method"},{"location":"bitburner.ns.atexit/#parameters","text":"Parameter Type Description f () => void Returns: void","title":"Parameters"},{"location":"bitburner.ns.atexit/#remarks","text":"RAM cost: 0 GB NS2 exclusive Add callback to be executed when the script dies.","title":"Remarks"},{"location":"bitburner.ns.bladeburner/","text":"Home > bitburner > NS > bladeburner NS.bladeburner property Namespace for bladeburner functions. Signature: readonly bladeburner: Bladeburner; Remarks RAM cost: 0 GB","title":"Bitburner.ns.bladeburner"},{"location":"bitburner.ns.bladeburner/#nsbladeburner-property","text":"Namespace for bladeburner functions. Signature: readonly bladeburner: Bladeburner;","title":"NS.bladeburner property"},{"location":"bitburner.ns.bladeburner/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.brutessh/","text":"Home > bitburner > NS > brutessh NS.brutessh() method Runs BruteSSH.exe on a server. Signature: brutessh(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Runs the BruteSSH.exe program on the target server. BruteSSH.exe must exist on your home computer. Example 1 // NS1: brutessh(\"foodnstuff\"); Example 2 // NS2: ns.brutessh(\"foodnstuff\");","title":"Bitburner.ns.brutessh"},{"location":"bitburner.ns.brutessh/#nsbrutessh-method","text":"Runs BruteSSH.exe on a server. Signature: brutessh(host: string): void;","title":"NS.brutessh() method"},{"location":"bitburner.ns.brutessh/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.brutessh/#remarks","text":"RAM cost: 0.05 GB Runs the BruteSSH.exe program on the target server. BruteSSH.exe must exist on your home computer.","title":"Remarks"},{"location":"bitburner.ns.brutessh/#example-1","text":"// NS1: brutessh(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.brutessh/#example-2","text":"// NS2: ns.brutessh(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.clear/","text":"Home > bitburner > NS > clear NS.clear() method Clear data from a file. Signature: clear(handle: string): void; Parameters Parameter Type Description handle string Text file to clear. Returns: void Remarks RAM cost: 0 GB Delete all data from that text file.","title":"Bitburner.ns.clear"},{"location":"bitburner.ns.clear/#nsclear-method","text":"Clear data from a file. Signature: clear(handle: string): void;","title":"NS.clear() method"},{"location":"bitburner.ns.clear/#parameters","text":"Parameter Type Description handle string Text file to clear. Returns: void","title":"Parameters"},{"location":"bitburner.ns.clear/#remarks","text":"RAM cost: 0 GB Delete all data from that text file.","title":"Remarks"},{"location":"bitburner.ns.clearlog/","text":"Home > bitburner > NS > clearLog NS.clearLog() method Clears the script\u2019s logs. Signature: clearLog(): void; Returns: void Remarks RAM cost: 0 GB","title":"Bitburner.ns.clearlog"},{"location":"bitburner.ns.clearlog/#nsclearlog-method","text":"Clears the script\u2019s logs. Signature: clearLog(): void; Returns: void","title":"NS.clearLog() method"},{"location":"bitburner.ns.clearlog/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.clearport/","text":"Home > bitburner > NS > clearPort NS.clearPort() method Clear data from a port. Signature: clearPort(handle: number): void; Parameters Parameter Type Description handle number Port to clear. Returns: void Remarks RAM cost: 0 GB Delete all data from the underlying queue.","title":"Bitburner.ns.clearport"},{"location":"bitburner.ns.clearport/#nsclearport-method","text":"Clear data from a port. Signature: clearPort(handle: number): void;","title":"NS.clearPort() method"},{"location":"bitburner.ns.clearport/#parameters","text":"Parameter Type Description handle number Port to clear. Returns: void","title":"Parameters"},{"location":"bitburner.ns.clearport/#remarks","text":"RAM cost: 0 GB Delete all data from the underlying queue.","title":"Remarks"},{"location":"bitburner.ns.closetail/","text":"Home > bitburner > NS > closeTail NS.closeTail() method Close the tail window of a script. Signature: closeTail(pid?: number): void; Parameters Parameter Type Description pid number Optional. PID of the script having its tail closed. If omitted, the current script is used. Returns: void Remarks RAM cost: 0 GB Closes a script\u2019s logs. This is functionally the same pressing the \"Close\" button on the tail window. If the function is called with no arguments, it will close the current script\u2019s logs. Otherwise, the pid argument can be used to close the logs from another script.","title":"Bitburner.ns.closetail"},{"location":"bitburner.ns.closetail/#nsclosetail-method","text":"Close the tail window of a script. Signature: closeTail(pid?: number): void;","title":"NS.closeTail() method"},{"location":"bitburner.ns.closetail/#parameters","text":"Parameter Type Description pid number Optional. PID of the script having its tail closed. If omitted, the current script is used. Returns: void","title":"Parameters"},{"location":"bitburner.ns.closetail/#remarks","text":"RAM cost: 0 GB Closes a script\u2019s logs. This is functionally the same pressing the \"Close\" button on the tail window. If the function is called with no arguments, it will close the current script\u2019s logs. Otherwise, the pid argument can be used to close the logs from another script.","title":"Remarks"},{"location":"bitburner.ns.codingcontract/","text":"Home > bitburner > NS > codingcontract NS.codingcontract property Namespace for codingcontract functions. Signature: readonly codingcontract: CodingContract; Remarks RAM cost: 0 GB","title":"Bitburner.ns.codingcontract"},{"location":"bitburner.ns.codingcontract/#nscodingcontract-property","text":"Namespace for codingcontract functions. Signature: readonly codingcontract: CodingContract;","title":"NS.codingcontract property"},{"location":"bitburner.ns.codingcontract/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.corporation/","text":"Home > bitburner > NS > corporation NS.corporation property Namespace for corporation functions. RAM cost: 1022.4 GB Signature: readonly corporation: Corporation;","title":"Bitburner.ns.corporation"},{"location":"bitburner.ns.corporation/#nscorporation-property","text":"Namespace for corporation functions. RAM cost: 1022.4 GB Signature: readonly corporation: Corporation;","title":"NS.corporation property"},{"location":"bitburner.ns.deleteserver/","text":"Home > bitburner > NS > deleteServer NS.deleteServer() method Delete a purchased server. Signature: deleteServer(host: string): boolean; Parameters Parameter Type Description host string Host of the server to delete. Returns: boolean True if successful, and false otherwise. Remarks 2.25 GB Deletes one of your purchased servers, which is specified by its hostname. The hostname argument can be any data type, but it will be converted to a string. Whitespace is automatically removed from the string. This function will not delete a server that still has scripts running on it.","title":"Bitburner.ns.deleteserver"},{"location":"bitburner.ns.deleteserver/#nsdeleteserver-method","text":"Delete a purchased server. Signature: deleteServer(host: string): boolean;","title":"NS.deleteServer() method"},{"location":"bitburner.ns.deleteserver/#parameters","text":"Parameter Type Description host string Host of the server to delete. Returns: boolean True if successful, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.deleteserver/#remarks","text":"2.25 GB Deletes one of your purchased servers, which is specified by its hostname. The hostname argument can be any data type, but it will be converted to a string. Whitespace is automatically removed from the string. This function will not delete a server that still has scripts running on it.","title":"Remarks"},{"location":"bitburner.ns.disablelog/","text":"Home > bitburner > NS > disableLog NS.disableLog() method Disables logging for the given function. Signature: disableLog(fn: string): void; Parameters Parameter Type Description fn string Name of function for which to disable logging. Returns: void Remarks RAM cost: 0 GB Logging can be disabled for all functions by passing ALL as the argument.","title":"Bitburner.ns.disablelog"},{"location":"bitburner.ns.disablelog/#nsdisablelog-method","text":"Disables logging for the given function. Signature: disableLog(fn: string): void;","title":"NS.disableLog() method"},{"location":"bitburner.ns.disablelog/#parameters","text":"Parameter Type Description fn string Name of function for which to disable logging. Returns: void","title":"Parameters"},{"location":"bitburner.ns.disablelog/#remarks","text":"RAM cost: 0 GB Logging can be disabled for all functions by passing ALL as the argument.","title":"Remarks"},{"location":"bitburner.ns.enablelog/","text":"Home > bitburner > NS > enableLog NS.enableLog() method Enable logging for a certain function. Signature: enableLog(fn: string): void; Parameters Parameter Type Description fn string Name of function for which to enable logging. Returns: void Remarks RAM cost: 0 GB Re-enables logging for the given function. If ALL is passed into this function as an argument, then it will revert the effects of disableLog( ALL ).","title":"Bitburner.ns.enablelog"},{"location":"bitburner.ns.enablelog/#nsenablelog-method","text":"Enable logging for a certain function. Signature: enableLog(fn: string): void;","title":"NS.enableLog() method"},{"location":"bitburner.ns.enablelog/#parameters","text":"Parameter Type Description fn string Name of function for which to enable logging. Returns: void","title":"Parameters"},{"location":"bitburner.ns.enablelog/#remarks","text":"RAM cost: 0 GB Re-enables logging for the given function. If ALL is passed into this function as an argument, then it will revert the effects of disableLog( ALL ).","title":"Remarks"},{"location":"bitburner.ns.enums/","text":"Home > bitburner > NS > enums NS.enums property Signature: enums: NSEnums;","title":"Bitburner.ns.enums"},{"location":"bitburner.ns.enums/#nsenums-property","text":"Signature: enums: NSEnums;","title":"NS.enums property"},{"location":"bitburner.ns.exec/","text":"Home > bitburner > NS > exec NS.exec() method Start another script on any server. Signature: exec(script: string, host: string, numThreads?: number, ...args: (string | number | boolean)[]): number; Parameters Parameter Type Description script string Filename of script to execute. host string Hostname of the target server on which to execute the script. numThreads number Optional thread count for new script. Set to 1 by default. Will be rounded down to the nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the third argument numThreads must be filled in with a value. Returns: number Returns the PID of a successfully started script, and 0 otherwise. Remarks RAM cost: 1.3 GB Run a script as a separate process on a specified server. This is similar to the function run except that it can be used to run a script on any server, instead of just the current server. If the script was successfully started, then this function returns the PID of that script. Otherwise, it returns 0. PID stands for Process ID. The PID is a unique identifier for each script. The PID will always be a positive integer. Running this function with a numThreads argument of 0 or less will cause a runtime error. Example 1 // NS1: // The simplest way to use the exec command is to call it with just the script name // and the target server. The following example will try to run generic-hack.script // on the foodnstuff server. exec(\"generic-hack.script\", \"foodnstuff\"); // The following example will try to run the script generic-hack.script on the // joesguns server with 10 threads. exec(\"generic-hack.script\", \"joesguns\", 10); // This last example will try to run the script foo.script on the foodnstuff server // with 5 threads. It will also pass the number 1 and the string \u201ctest\u201d in as // arguments to the script. exec(\"foo.script\", \"foodnstuff\", 5, 1, \"test\"); Example 2 // NS2: // The simplest way to use the exec command is to call it with just the script name // and the target server. The following example will try to run generic-hack.script // on the foodnstuff server. ns.exec(\"generic-hack.script\", \"foodnstuff\"); // The following example will try to run the script generic-hack.script on the // joesguns server with 10 threads. ns.exec(\"generic-hack.script\", \"joesguns\", 10); // This last example will try to run the script foo.script on the foodnstuff server // with 5 threads. It will also pass the number 1 and the string \u201ctest\u201d in as // arguments to the script. ns.exec(\"foo.script\", \"foodnstuff\", 5, 1, \"test\");","title":"Bitburner.ns.exec"},{"location":"bitburner.ns.exec/#nsexec-method","text":"Start another script on any server. Signature: exec(script: string, host: string, numThreads?: number, ...args: (string | number | boolean)[]): number;","title":"NS.exec() method"},{"location":"bitburner.ns.exec/#parameters","text":"Parameter Type Description script string Filename of script to execute. host string Hostname of the target server on which to execute the script. numThreads number Optional thread count for new script. Set to 1 by default. Will be rounded down to the nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the third argument numThreads must be filled in with a value. Returns: number Returns the PID of a successfully started script, and 0 otherwise.","title":"Parameters"},{"location":"bitburner.ns.exec/#remarks","text":"RAM cost: 1.3 GB Run a script as a separate process on a specified server. This is similar to the function run except that it can be used to run a script on any server, instead of just the current server. If the script was successfully started, then this function returns the PID of that script. Otherwise, it returns 0. PID stands for Process ID. The PID is a unique identifier for each script. The PID will always be a positive integer. Running this function with a numThreads argument of 0 or less will cause a runtime error.","title":"Remarks"},{"location":"bitburner.ns.exec/#example-1","text":"// NS1: // The simplest way to use the exec command is to call it with just the script name // and the target server. The following example will try to run generic-hack.script // on the foodnstuff server. exec(\"generic-hack.script\", \"foodnstuff\"); // The following example will try to run the script generic-hack.script on the // joesguns server with 10 threads. exec(\"generic-hack.script\", \"joesguns\", 10); // This last example will try to run the script foo.script on the foodnstuff server // with 5 threads. It will also pass the number 1 and the string \u201ctest\u201d in as // arguments to the script. exec(\"foo.script\", \"foodnstuff\", 5, 1, \"test\");","title":"Example 1"},{"location":"bitburner.ns.exec/#example-2","text":"// NS2: // The simplest way to use the exec command is to call it with just the script name // and the target server. The following example will try to run generic-hack.script // on the foodnstuff server. ns.exec(\"generic-hack.script\", \"foodnstuff\"); // The following example will try to run the script generic-hack.script on the // joesguns server with 10 threads. ns.exec(\"generic-hack.script\", \"joesguns\", 10); // This last example will try to run the script foo.script on the foodnstuff server // with 5 threads. It will also pass the number 1 and the string \u201ctest\u201d in as // arguments to the script. ns.exec(\"foo.script\", \"foodnstuff\", 5, 1, \"test\");","title":"Example 2"},{"location":"bitburner.ns.exit/","text":"Home > bitburner > NS > exit NS.exit() method Terminates the current script immediately. Signature: exit(): never; Returns: never Remarks RAM cost: 0 GB","title":"Bitburner.ns.exit"},{"location":"bitburner.ns.exit/#nsexit-method","text":"Terminates the current script immediately. Signature: exit(): never; Returns: never","title":"NS.exit() method"},{"location":"bitburner.ns.exit/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.fileexists/","text":"Home > bitburner > NS > fileExists NS.fileExists() method Check if a file exists. Signature: fileExists(filename: string, host?: string): boolean; Parameters Parameter Type Description filename string Filename of file to check. host string Host of target server. This is optional. If it is not specified then the function will use the current server as the target server. Returns: boolean True if specified file exists, and false otherwise. Remarks RAM cost: 0.1 GB Returns a boolean indicating whether the specified file exists on the target server. The filename for scripts is case-sensitive, but for other types of files it is not. For example, fileExists(\u201cbrutessh.exe\u201d) will work fine, even though the actual program is named 'BruteSSH.exe'. If the hostname/ip argument is omitted, then the function will search through the current server (the server running the script that calls this function) for the file. Example 1 // NS1: //The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise. fileExists(\"foo.script\", \"foodnstuff\"); //The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise. fileExists(\"ftpcrack.exe\"); * Example 2 // NS2: // The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise. ns.fileExists(\"foo.script\", \"foodnstuff\"); // The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise. ns.fileExists(\"ftpcrack.exe\");","title":"Bitburner.ns.fileexists"},{"location":"bitburner.ns.fileexists/#nsfileexists-method","text":"Check if a file exists. Signature: fileExists(filename: string, host?: string): boolean;","title":"NS.fileExists() method"},{"location":"bitburner.ns.fileexists/#parameters","text":"Parameter Type Description filename string Filename of file to check. host string Host of target server. This is optional. If it is not specified then the function will use the current server as the target server. Returns: boolean True if specified file exists, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.fileexists/#remarks","text":"RAM cost: 0.1 GB Returns a boolean indicating whether the specified file exists on the target server. The filename for scripts is case-sensitive, but for other types of files it is not. For example, fileExists(\u201cbrutessh.exe\u201d) will work fine, even though the actual program is named 'BruteSSH.exe'. If the hostname/ip argument is omitted, then the function will search through the current server (the server running the script that calls this function) for the file.","title":"Remarks"},{"location":"bitburner.ns.fileexists/#example-1","text":"// NS1: //The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise. fileExists(\"foo.script\", \"foodnstuff\"); //The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise. fileExists(\"ftpcrack.exe\"); *","title":"Example 1"},{"location":"bitburner.ns.fileexists/#example-2","text":"// NS2: // The function call will return true if the script named foo.script exists on the foodnstuff server, and false otherwise. ns.fileExists(\"foo.script\", \"foodnstuff\"); // The function call will return true if the current server contains the FTPCrack.exe program, and false otherwise. ns.fileExists(\"ftpcrack.exe\");","title":"Example 2"},{"location":"bitburner.ns.flags/","text":"Home > bitburner > NS > flags NS.flags() method Parse command line flags. Signature: flags(schema: [string, string | number | boolean | string[]][]): { [key: string]: ScriptArg | string[] }; Parameters Parameter Type Description schema [string, string | number | boolean | string[]][] Returns: { [key: string]: ScriptArg | string[] } Remarks RAM cost: 0 GB Allows unix like flag parsing. Example // example.script var data = flags([ ['delay', 0], // a default number means this flag is a number ['server', 'foodnstuff'], // a default string means this flag is a string ['exclude', []], // a default array means this flag is a default array of string ['help', false], // a default boolean means this flag is a boolean ]); tprint(data); // example.js export async function main(ns) { const data = ns.flags([ ['delay', 0], // a default number means this flag is a number ['server', 'foodnstuff'], // a default string means this flag is a string ['exclude', []], // a default array means this flag is a default array of string ['help', false], // a default boolean means this flag is a boolean ]); ns.tprint(data); } // [home ~/]> run example.script // {\"_\":[],\"delay\":0,\"server\":\"foodnstuff\",\"exclude\":[],\"help\":false} // [home ~/]> run example.script --delay 3000 // {\"_\":[],\"server\":\"foodnstuff\",\"exclude\":[],\"help\":false,\"delay\":3000} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi // {\"_\":[],\"exclude\":[],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\"} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world // {\"_\":[\"hello\",\"world\"],\"exclude\":[],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\"} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world --exclude a --exclude b // {\"_\":[\"hello\",\"world\"],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\",\"exclude\":[\"a\",\"b\"]} // [home ~/]> run example.script --help // {\"_\":[],\"delay\":0,\"server\":\"foodnstuff\",\"exclude\":[],\"help\":true}","title":"Bitburner.ns.flags"},{"location":"bitburner.ns.flags/#nsflags-method","text":"Parse command line flags. Signature: flags(schema: [string, string | number | boolean | string[]][]): { [key: string]: ScriptArg | string[] };","title":"NS.flags() method"},{"location":"bitburner.ns.flags/#parameters","text":"Parameter Type Description schema [string, string | number | boolean | string[]][] Returns: { [key: string]: ScriptArg | string[] }","title":"Parameters"},{"location":"bitburner.ns.flags/#remarks","text":"RAM cost: 0 GB Allows unix like flag parsing.","title":"Remarks"},{"location":"bitburner.ns.flags/#example","text":"// example.script var data = flags([ ['delay', 0], // a default number means this flag is a number ['server', 'foodnstuff'], // a default string means this flag is a string ['exclude', []], // a default array means this flag is a default array of string ['help', false], // a default boolean means this flag is a boolean ]); tprint(data); // example.js export async function main(ns) { const data = ns.flags([ ['delay', 0], // a default number means this flag is a number ['server', 'foodnstuff'], // a default string means this flag is a string ['exclude', []], // a default array means this flag is a default array of string ['help', false], // a default boolean means this flag is a boolean ]); ns.tprint(data); } // [home ~/]> run example.script // {\"_\":[],\"delay\":0,\"server\":\"foodnstuff\",\"exclude\":[],\"help\":false} // [home ~/]> run example.script --delay 3000 // {\"_\":[],\"server\":\"foodnstuff\",\"exclude\":[],\"help\":false,\"delay\":3000} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi // {\"_\":[],\"exclude\":[],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\"} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world // {\"_\":[\"hello\",\"world\"],\"exclude\":[],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\"} // [home ~/]> run example.script --delay 3000 --server harakiri-sushi hello world --exclude a --exclude b // {\"_\":[\"hello\",\"world\"],\"help\":false,\"delay\":3000,\"server\":\"harakiri-sushi\",\"exclude\":[\"a\",\"b\"]} // [home ~/]> run example.script --help // {\"_\":[],\"delay\":0,\"server\":\"foodnstuff\",\"exclude\":[],\"help\":true}","title":"Example"},{"location":"bitburner.ns.formulas/","text":"Home > bitburner > NS > formulas NS.formulas property Namespace for formulas functions. Signature: readonly formulas: Formulas; Remarks RAM cost: 0 GB","title":"Bitburner.ns.formulas"},{"location":"bitburner.ns.formulas/#nsformulas-property","text":"Namespace for formulas functions. Signature: readonly formulas: Formulas;","title":"NS.formulas property"},{"location":"bitburner.ns.formulas/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.ftpcrack/","text":"Home > bitburner > NS > ftpcrack NS.ftpcrack() method Runs FTPCrack.exe on a server. Signature: ftpcrack(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Runs the FTPCrack.exe program on the target server. FTPCrack.exe must exist on your home computer. Example 1 // NS1: ftpcrack(\"foodnstuff\"); Example 2 // NS2: ns.ftpcrack(\"foodnstuff\");","title":"Bitburner.ns.ftpcrack"},{"location":"bitburner.ns.ftpcrack/#nsftpcrack-method","text":"Runs FTPCrack.exe on a server. Signature: ftpcrack(host: string): void;","title":"NS.ftpcrack() method"},{"location":"bitburner.ns.ftpcrack/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.ftpcrack/#remarks","text":"RAM cost: 0.05 GB Runs the FTPCrack.exe program on the target server. FTPCrack.exe must exist on your home computer.","title":"Remarks"},{"location":"bitburner.ns.ftpcrack/#example-1","text":"// NS1: ftpcrack(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.ftpcrack/#example-2","text":"// NS2: ns.ftpcrack(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.gang/","text":"Home > bitburner > NS > gang NS.gang property Namespace for gang functions. Signature: readonly gang: Gang; Remarks RAM cost: 0 GB","title":"Bitburner.ns.gang"},{"location":"bitburner.ns.gang/#nsgang-property","text":"Namespace for gang functions. Signature: readonly gang: Gang;","title":"NS.gang property"},{"location":"bitburner.ns.gang/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.getbitnodemultipliers/","text":"Home > bitburner > NS > getBitNodeMultipliers NS.getBitNodeMultipliers() method Get the current Bitnode multipliers. Signature: getBitNodeMultipliers(n?: number, lvl?: number): BitNodeMultipliers; Parameters Parameter Type Description n number lvl number Returns: BitNodeMultipliers Object containing the current BitNode multipliers. Remarks RAM cost: 4 GB Returns an object containing the current (or supplied) BitNode multipliers. This function requires you to be in Bitnode 5 or have Source-File 5 in order to run. The multipliers are returned in decimal forms (e.g. 1.5 instead of 150%). The multipliers represent the difference between the current BitNode and the original BitNode (BitNode-1). For example, if the CrimeMoney multiplier has a value of 0.1, then that means that committing crimes in the current BitNode will only give 10% of the money you would have received in BitNode-1. Example 1 // NS1: var mults = getBitNodeMultipliers(); print(mults.ServerMaxMoney); print(mults.HackExpGain); Example 2 // NS2: const {ServerMaxMoney, HackExpGain} = ns.getBitNodeMultipliers(); print(ServerMaxMoney); print(HackExpGain);","title":"Bitburner.ns.getbitnodemultipliers"},{"location":"bitburner.ns.getbitnodemultipliers/#nsgetbitnodemultipliers-method","text":"Get the current Bitnode multipliers. Signature: getBitNodeMultipliers(n?: number, lvl?: number): BitNodeMultipliers;","title":"NS.getBitNodeMultipliers() method"},{"location":"bitburner.ns.getbitnodemultipliers/#parameters","text":"Parameter Type Description n number lvl number Returns: BitNodeMultipliers Object containing the current BitNode multipliers.","title":"Parameters"},{"location":"bitburner.ns.getbitnodemultipliers/#remarks","text":"RAM cost: 4 GB Returns an object containing the current (or supplied) BitNode multipliers. This function requires you to be in Bitnode 5 or have Source-File 5 in order to run. The multipliers are returned in decimal forms (e.g. 1.5 instead of 150%). The multipliers represent the difference between the current BitNode and the original BitNode (BitNode-1). For example, if the CrimeMoney multiplier has a value of 0.1, then that means that committing crimes in the current BitNode will only give 10% of the money you would have received in BitNode-1.","title":"Remarks"},{"location":"bitburner.ns.getbitnodemultipliers/#example-1","text":"// NS1: var mults = getBitNodeMultipliers(); print(mults.ServerMaxMoney); print(mults.HackExpGain);","title":"Example 1"},{"location":"bitburner.ns.getbitnodemultipliers/#example-2","text":"// NS2: const {ServerMaxMoney, HackExpGain} = ns.getBitNodeMultipliers(); print(ServerMaxMoney); print(HackExpGain);","title":"Example 2"},{"location":"bitburner.ns.getfavortodonate/","text":"Home > bitburner > NS > getFavorToDonate NS.getFavorToDonate() method Returns the amount of Faction favor required to be able to donate to a faction. Signature: getFavorToDonate(): number; Returns: number Amount of Faction favor required to be able to donate to a faction. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.getfavortodonate"},{"location":"bitburner.ns.getfavortodonate/#nsgetfavortodonate-method","text":"Returns the amount of Faction favor required to be able to donate to a faction. Signature: getFavorToDonate(): number; Returns: number Amount of Faction favor required to be able to donate to a faction.","title":"NS.getFavorToDonate() method"},{"location":"bitburner.ns.getfavortodonate/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getgrowtime/","text":"Home > bitburner > NS > getGrowTime NS.getGrowTime() method Get the execution time of a grow() call. Signature: getGrowTime(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the grow Netscript function. Remarks RAM cost: 0.05 GB Returns the amount of time in milliseconds it takes to execute the grow Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Bitburner.ns.getgrowtime"},{"location":"bitburner.ns.getgrowtime/#nsgetgrowtime-method","text":"Get the execution time of a grow() call. Signature: getGrowTime(host: string): number;","title":"NS.getGrowTime() method"},{"location":"bitburner.ns.getgrowtime/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the grow Netscript function.","title":"Parameters"},{"location":"bitburner.ns.getgrowtime/#remarks","text":"RAM cost: 0.05 GB Returns the amount of time in milliseconds it takes to execute the grow Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Remarks"},{"location":"bitburner.ns.gethackinglevel/","text":"Home > bitburner > NS > getHackingLevel NS.getHackingLevel() method Returns the player\u2019s current hacking level. Signature: getHackingLevel(): number; Returns: number Player\u2019s current hacking level Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.gethackinglevel"},{"location":"bitburner.ns.gethackinglevel/#nsgethackinglevel-method","text":"Returns the player\u2019s current hacking level. Signature: getHackingLevel(): number; Returns: number Player\u2019s current hacking level","title":"NS.getHackingLevel() method"},{"location":"bitburner.ns.gethackinglevel/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.gethackingmultipliers/","text":"Home > bitburner > NS > getHackingMultipliers NS.getHackingMultipliers() method Get hacking related multipliers. Signature: getHackingMultipliers(): HackingMultipliers; Returns: HackingMultipliers Object containing the Player\u2019s hacking related multipliers. Remarks RAM cost: 4 GB Returns an object containing the Player\u2019s hacking related multipliers. These multipliers are returned in fractional forms, not percentages (e.g. 1.5 instead of 150%). Example 1 // NS1: // Example of how this can be used: var mults = getHackingMultipliers(); print(mults.chance); print(mults.growth); Example 2 // NS2: // Example of how this can be used: const {chance, growth} = ns.getHackingMultipliers(); print(chance); print(growth);","title":"Bitburner.ns.gethackingmultipliers"},{"location":"bitburner.ns.gethackingmultipliers/#nsgethackingmultipliers-method","text":"Get hacking related multipliers. Signature: getHackingMultipliers(): HackingMultipliers; Returns: HackingMultipliers Object containing the Player\u2019s hacking related multipliers.","title":"NS.getHackingMultipliers() method"},{"location":"bitburner.ns.gethackingmultipliers/#remarks","text":"RAM cost: 4 GB Returns an object containing the Player\u2019s hacking related multipliers. These multipliers are returned in fractional forms, not percentages (e.g. 1.5 instead of 150%).","title":"Remarks"},{"location":"bitburner.ns.gethackingmultipliers/#example-1","text":"// NS1: // Example of how this can be used: var mults = getHackingMultipliers(); print(mults.chance); print(mults.growth);","title":"Example 1"},{"location":"bitburner.ns.gethackingmultipliers/#example-2","text":"// NS2: // Example of how this can be used: const {chance, growth} = ns.getHackingMultipliers(); print(chance); print(growth);","title":"Example 2"},{"location":"bitburner.ns.gethacknetmultipliers/","text":"Home > bitburner > NS > getHacknetMultipliers NS.getHacknetMultipliers() method Get hacknet related multipliers. Signature: getHacknetMultipliers(): HacknetMultipliers; Returns: HacknetMultipliers Object containing the Player\u2019s hacknet related multipliers. Remarks RAM cost: 4 GB Returns an object containing the Player\u2019s hacknet related multipliers. These multipliers are returned in fractional forms, not percentages (e.g. 1.5 instead of 150%). Example 1 // NS1: // Example of how this can be used: var mults = getHacknetMultipliers(); print(mults.production); print(mults.purchaseCost); Example 2 // NS2: // Example of how this can be used: const {production, purchaseCost} = ns.getHacknetMultipliers(); print(production); print(purchaseCost);","title":"Bitburner.ns.gethacknetmultipliers"},{"location":"bitburner.ns.gethacknetmultipliers/#nsgethacknetmultipliers-method","text":"Get hacknet related multipliers. Signature: getHacknetMultipliers(): HacknetMultipliers; Returns: HacknetMultipliers Object containing the Player\u2019s hacknet related multipliers.","title":"NS.getHacknetMultipliers() method"},{"location":"bitburner.ns.gethacknetmultipliers/#remarks","text":"RAM cost: 4 GB Returns an object containing the Player\u2019s hacknet related multipliers. These multipliers are returned in fractional forms, not percentages (e.g. 1.5 instead of 150%).","title":"Remarks"},{"location":"bitburner.ns.gethacknetmultipliers/#example-1","text":"// NS1: // Example of how this can be used: var mults = getHacknetMultipliers(); print(mults.production); print(mults.purchaseCost);","title":"Example 1"},{"location":"bitburner.ns.gethacknetmultipliers/#example-2","text":"// NS2: // Example of how this can be used: const {production, purchaseCost} = ns.getHacknetMultipliers(); print(production); print(purchaseCost);","title":"Example 2"},{"location":"bitburner.ns.gethacktime/","text":"Home > bitburner > NS > getHackTime NS.getHackTime() method Get the execution time of a hack() call. Signature: getHackTime(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the hack Netscript function. Remarks RAM cost: 0.05 GB When hack completes an amount of money is stolen depending on the player's skills. Returns the amount of time in milliseconds it takes to execute the hack Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Bitburner.ns.gethacktime"},{"location":"bitburner.ns.gethacktime/#nsgethacktime-method","text":"Get the execution time of a hack() call. Signature: getHackTime(host: string): number;","title":"NS.getHackTime() method"},{"location":"bitburner.ns.gethacktime/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the hack Netscript function.","title":"Parameters"},{"location":"bitburner.ns.gethacktime/#remarks","text":"RAM cost: 0.05 GB When hack completes an amount of money is stolen depending on the player's skills. Returns the amount of time in milliseconds it takes to execute the hack Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Remarks"},{"location":"bitburner.ns.gethostname/","text":"Home > bitburner > NS > getHostname NS.getHostname() method Returns a string with the hostname of the server that the script is running on. Signature: getHostname(): string; Returns: string Hostname of the server that the script is on. Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.gethostname"},{"location":"bitburner.ns.gethostname/#nsgethostname-method","text":"Returns a string with the hostname of the server that the script is running on. Signature: getHostname(): string; Returns: string Hostname of the server that the script is on.","title":"NS.getHostname() method"},{"location":"bitburner.ns.gethostname/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.getmoneysources/","text":"Home > bitburner > NS > getMoneySources NS.getMoneySources() method Get information about the sources of income for this run. Signature: getMoneySources(): MoneySources; Returns: MoneySources Money sources Remarks RAM cost: 1.0 GB Returns an object with information on the income sources for this run","title":"Bitburner.ns.getmoneysources"},{"location":"bitburner.ns.getmoneysources/#nsgetmoneysources-method","text":"Get information about the sources of income for this run. Signature: getMoneySources(): MoneySources; Returns: MoneySources Money sources","title":"NS.getMoneySources() method"},{"location":"bitburner.ns.getmoneysources/#remarks","text":"RAM cost: 1.0 GB Returns an object with information on the income sources for this run","title":"Remarks"},{"location":"bitburner.ns.getplayer/","text":"Home > bitburner > NS > getPlayer NS.getPlayer() method Get information about the player. Signature: getPlayer(): Player; Returns: Player Player info Remarks RAM cost: 0.5 GB Returns an object with information on the current player.","title":"Bitburner.ns.getplayer"},{"location":"bitburner.ns.getplayer/#nsgetplayer-method","text":"Get information about the player. Signature: getPlayer(): Player; Returns: Player Player info","title":"NS.getPlayer() method"},{"location":"bitburner.ns.getplayer/#remarks","text":"RAM cost: 0.5 GB Returns an object with information on the current player.","title":"Remarks"},{"location":"bitburner.ns.getporthandle/","text":"Home > bitburner > NS > getPortHandle NS.getPortHandle() method Get all data on a port. Signature: getPortHandle(port: number): NetscriptPort; Parameters Parameter Type Description port number Port number. Must be an integer between 1 and 20. Returns: NetscriptPort Remarks RAM cost: 0 GB Get a handle to a Netscript Port. WARNING: Port Handles only work in NetscriptJS (Netscript 2.0). They will not work in Netscript 1.0.","title":"Bitburner.ns.getporthandle"},{"location":"bitburner.ns.getporthandle/#nsgetporthandle-method","text":"Get all data on a port. Signature: getPortHandle(port: number): NetscriptPort;","title":"NS.getPortHandle() method"},{"location":"bitburner.ns.getporthandle/#parameters","text":"Parameter Type Description port number Port number. Must be an integer between 1 and 20. Returns: NetscriptPort","title":"Parameters"},{"location":"bitburner.ns.getporthandle/#remarks","text":"RAM cost: 0 GB Get a handle to a Netscript Port. WARNING: Port Handles only work in NetscriptJS (Netscript 2.0). They will not work in Netscript 1.0.","title":"Remarks"},{"location":"bitburner.ns.getpurchasedservercost/","text":"Home > bitburner > NS > getPurchasedServerCost NS.getPurchasedServerCost() method Get cost of purchasing a server. Signature: getPurchasedServerCost(ram: number): number; Parameters Parameter Type Description ram number Amount of RAM of a potential purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: number The cost to purchase a server with the specified amount of ram. Remarks RAM cost: 0.25 GB Returns the cost to purchase a server with the specified amount of ram. Example 1 // NS1: for (i = 1; i <= 20; i++) { tprint(i + \" -- \" + getPurchasedServerCost(Math.pow(2, i))); } Example 2 // NS2: for (i = 1; i <= 20; i++) { ns.tprint(i + \" -- \" + ns.getPurchasedServerCost(Math.pow(2, i))); }","title":"Bitburner.ns.getpurchasedservercost"},{"location":"bitburner.ns.getpurchasedservercost/#nsgetpurchasedservercost-method","text":"Get cost of purchasing a server. Signature: getPurchasedServerCost(ram: number): number;","title":"NS.getPurchasedServerCost() method"},{"location":"bitburner.ns.getpurchasedservercost/#parameters","text":"Parameter Type Description ram number Amount of RAM of a potential purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: number The cost to purchase a server with the specified amount of ram.","title":"Parameters"},{"location":"bitburner.ns.getpurchasedservercost/#remarks","text":"RAM cost: 0.25 GB Returns the cost to purchase a server with the specified amount of ram.","title":"Remarks"},{"location":"bitburner.ns.getpurchasedservercost/#example-1","text":"// NS1: for (i = 1; i <= 20; i++) { tprint(i + \" -- \" + getPurchasedServerCost(Math.pow(2, i))); }","title":"Example 1"},{"location":"bitburner.ns.getpurchasedservercost/#example-2","text":"// NS2: for (i = 1; i <= 20; i++) { ns.tprint(i + \" -- \" + ns.getPurchasedServerCost(Math.pow(2, i))); }","title":"Example 2"},{"location":"bitburner.ns.getpurchasedserverlimit/","text":"Home > bitburner > NS > getPurchasedServerLimit NS.getPurchasedServerLimit() method Returns the maximum number of servers you can purchase. Signature: getPurchasedServerLimit(): number; Returns: number Returns the maximum number of servers you can purchase. Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.getpurchasedserverlimit"},{"location":"bitburner.ns.getpurchasedserverlimit/#nsgetpurchasedserverlimit-method","text":"Returns the maximum number of servers you can purchase. Signature: getPurchasedServerLimit(): number; Returns: number Returns the maximum number of servers you can purchase.","title":"NS.getPurchasedServerLimit() method"},{"location":"bitburner.ns.getpurchasedserverlimit/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.getpurchasedservermaxram/","text":"Home > bitburner > NS > getPurchasedServerMaxRam NS.getPurchasedServerMaxRam() method Returns the maximum RAM that a purchased server can have. Signature: getPurchasedServerMaxRam(): number; Returns: number Returns the maximum RAM (in GB) that a purchased server can have. Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.getpurchasedservermaxram"},{"location":"bitburner.ns.getpurchasedservermaxram/#nsgetpurchasedservermaxram-method","text":"Returns the maximum RAM that a purchased server can have. Signature: getPurchasedServerMaxRam(): number; Returns: number Returns the maximum RAM (in GB) that a purchased server can have.","title":"NS.getPurchasedServerMaxRam() method"},{"location":"bitburner.ns.getpurchasedservermaxram/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.getpurchasedservers/","text":"Home > bitburner > NS > getPurchasedServers NS.getPurchasedServers() method Returns an array with the hostnames of all of the servers you have purchased. Signature: getPurchasedServers(): string[]; Returns: string[] Returns an array with the hostnames of all of the servers you have purchased. Remarks 2.25 GB","title":"Bitburner.ns.getpurchasedservers"},{"location":"bitburner.ns.getpurchasedservers/#nsgetpurchasedservers-method","text":"Returns an array with the hostnames of all of the servers you have purchased. Signature: getPurchasedServers(): string[]; Returns: string[] Returns an array with the hostnames of all of the servers you have purchased.","title":"NS.getPurchasedServers() method"},{"location":"bitburner.ns.getpurchasedservers/#remarks","text":"2.25 GB","title":"Remarks"},{"location":"bitburner.ns.getpurchasedserverupgradecost/","text":"Home > bitburner > NS > getPurchasedServerUpgradeCost NS.getPurchasedServerUpgradeCost() method Get cost of upgrading a purchased server to the given ram. Signature: getPurchasedServerUpgradeCost(hostname: string, ram: number): number; Parameters Parameter Type Description hostname string Hostname of the server to upgrade. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: number The price to upgrade. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.getpurchasedserverupgradecost"},{"location":"bitburner.ns.getpurchasedserverupgradecost/#nsgetpurchasedserverupgradecost-method","text":"Get cost of upgrading a purchased server to the given ram. Signature: getPurchasedServerUpgradeCost(hostname: string, ram: number): number;","title":"NS.getPurchasedServerUpgradeCost() method"},{"location":"bitburner.ns.getpurchasedserverupgradecost/#parameters","text":"Parameter Type Description hostname string Hostname of the server to upgrade. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: number The price to upgrade.","title":"Parameters"},{"location":"bitburner.ns.getpurchasedserverupgradecost/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getrecentscripts/","text":"Home > bitburner > NS > getRecentScripts NS.getRecentScripts() method Get an array of recently killed scripts across all servers. Signature: getRecentScripts(): RecentScript[]; Returns: RecentScript [] Array with information about previously killed scripts. Remarks RAM cost: 0.2 GB The most recently killed script is the first element in the array. Note that there is a maximum number of recently killed scripts which are tracked. This is configurable in the game's options as Recently killed scripts size . Example let recentScripts = ns.getRecentScripts(); let mostRecent = recentScripts.shift() if (mostRecent) ns.tprint(mostRecent.logs.join('\\n'))","title":"Bitburner.ns.getrecentscripts"},{"location":"bitburner.ns.getrecentscripts/#nsgetrecentscripts-method","text":"Get an array of recently killed scripts across all servers. Signature: getRecentScripts(): RecentScript[]; Returns: RecentScript [] Array with information about previously killed scripts.","title":"NS.getRecentScripts() method"},{"location":"bitburner.ns.getrecentscripts/#remarks","text":"RAM cost: 0.2 GB The most recently killed script is the first element in the array. Note that there is a maximum number of recently killed scripts which are tracked. This is configurable in the game's options as Recently killed scripts size .","title":"Remarks"},{"location":"bitburner.ns.getrecentscripts/#example","text":"let recentScripts = ns.getRecentScripts(); let mostRecent = recentScripts.shift() if (mostRecent) ns.tprint(mostRecent.logs.join('\\n'))","title":"Example"},{"location":"bitburner.ns.getrunningscript/","text":"Home > bitburner > NS > getRunningScript NS.getRunningScript() method Get general info about a running script. Signature: getRunningScript( filename?: FilenameOrPID, hostname?: string, ...args: (string | number | boolean)[] ): RunningScript | null; Parameters Parameter Type Description filename FilenameOrPID Optional. Filename or PID of the script. hostname string Optional. Name of host server the script is running on. args (string | number | boolean)[] Arguments to identify the script Returns: RunningScript | null The info about the running script if found, and null otherwise. Remarks RAM cost: 0.3 GB Running with no args returns current script. If you use a PID as the first parameter, the hostname and args parameters are unnecessary.","title":"Bitburner.ns.getrunningscript"},{"location":"bitburner.ns.getrunningscript/#nsgetrunningscript-method","text":"Get general info about a running script. Signature: getRunningScript( filename?: FilenameOrPID, hostname?: string, ...args: (string | number | boolean)[] ): RunningScript | null;","title":"NS.getRunningScript() method"},{"location":"bitburner.ns.getrunningscript/#parameters","text":"Parameter Type Description filename FilenameOrPID Optional. Filename or PID of the script. hostname string Optional. Name of host server the script is running on. args (string | number | boolean)[] Arguments to identify the script Returns: RunningScript | null The info about the running script if found, and null otherwise.","title":"Parameters"},{"location":"bitburner.ns.getrunningscript/#remarks","text":"RAM cost: 0.3 GB Running with no args returns current script. If you use a PID as the first parameter, the hostname and args parameters are unnecessary.","title":"Remarks"},{"location":"bitburner.ns.getscriptexpgain/","text":"Home > bitburner > NS > getScriptExpGain NS.getScriptExpGain() method Get the exp gain of a script. Signature: getScriptExpGain(script: string, host: string, ...args: (string | number | boolean)[]): number; Parameters Parameter Type Description script string Filename of script. host string Server on which script is running. args (string | number | boolean)[] Arguments that the script is running with. Returns: number Amount of hacking experience the specified script generates while online. Remarks RAM cost: 0.1 GB Returns the amount of hacking experience the specified script generates while online (when the game is open, does not apply for offline experience gains). Remember that a script is uniquely identified by both its name and its arguments. This function can also return the total experience gain rate of all of your active scripts by running the function with no arguments.","title":"Bitburner.ns.getscriptexpgain"},{"location":"bitburner.ns.getscriptexpgain/#nsgetscriptexpgain-method","text":"Get the exp gain of a script. Signature: getScriptExpGain(script: string, host: string, ...args: (string | number | boolean)[]): number;","title":"NS.getScriptExpGain() method"},{"location":"bitburner.ns.getscriptexpgain/#parameters","text":"Parameter Type Description script string Filename of script. host string Server on which script is running. args (string | number | boolean)[] Arguments that the script is running with. Returns: number Amount of hacking experience the specified script generates while online.","title":"Parameters"},{"location":"bitburner.ns.getscriptexpgain/#remarks","text":"RAM cost: 0.1 GB Returns the amount of hacking experience the specified script generates while online (when the game is open, does not apply for offline experience gains). Remember that a script is uniquely identified by both its name and its arguments. This function can also return the total experience gain rate of all of your active scripts by running the function with no arguments.","title":"Remarks"},{"location":"bitburner.ns.getscriptincome/","text":"Home > bitburner > NS > getScriptIncome NS.getScriptIncome() method Get the income of a script. Signature: getScriptIncome(script: string, host: string, ...args: (string | number | boolean)[]): number; Parameters Parameter Type Description script string Filename of script. host string Server on which script is running. args (string | number | boolean)[] Arguments that the script is running with. Returns: number Amount of income the specified script generates while online. Remarks RAM cost: 0.1 GB Returns the amount of income the specified script generates while online (when the game is open, does not apply for offline income). Remember that a script is uniquely identified by both its name and its arguments. So for example if you ran a script with the arguments \u201cfoodnstuff\u201d and \u201c5\u201d then in order to use this function to get that script\u2019s income you must specify those same arguments in the same order in this function call.","title":"Bitburner.ns.getscriptincome"},{"location":"bitburner.ns.getscriptincome/#nsgetscriptincome-method","text":"Get the income of a script. Signature: getScriptIncome(script: string, host: string, ...args: (string | number | boolean)[]): number;","title":"NS.getScriptIncome() method"},{"location":"bitburner.ns.getscriptincome/#parameters","text":"Parameter Type Description script string Filename of script. host string Server on which script is running. args (string | number | boolean)[] Arguments that the script is running with. Returns: number Amount of income the specified script generates while online.","title":"Parameters"},{"location":"bitburner.ns.getscriptincome/#remarks","text":"RAM cost: 0.1 GB Returns the amount of income the specified script generates while online (when the game is open, does not apply for offline income). Remember that a script is uniquely identified by both its name and its arguments. So for example if you ran a script with the arguments \u201cfoodnstuff\u201d and \u201c5\u201d then in order to use this function to get that script\u2019s income you must specify those same arguments in the same order in this function call.","title":"Remarks"},{"location":"bitburner.ns.getscriptlogs/","text":"Home > bitburner > NS > getScriptLogs NS.getScriptLogs() method Get all the logs of a script. Signature: getScriptLogs(fn?: string, host?: string, ...args: (string | number | boolean)[]): string[]; Parameters Parameter Type Description fn string Optional. Filename of script to get logs from. host string Optional. Hostname of the server that the script is on. args (string | number | boolean)[] Arguments to identify which scripts to get logs for. Returns: string[] Returns an string array, where each line is an element in the array. The most recently logged line is at the end of the array. Remarks RAM cost: 0 GB Returns a script\u2019s logs. The logs are returned as an array, where each line is an element in the array. The most recently logged line is at the end of the array. Note that there is a maximum number of lines that a script stores in its logs. This is configurable in the game\u2019s options. If the function is called with no arguments, it will return the current script\u2019s logs. Otherwise, the fn, hostname/ip, and args\u2026 arguments can be used to get the logs from another script. Remember that scripts are uniquely identified by both their names and arguments. Example 1 // NS1: //Get logs from foo.script on the current server that was run with no args getScriptLogs(\"foo.script\"); //Open logs from foo.script on the foodnstuff server that was run with no args getScriptLogs(\"foo.script\", \"foodnstuff\"); //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] getScriptLogs(\"foo.script\", \"foodnstuff\", 1, \"test\"); Example 2 // NS2: //Get logs from foo.script on the current server that was run with no args ns.getScriptLogs(\"foo.script\"); //Open logs from foo.script on the foodnstuff server that was run with no args ns.getScriptLogs(\"foo.script\", \"foodnstuff\"); //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] ns.getScriptLogs(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Bitburner.ns.getscriptlogs"},{"location":"bitburner.ns.getscriptlogs/#nsgetscriptlogs-method","text":"Get all the logs of a script. Signature: getScriptLogs(fn?: string, host?: string, ...args: (string | number | boolean)[]): string[];","title":"NS.getScriptLogs() method"},{"location":"bitburner.ns.getscriptlogs/#parameters","text":"Parameter Type Description fn string Optional. Filename of script to get logs from. host string Optional. Hostname of the server that the script is on. args (string | number | boolean)[] Arguments to identify which scripts to get logs for. Returns: string[] Returns an string array, where each line is an element in the array. The most recently logged line is at the end of the array.","title":"Parameters"},{"location":"bitburner.ns.getscriptlogs/#remarks","text":"RAM cost: 0 GB Returns a script\u2019s logs. The logs are returned as an array, where each line is an element in the array. The most recently logged line is at the end of the array. Note that there is a maximum number of lines that a script stores in its logs. This is configurable in the game\u2019s options. If the function is called with no arguments, it will return the current script\u2019s logs. Otherwise, the fn, hostname/ip, and args\u2026 arguments can be used to get the logs from another script. Remember that scripts are uniquely identified by both their names and arguments.","title":"Remarks"},{"location":"bitburner.ns.getscriptlogs/#example-1","text":"// NS1: //Get logs from foo.script on the current server that was run with no args getScriptLogs(\"foo.script\"); //Open logs from foo.script on the foodnstuff server that was run with no args getScriptLogs(\"foo.script\", \"foodnstuff\"); //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] getScriptLogs(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Example 1"},{"location":"bitburner.ns.getscriptlogs/#example-2","text":"// NS2: //Get logs from foo.script on the current server that was run with no args ns.getScriptLogs(\"foo.script\"); //Open logs from foo.script on the foodnstuff server that was run with no args ns.getScriptLogs(\"foo.script\", \"foodnstuff\"); //Open logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] ns.getScriptLogs(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Example 2"},{"location":"bitburner.ns.getscriptname/","text":"Home > bitburner > NS > getScriptName NS.getScriptName() method Returns the current script name. Signature: getScriptName(): string; Returns: string Current script name. Remarks RAM cost: 0 GB","title":"Bitburner.ns.getscriptname"},{"location":"bitburner.ns.getscriptname/#nsgetscriptname-method","text":"Returns the current script name. Signature: getScriptName(): string; Returns: string Current script name.","title":"NS.getScriptName() method"},{"location":"bitburner.ns.getscriptname/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.getscriptram/","text":"Home > bitburner > NS > getScriptRam NS.getScriptRam() method Get the ram cost of a script. Signature: getScriptRam(script: string, host?: string): number; Parameters Parameter Type Description script string Filename of script. This is case-sensitive. host string Host of target server the script is located on. This is optional, if it is not specified then the function will use the current server as the target server. Returns: number Amount of RAM (in GB) required to run the specified script on the target server, and 0 if the script does not exist. Remarks RAM cost: 0.1 GB Returns the amount of RAM required to run the specified script on the target server. Returns 0 if the script does not exist.","title":"Bitburner.ns.getscriptram"},{"location":"bitburner.ns.getscriptram/#nsgetscriptram-method","text":"Get the ram cost of a script. Signature: getScriptRam(script: string, host?: string): number;","title":"NS.getScriptRam() method"},{"location":"bitburner.ns.getscriptram/#parameters","text":"Parameter Type Description script string Filename of script. This is case-sensitive. host string Host of target server the script is located on. This is optional, if it is not specified then the function will use the current server as the target server. Returns: number Amount of RAM (in GB) required to run the specified script on the target server, and 0 if the script does not exist.","title":"Parameters"},{"location":"bitburner.ns.getscriptram/#remarks","text":"RAM cost: 0.1 GB Returns the amount of RAM required to run the specified script on the target server. Returns 0 if the script does not exist.","title":"Remarks"},{"location":"bitburner.ns.getserver/","text":"Home > bitburner > NS > getServer NS.getServer() method Returns a server object for the given server. Defaults to the running script's server if host is not specified. Signature: getServer(host?: string): Server; Parameters Parameter Type Description host string Optional. Hostname for the requested server object. Returns: Server The requested server object. Remarks RAM cost: 2 GB","title":"Bitburner.ns.getserver"},{"location":"bitburner.ns.getserver/#nsgetserver-method","text":"Returns a server object for the given server. Defaults to the running script's server if host is not specified. Signature: getServer(host?: string): Server;","title":"NS.getServer() method"},{"location":"bitburner.ns.getserver/#parameters","text":"Parameter Type Description host string Optional. Hostname for the requested server object. Returns: Server The requested server object.","title":"Parameters"},{"location":"bitburner.ns.getserver/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.ns.getserverbasesecuritylevel/","text":"Home > bitburner > NS > getServerBaseSecurityLevel NS.getServerBaseSecurityLevel() method Warning: This API is now obsolete. useless Signature: getServerBaseSecurityLevel(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Base security level of the target server. Remarks RAM cost: 0.1 GB Returns the base security level of the target server. This is the security level that the server starts out with. This is different than getServerSecurityLevel because getServerSecurityLevel returns the current security level of a server, which can constantly change due to hack, grow, and weaken, calls on that server. The base security level will stay the same until you reset by installing an Augmentation(s).","title":"Bitburner.ns.getserverbasesecuritylevel"},{"location":"bitburner.ns.getserverbasesecuritylevel/#nsgetserverbasesecuritylevel-method","text":"Warning: This API is now obsolete. useless Signature: getServerBaseSecurityLevel(host: string): number;","title":"NS.getServerBaseSecurityLevel() method"},{"location":"bitburner.ns.getserverbasesecuritylevel/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Base security level of the target server.","title":"Parameters"},{"location":"bitburner.ns.getserverbasesecuritylevel/#remarks","text":"RAM cost: 0.1 GB Returns the base security level of the target server. This is the security level that the server starts out with. This is different than getServerSecurityLevel because getServerSecurityLevel returns the current security level of a server, which can constantly change due to hack, grow, and weaken, calls on that server. The base security level will stay the same until you reset by installing an Augmentation(s).","title":"Remarks"},{"location":"bitburner.ns.getservergrowth/","text":"Home > bitburner > NS > getServerGrowth NS.getServerGrowth() method Get a server growth parameter. Signature: getServerGrowth(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Parameter that affects the percentage by which the server\u2019s money is increased when using the grow function. Remarks RAM cost: 0.1 GB Returns the server\u2019s intrinsic \u201cgrowth parameter\u201d. This growth parameter is a number typically between 0 and 100 that represents how quickly the server\u2019s money grows. This parameter affects the percentage by which the server\u2019s money is increased when using the grow function. A higher growth parameter will result in a higher percentage increase from grow.","title":"Bitburner.ns.getservergrowth"},{"location":"bitburner.ns.getservergrowth/#nsgetservergrowth-method","text":"Get a server growth parameter. Signature: getServerGrowth(host: string): number;","title":"NS.getServerGrowth() method"},{"location":"bitburner.ns.getservergrowth/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Parameter that affects the percentage by which the server\u2019s money is increased when using the grow function.","title":"Parameters"},{"location":"bitburner.ns.getservergrowth/#remarks","text":"RAM cost: 0.1 GB Returns the server\u2019s intrinsic \u201cgrowth parameter\u201d. This growth parameter is a number typically between 0 and 100 that represents how quickly the server\u2019s money grows. This parameter affects the percentage by which the server\u2019s money is increased when using the grow function. A higher growth parameter will result in a higher percentage increase from grow.","title":"Remarks"},{"location":"bitburner.ns.getservermaxmoney/","text":"Home > bitburner > NS > getServerMaxMoney NS.getServerMaxMoney() method Get maximum money available on a server. Signature: getServerMaxMoney(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Maximum amount of money available on the server. Remarks RAM cost: 0.1 GB Returns the maximum amount of money that can be available on a server.","title":"Bitburner.ns.getservermaxmoney"},{"location":"bitburner.ns.getservermaxmoney/#nsgetservermaxmoney-method","text":"Get maximum money available on a server. Signature: getServerMaxMoney(host: string): number;","title":"NS.getServerMaxMoney() method"},{"location":"bitburner.ns.getservermaxmoney/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Maximum amount of money available on the server.","title":"Parameters"},{"location":"bitburner.ns.getservermaxmoney/#remarks","text":"RAM cost: 0.1 GB Returns the maximum amount of money that can be available on a server.","title":"Remarks"},{"location":"bitburner.ns.getservermaxram/","text":"Home > bitburner > NS > getServerMaxRam NS.getServerMaxRam() method Get the max RAM on a server. Signature: getServerMaxRam(host: string): number; Parameters Parameter Type Description host string Hostname of the target server. Returns: number max ram (GB) Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.getservermaxram"},{"location":"bitburner.ns.getservermaxram/#nsgetservermaxram-method","text":"Get the max RAM on a server. Signature: getServerMaxRam(host: string): number;","title":"NS.getServerMaxRam() method"},{"location":"bitburner.ns.getservermaxram/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: number max ram (GB)","title":"Parameters"},{"location":"bitburner.ns.getservermaxram/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.getserverminsecuritylevel/","text":"Home > bitburner > NS > getServerMinSecurityLevel NS.getServerMinSecurityLevel() method Returns the minimum security level of the target server. Signature: getServerMinSecurityLevel(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Minimum security level of the target server. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.getserverminsecuritylevel"},{"location":"bitburner.ns.getserverminsecuritylevel/#nsgetserverminsecuritylevel-method","text":"Returns the minimum security level of the target server. Signature: getServerMinSecurityLevel(host: string): number;","title":"NS.getServerMinSecurityLevel() method"},{"location":"bitburner.ns.getserverminsecuritylevel/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Minimum security level of the target server.","title":"Parameters"},{"location":"bitburner.ns.getserverminsecuritylevel/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getservermoneyavailable/","text":"Home > bitburner > NS > getServerMoneyAvailable NS.getServerMoneyAvailable() method Get money available on a server. Signature: getServerMoneyAvailable(host: string): number; Parameters Parameter Type Description host string Host of target server Returns: number Amount of money available on the server. Remarks RAM cost: 0.1 GB Returns the amount of money available on a server. Running this function on the home computer will return the player\u2019s money. Example 1 // NS1: getServerMoneyAvailable(\"foodnstuff\"); getServerMoneyAvailable(\"home\"); //Returns player's money Example 2 // NS2: ns.getServerMoneyAvailable(\"foodnstuff\"); ns.getServerMoneyAvailable(\"home\"); // Returns player's money","title":"Bitburner.ns.getservermoneyavailable"},{"location":"bitburner.ns.getservermoneyavailable/#nsgetservermoneyavailable-method","text":"Get money available on a server. Signature: getServerMoneyAvailable(host: string): number;","title":"NS.getServerMoneyAvailable() method"},{"location":"bitburner.ns.getservermoneyavailable/#parameters","text":"Parameter Type Description host string Host of target server Returns: number Amount of money available on the server.","title":"Parameters"},{"location":"bitburner.ns.getservermoneyavailable/#remarks","text":"RAM cost: 0.1 GB Returns the amount of money available on a server. Running this function on the home computer will return the player\u2019s money.","title":"Remarks"},{"location":"bitburner.ns.getservermoneyavailable/#example-1","text":"// NS1: getServerMoneyAvailable(\"foodnstuff\"); getServerMoneyAvailable(\"home\"); //Returns player's money","title":"Example 1"},{"location":"bitburner.ns.getservermoneyavailable/#example-2","text":"// NS2: ns.getServerMoneyAvailable(\"foodnstuff\"); ns.getServerMoneyAvailable(\"home\"); // Returns player's money","title":"Example 2"},{"location":"bitburner.ns.getservernumportsrequired/","text":"Home > bitburner > NS > getServerNumPortsRequired NS.getServerNumPortsRequired() method Returns the number of open ports required to successfully run NUKE.exe on the specified server. Signature: getServerNumPortsRequired(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number The number of open ports required to successfully run NUKE.exe on the specified server. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.getservernumportsrequired"},{"location":"bitburner.ns.getservernumportsrequired/#nsgetservernumportsrequired-method","text":"Returns the number of open ports required to successfully run NUKE.exe on the specified server. Signature: getServerNumPortsRequired(host: string): number;","title":"NS.getServerNumPortsRequired() method"},{"location":"bitburner.ns.getservernumportsrequired/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number The number of open ports required to successfully run NUKE.exe on the specified server.","title":"Parameters"},{"location":"bitburner.ns.getservernumportsrequired/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getserverram/","text":"Home > bitburner > NS > getServerRam NS.getServerRam() method Warning: This API is now obsolete. use getServerMaxRam / getServerUsedRam Signature: getServerRam(host: string): [number, number]; Parameters Parameter Type Description host string Host of target server. Returns: [number, number] Array with total and used memory on the specified server, in GB. Remarks RAM cost: 0.1 GB Returns an array with two elements that gives information about a server\u2019s memory (RAM). The first element in the array is the amount of RAM that the server has total (in GB). The second element in the array is the amount of RAM that is currently being used on the server (in GB). Example 1 // NS1: var serverRam = getServerRam(\"helios\"); var totalRam = serverRam[0]; var ramUsed = serverRam[1]; Example 2 // NS2: const [totalRam, ramUsed] = ns.getServerRam(\"helios\");","title":"Bitburner.ns.getserverram"},{"location":"bitburner.ns.getserverram/#nsgetserverram-method","text":"Warning: This API is now obsolete. use getServerMaxRam / getServerUsedRam Signature: getServerRam(host: string): [number, number];","title":"NS.getServerRam() method"},{"location":"bitburner.ns.getserverram/#parameters","text":"Parameter Type Description host string Host of target server. Returns: [number, number] Array with total and used memory on the specified server, in GB.","title":"Parameters"},{"location":"bitburner.ns.getserverram/#remarks","text":"RAM cost: 0.1 GB Returns an array with two elements that gives information about a server\u2019s memory (RAM). The first element in the array is the amount of RAM that the server has total (in GB). The second element in the array is the amount of RAM that is currently being used on the server (in GB).","title":"Remarks"},{"location":"bitburner.ns.getserverram/#example-1","text":"// NS1: var serverRam = getServerRam(\"helios\"); var totalRam = serverRam[0]; var ramUsed = serverRam[1];","title":"Example 1"},{"location":"bitburner.ns.getserverram/#example-2","text":"// NS2: const [totalRam, ramUsed] = ns.getServerRam(\"helios\");","title":"Example 2"},{"location":"bitburner.ns.getserverrequiredhackinglevel/","text":"Home > bitburner > NS > getServerRequiredHackingLevel NS.getServerRequiredHackingLevel() method Returns the required hacking level of the target server. Signature: getServerRequiredHackingLevel(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number The required hacking level of the target server. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.getserverrequiredhackinglevel"},{"location":"bitburner.ns.getserverrequiredhackinglevel/#nsgetserverrequiredhackinglevel-method","text":"Returns the required hacking level of the target server. Signature: getServerRequiredHackingLevel(host: string): number;","title":"NS.getServerRequiredHackingLevel() method"},{"location":"bitburner.ns.getserverrequiredhackinglevel/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number The required hacking level of the target server.","title":"Parameters"},{"location":"bitburner.ns.getserverrequiredhackinglevel/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getserversecuritylevel/","text":"Home > bitburner > NS > getServerSecurityLevel NS.getServerSecurityLevel() method Get server security level. Signature: getServerSecurityLevel(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Security level of the target server. Remarks RAM cost: 0.1 GB Returns the security level of the target server. A server\u2019s security level is denoted by a number, typically between 1 and 100 (but it can go above 100).","title":"Bitburner.ns.getserversecuritylevel"},{"location":"bitburner.ns.getserversecuritylevel/#nsgetserversecuritylevel-method","text":"Get server security level. Signature: getServerSecurityLevel(host: string): number;","title":"NS.getServerSecurityLevel() method"},{"location":"bitburner.ns.getserversecuritylevel/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Security level of the target server.","title":"Parameters"},{"location":"bitburner.ns.getserversecuritylevel/#remarks","text":"RAM cost: 0.1 GB Returns the security level of the target server. A server\u2019s security level is denoted by a number, typically between 1 and 100 (but it can go above 100).","title":"Remarks"},{"location":"bitburner.ns.getserverusedram/","text":"Home > bitburner > NS > getServerUsedRam NS.getServerUsedRam() method Get the used RAM on a server. Signature: getServerUsedRam(host: string): number; Parameters Parameter Type Description host string Hostname of the target server. Returns: number used ram (GB) Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.getserverusedram"},{"location":"bitburner.ns.getserverusedram/#nsgetserverusedram-method","text":"Get the used RAM on a server. Signature: getServerUsedRam(host: string): number;","title":"NS.getServerUsedRam() method"},{"location":"bitburner.ns.getserverusedram/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: number used ram (GB)","title":"Parameters"},{"location":"bitburner.ns.getserverusedram/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.getsharepower/","text":"Home > bitburner > NS > getSharePower NS.getSharePower() method Calculate your share power. Based on all the active share calls. Signature: getSharePower(): number; Returns: number Remarks RAM cost: 0.2 GB","title":"Bitburner.ns.getsharepower"},{"location":"bitburner.ns.getsharepower/#nsgetsharepower-method","text":"Calculate your share power. Based on all the active share calls. Signature: getSharePower(): number; Returns: number","title":"NS.getSharePower() method"},{"location":"bitburner.ns.getsharepower/#remarks","text":"RAM cost: 0.2 GB","title":"Remarks"},{"location":"bitburner.ns.gettimesincelastaug/","text":"Home > bitburner > NS > getTimeSinceLastAug NS.getTimeSinceLastAug() method Returns the amount of time in milliseconds that have passed since you last installed Augmentations. Signature: getTimeSinceLastAug(): number; Returns: number Time in milliseconds that have passed since you last installed Augmentations. Remarks RAM cost: 0.05 GB","title":"Bitburner.ns.gettimesincelastaug"},{"location":"bitburner.ns.gettimesincelastaug/#nsgettimesincelastaug-method","text":"Returns the amount of time in milliseconds that have passed since you last installed Augmentations. Signature: getTimeSinceLastAug(): number; Returns: number Time in milliseconds that have passed since you last installed Augmentations.","title":"NS.getTimeSinceLastAug() method"},{"location":"bitburner.ns.gettimesincelastaug/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.gettotalscriptexpgain/","text":"Home > bitburner > NS > getTotalScriptExpGain NS.getTotalScriptExpGain() method Get the exp gain of all script. Signature: getTotalScriptExpGain(): number; Returns: number total experience gain rate of all of your active scripts. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.gettotalscriptexpgain"},{"location":"bitburner.ns.gettotalscriptexpgain/#nsgettotalscriptexpgain-method","text":"Get the exp gain of all script. Signature: getTotalScriptExpGain(): number; Returns: number total experience gain rate of all of your active scripts.","title":"NS.getTotalScriptExpGain() method"},{"location":"bitburner.ns.gettotalscriptexpgain/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.gettotalscriptincome/","text":"Home > bitburner > NS > getTotalScriptIncome NS.getTotalScriptIncome() method Get the income of all script. Signature: getTotalScriptIncome(): [number, number]; Returns: [number, number] an array of two values. The first value is the total income (dollar / second) of all of your active scripts (scripts that are currently running on any server). The second value is the total income (dollar / second) that you\u2019ve earned from scripts since you last installed Augmentations. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.gettotalscriptincome"},{"location":"bitburner.ns.gettotalscriptincome/#nsgettotalscriptincome-method","text":"Get the income of all script. Signature: getTotalScriptIncome(): [number, number]; Returns: [number, number] an array of two values. The first value is the total income (dollar / second) of all of your active scripts (scripts that are currently running on any server). The second value is the total income (dollar / second) that you\u2019ve earned from scripts since you last installed Augmentations.","title":"NS.getTotalScriptIncome() method"},{"location":"bitburner.ns.gettotalscriptincome/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.getweakentime/","text":"Home > bitburner > NS > getWeakenTime NS.getWeakenTime() method Get the execution time of a weaken() call. Signature: getWeakenTime(host: string): number; Parameters Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the weaken Netscript function. Remarks RAM cost: 0.05 GB Returns the amount of time in milliseconds it takes to execute the weaken Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Bitburner.ns.getweakentime"},{"location":"bitburner.ns.getweakentime/#nsgetweakentime-method","text":"Get the execution time of a weaken() call. Signature: getWeakenTime(host: string): number;","title":"NS.getWeakenTime() method"},{"location":"bitburner.ns.getweakentime/#parameters","text":"Parameter Type Description host string Host of target server. Returns: number Returns the amount of time in milliseconds it takes to execute the weaken Netscript function.","title":"Parameters"},{"location":"bitburner.ns.getweakentime/#remarks","text":"RAM cost: 0.05 GB Returns the amount of time in milliseconds it takes to execute the weaken Netscript function on the target server. The required time is increased by the security level of the target server and decreased by the player's hacking level.","title":"Remarks"},{"location":"bitburner.ns.grafting/","text":"Home > bitburner > NS > grafting NS.grafting property Namespace for grafting functions. Signature: readonly grafting: Grafting; Remarks RAM cost: 0 GB","title":"Bitburner.ns.grafting"},{"location":"bitburner.ns.grafting/#nsgrafting-property","text":"Namespace for grafting functions. Signature: readonly grafting: Grafting;","title":"NS.grafting property"},{"location":"bitburner.ns.grafting/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.grow/","text":"Home > bitburner > NS > grow NS.grow() method Spoof money in a servers bank account, increasing the amount available. Signature: grow(host: string, opts?: BasicHGWOptions): Promise<number>; Parameters Parameter Type Description host string Hostname of the target server to grow. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The number by which the money on the server was multiplied for the growth. Remarks RAM cost: 0.15 GB Use your hacking skills to increase the amount of money available on a server. The runtime for this command depends on your hacking level and the target server\u2019s security level. When grow completes, the money available on a target server will be increased by a certain, fixed percentage. This percentage is determined by the target server\u2019s growth rate (which varies between servers) and security level. Generally, higher-level servers have higher growth rates. The getServerGrowth() function can be used to obtain a server\u2019s growth rate. Like hack, grow can be called on any server, regardless of where the script is running. The grow() command requires root access to the target server, but there is no required hacking level to run the command. It also raises the security level of the target server by 0.004. Example 1 // NS1: var currentMoney = getServerMoneyAvailable(\"foodnstuff\"); currentMoney = currentMoney * grow(\"foodnstuff\"); Example 2 // NS2: let currentMoney = ns.getServerMoneyAvailable(\"foodnstuff\"); currentMoney *= await ns.grow(\"foodnstuff\");","title":"Bitburner.ns.grow"},{"location":"bitburner.ns.grow/#nsgrow-method","text":"Spoof money in a servers bank account, increasing the amount available. Signature: grow(host: string, opts?: BasicHGWOptions): Promise<number>;","title":"NS.grow() method"},{"location":"bitburner.ns.grow/#parameters","text":"Parameter Type Description host string Hostname of the target server to grow. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The number by which the money on the server was multiplied for the growth.","title":"Parameters"},{"location":"bitburner.ns.grow/#remarks","text":"RAM cost: 0.15 GB Use your hacking skills to increase the amount of money available on a server. The runtime for this command depends on your hacking level and the target server\u2019s security level. When grow completes, the money available on a target server will be increased by a certain, fixed percentage. This percentage is determined by the target server\u2019s growth rate (which varies between servers) and security level. Generally, higher-level servers have higher growth rates. The getServerGrowth() function can be used to obtain a server\u2019s growth rate. Like hack, grow can be called on any server, regardless of where the script is running. The grow() command requires root access to the target server, but there is no required hacking level to run the command. It also raises the security level of the target server by 0.004.","title":"Remarks"},{"location":"bitburner.ns.grow/#example-1","text":"// NS1: var currentMoney = getServerMoneyAvailable(\"foodnstuff\"); currentMoney = currentMoney * grow(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.grow/#example-2","text":"// NS2: let currentMoney = ns.getServerMoneyAvailable(\"foodnstuff\"); currentMoney *= await ns.grow(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.growthanalyze/","text":"Home > bitburner > NS > growthAnalyze NS.growthAnalyze() method Calculate the number of grow thread needed to grow a server by a certain multiplier. Signature: growthAnalyze(host: string, growthAmount: number, cores?: number): number; Parameters Parameter Type Description host string Hostname of the target server. growthAmount number Multiplicative factor by which the server is grown. Decimal form.. cores number Returns: number The amount of grow calls needed to grow the specified server by the specified amount Remarks RAM cost: 1 GB This function returns the number of \u201cgrowths\u201d needed in order to increase the amount of money available on the specified server by the specified amount. The specified amount is multiplicative and is in decimal form, not percentage. Warning: The value returned by this function isn\u2019t necessarily a whole number. Example 1 // NS1: //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use: var growTimes = growthAnalyze(\"foodnstuff\", 2); //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads). Example 2 // NS2: //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use: const growTimes = ns.growthAnalyze(\"foodnstuff\", 2); //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads).","title":"Bitburner.ns.growthanalyze"},{"location":"bitburner.ns.growthanalyze/#nsgrowthanalyze-method","text":"Calculate the number of grow thread needed to grow a server by a certain multiplier. Signature: growthAnalyze(host: string, growthAmount: number, cores?: number): number;","title":"NS.growthAnalyze() method"},{"location":"bitburner.ns.growthanalyze/#parameters","text":"Parameter Type Description host string Hostname of the target server. growthAmount number Multiplicative factor by which the server is grown. Decimal form.. cores number Returns: number The amount of grow calls needed to grow the specified server by the specified amount","title":"Parameters"},{"location":"bitburner.ns.growthanalyze/#remarks","text":"RAM cost: 1 GB This function returns the number of \u201cgrowths\u201d needed in order to increase the amount of money available on the specified server by the specified amount. The specified amount is multiplicative and is in decimal form, not percentage. Warning: The value returned by this function isn\u2019t necessarily a whole number.","title":"Remarks"},{"location":"bitburner.ns.growthanalyze/#example-1","text":"// NS1: //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use: var growTimes = growthAnalyze(\"foodnstuff\", 2); //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads).","title":"Example 1"},{"location":"bitburner.ns.growthanalyze/#example-2","text":"// NS2: //For example, if you want to determine how many grow calls you need to double the amount of money on foodnstuff, you would use: const growTimes = ns.growthAnalyze(\"foodnstuff\", 2); //If this returns 100, then this means you need to call grow 100 times in order to double the money (or once with 100 threads).","title":"Example 2"},{"location":"bitburner.ns.growthanalyzesecurity/","text":"Home > bitburner > NS > growthAnalyzeSecurity NS.growthAnalyzeSecurity() method Calculate the security increase for a number of thread. Signature: growthAnalyzeSecurity(threads: number, hostname?: string, cores?: number): number; Parameters Parameter Type Description threads number Amount of threads that will be used. hostname string Optional. Hostname of the target server. The number of threads is limited to the number needed to hack the servers maximum amount of money. cores number Optional. The number of cores of the server that would run grow. Returns: number The security increase. Remarks RAM cost: 1 GB Returns the security increase that would occur if a grow with this many threads happened.","title":"Bitburner.ns.growthanalyzesecurity"},{"location":"bitburner.ns.growthanalyzesecurity/#nsgrowthanalyzesecurity-method","text":"Calculate the security increase for a number of thread. Signature: growthAnalyzeSecurity(threads: number, hostname?: string, cores?: number): number;","title":"NS.growthAnalyzeSecurity() method"},{"location":"bitburner.ns.growthanalyzesecurity/#parameters","text":"Parameter Type Description threads number Amount of threads that will be used. hostname string Optional. Hostname of the target server. The number of threads is limited to the number needed to hack the servers maximum amount of money. cores number Optional. The number of cores of the server that would run grow. Returns: number The security increase.","title":"Parameters"},{"location":"bitburner.ns.growthanalyzesecurity/#remarks","text":"RAM cost: 1 GB Returns the security increase that would occur if a grow with this many threads happened.","title":"Remarks"},{"location":"bitburner.ns.hack/","text":"Home > bitburner > NS > hack NS.hack() method Steal a servers money. Signature: hack(host: string, opts?: BasicHGWOptions): Promise<number>; Parameters Parameter Type Description host string Hostname of the target server to hack. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The amount of money stolen if the hack is successful, and zero otherwise. Remarks RAM cost: 0.1 GB Function that is used to try and hack servers to steal money and gain hacking experience. The runtime for this command depends on your hacking level and the target server\u2019s security level when this function is called. In order to hack a server you must first gain root access to that server and also have the required hacking level. A script can hack a server from anywhere. It does not need to be running on the same server to hack that server. For example, you can create a script that hacks the foodnstuff server and run that script on any server in the game. A successful hack() on a server will raise that server\u2019s security level by 0.002. Example 1 // NS1: var earnedMoney = hack(\"foodnstuff\"); Example 2 // NS2: let earnedMoney = await ns.hack(\"foodnstuff\");","title":"Bitburner.ns.hack"},{"location":"bitburner.ns.hack/#nshack-method","text":"Steal a servers money. Signature: hack(host: string, opts?: BasicHGWOptions): Promise<number>;","title":"NS.hack() method"},{"location":"bitburner.ns.hack/#parameters","text":"Parameter Type Description host string Hostname of the target server to hack. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The amount of money stolen if the hack is successful, and zero otherwise.","title":"Parameters"},{"location":"bitburner.ns.hack/#remarks","text":"RAM cost: 0.1 GB Function that is used to try and hack servers to steal money and gain hacking experience. The runtime for this command depends on your hacking level and the target server\u2019s security level when this function is called. In order to hack a server you must first gain root access to that server and also have the required hacking level. A script can hack a server from anywhere. It does not need to be running on the same server to hack that server. For example, you can create a script that hacks the foodnstuff server and run that script on any server in the game. A successful hack() on a server will raise that server\u2019s security level by 0.002.","title":"Remarks"},{"location":"bitburner.ns.hack/#example-1","text":"// NS1: var earnedMoney = hack(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.hack/#example-2","text":"// NS2: let earnedMoney = await ns.hack(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.hackanalyze/","text":"Home > bitburner > NS > hackAnalyze NS.hackAnalyze() method Get the part of money stolen with a single thread. Signature: hackAnalyze(host: string): number; Parameters Parameter Type Description host string Hostname of the target server. Returns: number The part of money you will steal from the target server with a single thread hack. Remarks RAM cost: 1 GB Returns the part of the specified server\u2019s money you will steal with a single thread hack. Example 1 // NS1: //For example, assume the following returns 0.01: var hackAmount = hackAnalyze(\"foodnstuff\"); //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money. Example 2 // NS2: //For example, assume the following returns 0.01: const hackAmount = ns.hackAnalyze(\"foodnstuff\"); //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money.","title":"Bitburner.ns.hackanalyze"},{"location":"bitburner.ns.hackanalyze/#nshackanalyze-method","text":"Get the part of money stolen with a single thread. Signature: hackAnalyze(host: string): number;","title":"NS.hackAnalyze() method"},{"location":"bitburner.ns.hackanalyze/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: number The part of money you will steal from the target server with a single thread hack.","title":"Parameters"},{"location":"bitburner.ns.hackanalyze/#remarks","text":"RAM cost: 1 GB Returns the part of the specified server\u2019s money you will steal with a single thread hack.","title":"Remarks"},{"location":"bitburner.ns.hackanalyze/#example-1","text":"// NS1: //For example, assume the following returns 0.01: var hackAmount = hackAnalyze(\"foodnstuff\"); //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money.","title":"Example 1"},{"location":"bitburner.ns.hackanalyze/#example-2","text":"// NS2: //For example, assume the following returns 0.01: const hackAmount = ns.hackAnalyze(\"foodnstuff\"); //This means that if hack the foodnstuff server using a single thread, then you will steal 1%, or 0.01 of its total money. If you hack using N threads, then you will steal N*0.01 times its total money.","title":"Example 2"},{"location":"bitburner.ns.hackanalyzechance/","text":"Home > bitburner > NS > hackAnalyzeChance NS.hackAnalyzeChance() method Get the chance of successfully hacking a server. Signature: hackAnalyzeChance(host: string): number; Parameters Parameter Type Description host string Hostname of the target server. Returns: number The chance you have of successfully hacking the target server. Remarks RAM cost: 1 GB Returns the chance you have of successfully hacking the specified server. This returned value is in decimal form, not percentage.","title":"Bitburner.ns.hackanalyzechance"},{"location":"bitburner.ns.hackanalyzechance/#nshackanalyzechance-method","text":"Get the chance of successfully hacking a server. Signature: hackAnalyzeChance(host: string): number;","title":"NS.hackAnalyzeChance() method"},{"location":"bitburner.ns.hackanalyzechance/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: number The chance you have of successfully hacking the target server.","title":"Parameters"},{"location":"bitburner.ns.hackanalyzechance/#remarks","text":"RAM cost: 1 GB Returns the chance you have of successfully hacking the specified server. This returned value is in decimal form, not percentage.","title":"Remarks"},{"location":"bitburner.ns.hackanalyzesecurity/","text":"Home > bitburner > NS > hackAnalyzeSecurity NS.hackAnalyzeSecurity() method Get the security increase for a number of thread. Signature: hackAnalyzeSecurity(threads: number, hostname?: string): number; Parameters Parameter Type Description threads number Amount of threads that will be used. hostname string Hostname of the target server. The number of threads is limited to the number needed to hack the servers maximum amount of money. Returns: number The security increase. Remarks RAM cost: 1 GB Returns the security increase that would occur if a hack with this many threads happened.","title":"Bitburner.ns.hackanalyzesecurity"},{"location":"bitburner.ns.hackanalyzesecurity/#nshackanalyzesecurity-method","text":"Get the security increase for a number of thread. Signature: hackAnalyzeSecurity(threads: number, hostname?: string): number;","title":"NS.hackAnalyzeSecurity() method"},{"location":"bitburner.ns.hackanalyzesecurity/#parameters","text":"Parameter Type Description threads number Amount of threads that will be used. hostname string Hostname of the target server. The number of threads is limited to the number needed to hack the servers maximum amount of money. Returns: number The security increase.","title":"Parameters"},{"location":"bitburner.ns.hackanalyzesecurity/#remarks","text":"RAM cost: 1 GB Returns the security increase that would occur if a hack with this many threads happened.","title":"Remarks"},{"location":"bitburner.ns.hackanalyzethreads/","text":"Home > bitburner > NS > hackAnalyzeThreads NS.hackAnalyzeThreads() method Predict the effect of hack. Signature: hackAnalyzeThreads(host: string, hackAmount: number): number; Parameters Parameter Type Description host string Hostname of the target server to analyze. hackAmount number Amount of money you want to hack from the server. Returns: number The number of threads needed to hack the server for hackAmount money. Remarks RAM cost: 1 GB This function returns the number of script threads you need when running the hack command to steal the specified amount of money from the target server. If hackAmount is less than zero or greater than the amount of money available on the server, then this function returns -1. Warning: The value returned by this function isn\u2019t necessarily a whole number. Example //For example, let\u2019s say the foodnstuff server has $10m and you run: hackAnalyzeThreads(\"foodnstuff\", 1e6); //If this function returns 50, this means that if your next hack call is run on a script with 50 threads, it will steal $1m from the foodnstuff server.","title":"Bitburner.ns.hackanalyzethreads"},{"location":"bitburner.ns.hackanalyzethreads/#nshackanalyzethreads-method","text":"Predict the effect of hack. Signature: hackAnalyzeThreads(host: string, hackAmount: number): number;","title":"NS.hackAnalyzeThreads() method"},{"location":"bitburner.ns.hackanalyzethreads/#parameters","text":"Parameter Type Description host string Hostname of the target server to analyze. hackAmount number Amount of money you want to hack from the server. Returns: number The number of threads needed to hack the server for hackAmount money.","title":"Parameters"},{"location":"bitburner.ns.hackanalyzethreads/#remarks","text":"RAM cost: 1 GB This function returns the number of script threads you need when running the hack command to steal the specified amount of money from the target server. If hackAmount is less than zero or greater than the amount of money available on the server, then this function returns -1. Warning: The value returned by this function isn\u2019t necessarily a whole number.","title":"Remarks"},{"location":"bitburner.ns.hackanalyzethreads/#example","text":"//For example, let\u2019s say the foodnstuff server has $10m and you run: hackAnalyzeThreads(\"foodnstuff\", 1e6); //If this function returns 50, this means that if your next hack call is run on a script with 50 threads, it will steal $1m from the foodnstuff server.","title":"Example"},{"location":"bitburner.ns.hacknet/","text":"Home > bitburner > NS > hacknet NS.hacknet property Namespace for hacknet functions. Signature: readonly hacknet: Hacknet; Remarks RAM cost: 4 GB","title":"Bitburner.ns.hacknet"},{"location":"bitburner.ns.hacknet/#nshacknet-property","text":"Namespace for hacknet functions. Signature: readonly hacknet: Hacknet;","title":"NS.hacknet property"},{"location":"bitburner.ns.hacknet/#remarks","text":"RAM cost: 4 GB","title":"Remarks"},{"location":"bitburner.ns.hasrootaccess/","text":"Home > bitburner > NS > hasRootAccess NS.hasRootAccess() method Check if your have root access on a server. Signature: hasRootAccess(host: string): boolean; Parameters Parameter Type Description host string Host of the target server Returns: boolean True if player has root access to the specified target server, and false otherwise. Remarks RAM cost: 0.05 GB Returns a boolean indicating whether or not the player has root access to the specified target server. Example 1 // NS1: if (hasRootAccess(\"foodnstuff\") == false) { nuke(\"foodnstuff\"); } Example 2 // NS2: if (ns.hasRootAccess(\"foodnstuff\") == false) { ns.nuke(\"foodnstuff\"); }","title":"Bitburner.ns.hasrootaccess"},{"location":"bitburner.ns.hasrootaccess/#nshasrootaccess-method","text":"Check if your have root access on a server. Signature: hasRootAccess(host: string): boolean;","title":"NS.hasRootAccess() method"},{"location":"bitburner.ns.hasrootaccess/#parameters","text":"Parameter Type Description host string Host of the target server Returns: boolean True if player has root access to the specified target server, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.hasrootaccess/#remarks","text":"RAM cost: 0.05 GB Returns a boolean indicating whether or not the player has root access to the specified target server.","title":"Remarks"},{"location":"bitburner.ns.hasrootaccess/#example-1","text":"// NS1: if (hasRootAccess(\"foodnstuff\") == false) { nuke(\"foodnstuff\"); }","title":"Example 1"},{"location":"bitburner.ns.hasrootaccess/#example-2","text":"// NS2: if (ns.hasRootAccess(\"foodnstuff\") == false) { ns.nuke(\"foodnstuff\"); }","title":"Example 2"},{"location":"bitburner.ns.httpworm/","text":"Home > bitburner > NS > httpworm NS.httpworm() method Runs HTTPWorm.exe on a server. Signature: httpworm(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Runs the HTTPWorm.exe program on the target server. HTTPWorm.exe must exist on your home computer. Example 1 // NS1: httpworm(\"foodnstuff\"); Example 2 // NS2: ns.httpworm(\"foodnstuff\");","title":"Bitburner.ns.httpworm"},{"location":"bitburner.ns.httpworm/#nshttpworm-method","text":"Runs HTTPWorm.exe on a server. Signature: httpworm(host: string): void;","title":"NS.httpworm() method"},{"location":"bitburner.ns.httpworm/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.httpworm/#remarks","text":"RAM cost: 0.05 GB Runs the HTTPWorm.exe program on the target server. HTTPWorm.exe must exist on your home computer.","title":"Remarks"},{"location":"bitburner.ns.httpworm/#example-1","text":"// NS1: httpworm(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.httpworm/#example-2","text":"// NS2: ns.httpworm(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.infiltration/","text":"Home > bitburner > NS > infiltration NS.infiltration property Namespace for infiltration functions. RAM cost: 0 GB Signature: readonly infiltration: Infiltration;","title":"Bitburner.ns.infiltration"},{"location":"bitburner.ns.infiltration/#nsinfiltration-property","text":"Namespace for infiltration functions. RAM cost: 0 GB Signature: readonly infiltration: Infiltration;","title":"NS.infiltration property"},{"location":"bitburner.ns.islogenabled/","text":"Home > bitburner > NS > isLogEnabled NS.isLogEnabled() method Checks the status of the logging for the given function. Signature: isLogEnabled(fn: string): boolean; Parameters Parameter Type Description fn string Name of function to check. Returns: boolean Returns a boolean indicating whether or not logging is enabled for that function (or ALL ) Remarks RAM cost: 0 GB","title":"Bitburner.ns.islogenabled"},{"location":"bitburner.ns.islogenabled/#nsislogenabled-method","text":"Checks the status of the logging for the given function. Signature: isLogEnabled(fn: string): boolean;","title":"NS.isLogEnabled() method"},{"location":"bitburner.ns.islogenabled/#parameters","text":"Parameter Type Description fn string Name of function to check. Returns: boolean Returns a boolean indicating whether or not logging is enabled for that function (or ALL )","title":"Parameters"},{"location":"bitburner.ns.islogenabled/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.isrunning/","text":"Home > bitburner > NS > isRunning NS.isRunning() method Check if a script is running. Signature: isRunning(script: FilenameOrPID, host?: string, ...args: (string | number | boolean)[]): boolean; Parameters Parameter Type Description script FilenameOrPID Filename or PID of script to check. This is case-sensitive. host string Host of target server. args (string | number | boolean)[] Arguments to specify/identify which scripts to search for. Returns: boolean True if specified script is running on the target server, and false otherwise. Remarks RAM cost: 0.1 GB Returns a boolean indicating whether the specified script is running on the target server. If you use a PID instead of a filename, the hostname and args parameters are unnecessary. Remember that a script is uniquely identified by both its name and its arguments. Example 1 // NS1: //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise: isRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise: isRunning(\"foo.script\", getHostname()); //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and \u201ctest\u201d (in that order) on the joesguns server, and false otherwise: isRunning(\"foo.script\", \"joesguns\", 1, 5, \"test\"); Example 2 // NS2: //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise: ns.isRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise: ns.isRunning(\"foo.script\", ns.getHostname()); //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and \u201ctest\u201d (in that order) on the joesguns server, and false otherwise: ns.isRunning(\"foo.script\", \"joesguns\", 1, 5, \"test\");","title":"Bitburner.ns.isrunning"},{"location":"bitburner.ns.isrunning/#nsisrunning-method","text":"Check if a script is running. Signature: isRunning(script: FilenameOrPID, host?: string, ...args: (string | number | boolean)[]): boolean;","title":"NS.isRunning() method"},{"location":"bitburner.ns.isrunning/#parameters","text":"Parameter Type Description script FilenameOrPID Filename or PID of script to check. This is case-sensitive. host string Host of target server. args (string | number | boolean)[] Arguments to specify/identify which scripts to search for. Returns: boolean True if specified script is running on the target server, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.isrunning/#remarks","text":"RAM cost: 0.1 GB Returns a boolean indicating whether the specified script is running on the target server. If you use a PID instead of a filename, the hostname and args parameters are unnecessary. Remember that a script is uniquely identified by both its name and its arguments.","title":"Remarks"},{"location":"bitburner.ns.isrunning/#example-1","text":"// NS1: //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise: isRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise: isRunning(\"foo.script\", getHostname()); //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and \u201ctest\u201d (in that order) on the joesguns server, and false otherwise: isRunning(\"foo.script\", \"joesguns\", 1, 5, \"test\");","title":"Example 1"},{"location":"bitburner.ns.isrunning/#example-2","text":"// NS2: //The function call will return true if there is a script named foo.script with no arguments running on the foodnstuff server, and false otherwise: ns.isRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is a script named foo.script with no arguments running on the current server, and false otherwise: ns.isRunning(\"foo.script\", ns.getHostname()); //The function call will return true if there is a script named foo.script running with the arguments 1, 5, and \u201ctest\u201d (in that order) on the joesguns server, and false otherwise: ns.isRunning(\"foo.script\", \"joesguns\", 1, 5, \"test\");","title":"Example 2"},{"location":"bitburner.ns.kill/","text":"Home > bitburner > NS > kill NS.kill() method Terminate another script. Signature: kill(script: number): boolean; Parameters Parameter Type Description script number Filename or pid of the script to kill Returns: boolean True if the script is successfully killed, and false otherwise. Remarks RAM cost: 0.5 GB Kills the script on the target server specified by the script\u2019s name and arguments. Remember that scripts are uniquely identified by both their name and arguments. For example, if foo.script is run with the argument 1, then this is not the same as foo.script run with the argument 2, even though they have the same code. Example 1 // NS1: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: kill(\"foo.script\", getHostname(), 1, \"foodnstuff\"); Example 2 // NS2: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: ns.kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: ns.kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: ns.kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Bitburner.ns.kill"},{"location":"bitburner.ns.kill/#nskill-method","text":"Terminate another script. Signature: kill(script: number): boolean;","title":"NS.kill() method"},{"location":"bitburner.ns.kill/#parameters","text":"Parameter Type Description script number Filename or pid of the script to kill Returns: boolean True if the script is successfully killed, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.kill/#remarks","text":"RAM cost: 0.5 GB Kills the script on the target server specified by the script\u2019s name and arguments. Remember that scripts are uniquely identified by both their name and arguments. For example, if foo.script is run with the argument 1, then this is not the same as foo.script run with the argument 2, even though they have the same code.","title":"Remarks"},{"location":"bitburner.ns.kill/#example-1","text":"// NS1: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.kill/#example-2","text":"// NS2: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: ns.kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: ns.kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: ns.kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.kill_1/","text":"Home > bitburner > NS > kill NS.kill() method Terminate another script. Signature: kill(script: string, host: string, ...args: (string | number | boolean)[]): boolean; Parameters Parameter Type Description script string Filename or pid of the script to kill host string Hostname of the server on which to kill the script. args (string | number | boolean)[] Arguments to identify which script to kill. Returns: boolean True if the script is successfully killed, and false otherwise. Remarks RAM cost: 0.5 GB Kills the script on the target server specified by the script\u2019s name and arguments. Remember that scripts are uniquely identified by both their name and arguments. For example, if foo.script is run with the argument 1, then this is not the same as foo.script run with the argument 2, even though they have the same code. Example 1 // NS1: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: kill(\"foo.script\", getHostname(), 1, \"foodnstuff\"); Example 2 // NS2: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: ns.kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: ns.kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: ns.kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Bitburner.ns.kill 1"},{"location":"bitburner.ns.kill_1/#nskill-method","text":"Terminate another script. Signature: kill(script: string, host: string, ...args: (string | number | boolean)[]): boolean;","title":"NS.kill() method"},{"location":"bitburner.ns.kill_1/#parameters","text":"Parameter Type Description script string Filename or pid of the script to kill host string Hostname of the server on which to kill the script. args (string | number | boolean)[] Arguments to identify which script to kill. Returns: boolean True if the script is successfully killed, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.kill_1/#remarks","text":"RAM cost: 0.5 GB Kills the script on the target server specified by the script\u2019s name and arguments. Remember that scripts are uniquely identified by both their name and arguments. For example, if foo.script is run with the argument 1, then this is not the same as foo.script run with the argument 2, even though they have the same code.","title":"Remarks"},{"location":"bitburner.ns.kill_1/#example-1","text":"// NS1: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.kill_1/#example-2","text":"// NS2: //The following example will try to kill a script named foo.script on the foodnstuff server that was ran with no arguments: ns.kill(\"foo.script\", \"foodnstuff\"); //The following will try to kill a script named foo.script on the current server that was ran with no arguments: ns.kill(\"foo.script\", getHostname()); //The following will try to kill a script named foo.script on the current server that was ran with the arguments 1 and \u201cfoodnstuff\u201d: ns.kill(\"foo.script\", getHostname(), 1, \"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.killall/","text":"Home > bitburner > NS > killall NS.killall() method Terminate all scripts on a server. Signature: killall(host?: string, safetyguard?: boolean): boolean; Parameters Parameter Type Description host string IP or hostname of the server on which to kill all scripts. safetyguard boolean Skips the script that calls this function Returns: boolean True if any scripts were killed, and false otherwise. Remarks RAM cost: 0.5 GB Kills all running scripts on the specified server. This function returns true if any scripts were killed, and false otherwise. In other words, it will return true if there are any scripts running on the target server. If no host is defined, it will kill all scripts, where the script is running.","title":"Bitburner.ns.killall"},{"location":"bitburner.ns.killall/#nskillall-method","text":"Terminate all scripts on a server. Signature: killall(host?: string, safetyguard?: boolean): boolean;","title":"NS.killall() method"},{"location":"bitburner.ns.killall/#parameters","text":"Parameter Type Description host string IP or hostname of the server on which to kill all scripts. safetyguard boolean Skips the script that calls this function Returns: boolean True if any scripts were killed, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.killall/#remarks","text":"RAM cost: 0.5 GB Kills all running scripts on the specified server. This function returns true if any scripts were killed, and false otherwise. In other words, it will return true if there are any scripts running on the target server. If no host is defined, it will kill all scripts, where the script is running.","title":"Remarks"},{"location":"bitburner.ns.ls/","text":"Home > bitburner > NS > ls NS.ls() method List files on a server. Signature: ls(host: string, grep?: string): string[]; Parameters Parameter Type Description host string Host of the target server. grep string A substring to search for in the filename. Returns: string[] Array with the filenames of all files on the specified server. Remarks RAM cost: 0.2 GB Returns an array with the filenames of all files on the specified server (as strings). The returned array is sorted in alphabetic order.","title":"Bitburner.ns.ls"},{"location":"bitburner.ns.ls/#nsls-method","text":"List files on a server. Signature: ls(host: string, grep?: string): string[];","title":"NS.ls() method"},{"location":"bitburner.ns.ls/#parameters","text":"Parameter Type Description host string Host of the target server. grep string A substring to search for in the filename. Returns: string[] Array with the filenames of all files on the specified server.","title":"Parameters"},{"location":"bitburner.ns.ls/#remarks","text":"RAM cost: 0.2 GB Returns an array with the filenames of all files on the specified server (as strings). The returned array is sorted in alphabetic order.","title":"Remarks"},{"location":"bitburner.ns/","text":"Home > bitburner > NS NS interface Collection of all functions passed to scripts Signature: export interface NS Remarks Basic ns1 usage example: // Basic ns functions can be used directly getHostname(); // Some related functions are gathered within a common namespace stock.getPrice(); ns1 in-game docs Basic ns2 usage example: export async function main(ns) { // Basic ns functions can be accessed on the ns object ns.getHostname(); // Some related functions are gathered under a sub-property of the ns object ns.stock.getPrice(); // Some functions need to be awaited await ns.hack('n00dles'); } ns2 in-game docs Properties Property Type Description args (string | number | boolean)[] Arguments passed into the script. bladeburner Bladeburner Namespace for bladeburner functions. codingcontract CodingContract Namespace for codingcontract functions. corporation Corporation Namespace for corporation functions. RAM cost: 1022.4 GB enums NSEnums formulas Formulas Namespace for formulas functions. gang Gang Namespace for gang functions. grafting Grafting Namespace for grafting functions. hacknet Hacknet Namespace for hacknet functions. infiltration Infiltration Namespace for infiltration functions. RAM cost: 0 GB singularity Singularity Namespace for singularity functions. RAM cost: 0 GB sleeve Sleeve Namespace for sleeve functions. stanek Stanek Namespace for stanek functions. RAM cost: 0 GB stock TIX Namespace for stock functions. ui UserInterface Namespace for user interface functions. RAM cost: 0 GB Methods Method Description alert(msg) Open up a message box. asleep(millis) Suspends the script for n milliseconds. Doesn't block with concurrent calls. You should prefer 'sleep' over 'asleep' except when doing very complex UI work. atExit(f) Add callback function when the script dies brutessh(host) Runs BruteSSH.exe on a server. clear(handle) Clear data from a file. clearLog() Clears the script\u2019s logs. clearPort(handle) Clear data from a port. closeTail(pid) Close the tail window of a script. deleteServer(host) Delete a purchased server. disableLog(fn) Disables logging for the given function. enableLog(fn) Enable logging for a certain function. exec(script, host, numThreads, args) Start another script on any server. exit() Terminates the current script immediately. fileExists(filename, host) Check if a file exists. flags(schema) Parse command line flags. ftpcrack(host) Runs FTPCrack.exe on a server. getBitNodeMultipliers(n, lvl) Get the current Bitnode multipliers. getFavorToDonate() Returns the amount of Faction favor required to be able to donate to a faction. getGrowTime(host) Get the execution time of a grow() call. getHackingLevel() Returns the player\u2019s current hacking level. getHackingMultipliers() Get hacking related multipliers. getHacknetMultipliers() Get hacknet related multipliers. getHackTime(host) Get the execution time of a hack() call. getHostname() Returns a string with the hostname of the server that the script is running on. getMoneySources() Get information about the sources of income for this run. getPlayer() Get information about the player. getPortHandle(port) Get all data on a port. getPurchasedServerCost(ram) Get cost of purchasing a server. getPurchasedServerLimit() Returns the maximum number of servers you can purchase. getPurchasedServerMaxRam() Returns the maximum RAM that a purchased server can have. getPurchasedServers() Returns an array with the hostnames of all of the servers you have purchased. getPurchasedServerUpgradeCost(hostname, ram) Get cost of upgrading a purchased server to the given ram. getRecentScripts() Get an array of recently killed scripts across all servers. getRunningScript(filename, hostname, args) Get general info about a running script. getScriptExpGain(script, host, args) Get the exp gain of a script. getScriptIncome(script, host, args) Get the income of a script. getScriptLogs(fn, host, args) Get all the logs of a script. getScriptName() Returns the current script name. getScriptRam(script, host) Get the ram cost of a script. getServer(host) Returns a server object for the given server. Defaults to the running script's server if host is not specified. getServerBaseSecurityLevel(host) getServerGrowth(host) Get a server growth parameter. getServerMaxMoney(host) Get maximum money available on a server. getServerMaxRam(host) Get the max RAM on a server. getServerMinSecurityLevel(host) Returns the minimum security level of the target server. getServerMoneyAvailable(host) Get money available on a server. getServerNumPortsRequired(host) Returns the number of open ports required to successfully run NUKE.exe on the specified server. getServerRam(host) getServerRequiredHackingLevel(host) Returns the required hacking level of the target server. getServerSecurityLevel(host) Get server security level. getServerUsedRam(host) Get the used RAM on a server. getSharePower() Calculate your share power. Based on all the active share calls. getTimeSinceLastAug() Returns the amount of time in milliseconds that have passed since you last installed Augmentations. getTotalScriptExpGain() Get the exp gain of all script. getTotalScriptIncome() Get the income of all script. getWeakenTime(host) Get the execution time of a weaken() call. grow(host, opts) Spoof money in a servers bank account, increasing the amount available. growthAnalyze(host, growthAmount, cores) Calculate the number of grow thread needed to grow a server by a certain multiplier. growthAnalyzeSecurity(threads, hostname, cores) Calculate the security increase for a number of thread. hack(host, opts) Steal a servers money. hackAnalyze(host) Get the part of money stolen with a single thread. hackAnalyzeChance(host) Get the chance of successfully hacking a server. hackAnalyzeSecurity(threads, hostname) Get the security increase for a number of thread. hackAnalyzeThreads(host, hackAmount) Predict the effect of hack. hasRootAccess(host) Check if your have root access on a server. httpworm(host) Runs HTTPWorm.exe on a server. isLogEnabled(fn) Checks the status of the logging for the given function. isRunning(script, host, args) Check if a script is running. kill(script) Terminate another script. kill(script, host, args) Terminate another script. killall(host, safetyguard) Terminate all scripts on a server. ls(host, grep) List files on a server. moveTail(x, y, pid) Move a tail window mv(host, source, destination) Move a file on the target server. nFormat(n, format) Format a number nuke(host) Runs NUKE.exe on a server. peek(port) Get a copy of the data from a port without popping it. print(args) Prints one or move values or variables to the script\u2019s logs. printf(format, args) Prints a formatted string to the script\u2019s logs. prompt(txt, options) Prompt the player with an input modal. ps(host) List running scripts on a server. purchaseServer(hostname, ram) Purchase a server. read(filename) Read content of a file. readPort(port) Read data from a port. relaysmtp(host) Runs relaySMTP.exe on a server. renamePurchasedServer(hostname, newName) Rename a purchased server. resizeTail(width, height, pid) Resize a tail window rm(name, host) Delete a file. run(script, numThreads, args) Start another script on the current server. scan(host) Get the list of servers connected to a server. scp(files, destination, source) Copy file between servers. scriptKill(script, host) Kill all scripts with a filename. scriptRunning(script, host) Check if any script with a filename is running. serverExists(host) Returns a boolean denoting whether or not the specified server exists. share() Share your computer with your factions. sleep(millis) Suspends the script for n milliseconds. spawn(script, numThreads, args) Terminate current script and start another in 10s. sprintf(format, args) Format a string. sqlinject(host) Runs SQLInject.exe on a server. tail(fn, host, args) Open the tail window of a script. tFormat(milliseconds, milliPrecision) Format time to readable string toast(msg, variant, duration) Queue a toast (bottom-right notification). tprint(args) Prints one or more values or variables to the Terminal. tprintf(format, values) Prints a raw value or a variable to the Terminal. tryWritePort(port, data) Attempt to write to a port. upgradePurchasedServer(hostname, ram) Upgrade a purchased servers ram. vsprintf(format, args) Format a string with an array of arguments. weaken(host, opts) Reduce a server security level. weakenAnalyze(threads, cores) Predict the effect of weaken. wget(url, target, host) Download a file from the internet. write(filename, data, mode) Write data to a file. writePort(port, data) Write data to a port.","title":"Bitburner.ns"},{"location":"bitburner.ns/#ns-interface","text":"Collection of all functions passed to scripts Signature: export interface NS","title":"NS interface"},{"location":"bitburner.ns/#remarks","text":"Basic ns1 usage example: // Basic ns functions can be used directly getHostname(); // Some related functions are gathered within a common namespace stock.getPrice(); ns1 in-game docs Basic ns2 usage example: export async function main(ns) { // Basic ns functions can be accessed on the ns object ns.getHostname(); // Some related functions are gathered under a sub-property of the ns object ns.stock.getPrice(); // Some functions need to be awaited await ns.hack('n00dles'); } ns2 in-game docs","title":"Remarks"},{"location":"bitburner.ns/#properties","text":"Property Type Description args (string | number | boolean)[] Arguments passed into the script. bladeburner Bladeburner Namespace for bladeburner functions. codingcontract CodingContract Namespace for codingcontract functions. corporation Corporation Namespace for corporation functions. RAM cost: 1022.4 GB enums NSEnums formulas Formulas Namespace for formulas functions. gang Gang Namespace for gang functions. grafting Grafting Namespace for grafting functions. hacknet Hacknet Namespace for hacknet functions. infiltration Infiltration Namespace for infiltration functions. RAM cost: 0 GB singularity Singularity Namespace for singularity functions. RAM cost: 0 GB sleeve Sleeve Namespace for sleeve functions. stanek Stanek Namespace for stanek functions. RAM cost: 0 GB stock TIX Namespace for stock functions. ui UserInterface Namespace for user interface functions. RAM cost: 0 GB","title":"Properties"},{"location":"bitburner.ns/#methods","text":"Method Description alert(msg) Open up a message box. asleep(millis) Suspends the script for n milliseconds. Doesn't block with concurrent calls. You should prefer 'sleep' over 'asleep' except when doing very complex UI work. atExit(f) Add callback function when the script dies brutessh(host) Runs BruteSSH.exe on a server. clear(handle) Clear data from a file. clearLog() Clears the script\u2019s logs. clearPort(handle) Clear data from a port. closeTail(pid) Close the tail window of a script. deleteServer(host) Delete a purchased server. disableLog(fn) Disables logging for the given function. enableLog(fn) Enable logging for a certain function. exec(script, host, numThreads, args) Start another script on any server. exit() Terminates the current script immediately. fileExists(filename, host) Check if a file exists. flags(schema) Parse command line flags. ftpcrack(host) Runs FTPCrack.exe on a server. getBitNodeMultipliers(n, lvl) Get the current Bitnode multipliers. getFavorToDonate() Returns the amount of Faction favor required to be able to donate to a faction. getGrowTime(host) Get the execution time of a grow() call. getHackingLevel() Returns the player\u2019s current hacking level. getHackingMultipliers() Get hacking related multipliers. getHacknetMultipliers() Get hacknet related multipliers. getHackTime(host) Get the execution time of a hack() call. getHostname() Returns a string with the hostname of the server that the script is running on. getMoneySources() Get information about the sources of income for this run. getPlayer() Get information about the player. getPortHandle(port) Get all data on a port. getPurchasedServerCost(ram) Get cost of purchasing a server. getPurchasedServerLimit() Returns the maximum number of servers you can purchase. getPurchasedServerMaxRam() Returns the maximum RAM that a purchased server can have. getPurchasedServers() Returns an array with the hostnames of all of the servers you have purchased. getPurchasedServerUpgradeCost(hostname, ram) Get cost of upgrading a purchased server to the given ram. getRecentScripts() Get an array of recently killed scripts across all servers. getRunningScript(filename, hostname, args) Get general info about a running script. getScriptExpGain(script, host, args) Get the exp gain of a script. getScriptIncome(script, host, args) Get the income of a script. getScriptLogs(fn, host, args) Get all the logs of a script. getScriptName() Returns the current script name. getScriptRam(script, host) Get the ram cost of a script. getServer(host) Returns a server object for the given server. Defaults to the running script's server if host is not specified. getServerBaseSecurityLevel(host) getServerGrowth(host) Get a server growth parameter. getServerMaxMoney(host) Get maximum money available on a server. getServerMaxRam(host) Get the max RAM on a server. getServerMinSecurityLevel(host) Returns the minimum security level of the target server. getServerMoneyAvailable(host) Get money available on a server. getServerNumPortsRequired(host) Returns the number of open ports required to successfully run NUKE.exe on the specified server. getServerRam(host) getServerRequiredHackingLevel(host) Returns the required hacking level of the target server. getServerSecurityLevel(host) Get server security level. getServerUsedRam(host) Get the used RAM on a server. getSharePower() Calculate your share power. Based on all the active share calls. getTimeSinceLastAug() Returns the amount of time in milliseconds that have passed since you last installed Augmentations. getTotalScriptExpGain() Get the exp gain of all script. getTotalScriptIncome() Get the income of all script. getWeakenTime(host) Get the execution time of a weaken() call. grow(host, opts) Spoof money in a servers bank account, increasing the amount available. growthAnalyze(host, growthAmount, cores) Calculate the number of grow thread needed to grow a server by a certain multiplier. growthAnalyzeSecurity(threads, hostname, cores) Calculate the security increase for a number of thread. hack(host, opts) Steal a servers money. hackAnalyze(host) Get the part of money stolen with a single thread. hackAnalyzeChance(host) Get the chance of successfully hacking a server. hackAnalyzeSecurity(threads, hostname) Get the security increase for a number of thread. hackAnalyzeThreads(host, hackAmount) Predict the effect of hack. hasRootAccess(host) Check if your have root access on a server. httpworm(host) Runs HTTPWorm.exe on a server. isLogEnabled(fn) Checks the status of the logging for the given function. isRunning(script, host, args) Check if a script is running. kill(script) Terminate another script. kill(script, host, args) Terminate another script. killall(host, safetyguard) Terminate all scripts on a server. ls(host, grep) List files on a server. moveTail(x, y, pid) Move a tail window mv(host, source, destination) Move a file on the target server. nFormat(n, format) Format a number nuke(host) Runs NUKE.exe on a server. peek(port) Get a copy of the data from a port without popping it. print(args) Prints one or move values or variables to the script\u2019s logs. printf(format, args) Prints a formatted string to the script\u2019s logs. prompt(txt, options) Prompt the player with an input modal. ps(host) List running scripts on a server. purchaseServer(hostname, ram) Purchase a server. read(filename) Read content of a file. readPort(port) Read data from a port. relaysmtp(host) Runs relaySMTP.exe on a server. renamePurchasedServer(hostname, newName) Rename a purchased server. resizeTail(width, height, pid) Resize a tail window rm(name, host) Delete a file. run(script, numThreads, args) Start another script on the current server. scan(host) Get the list of servers connected to a server. scp(files, destination, source) Copy file between servers. scriptKill(script, host) Kill all scripts with a filename. scriptRunning(script, host) Check if any script with a filename is running. serverExists(host) Returns a boolean denoting whether or not the specified server exists. share() Share your computer with your factions. sleep(millis) Suspends the script for n milliseconds. spawn(script, numThreads, args) Terminate current script and start another in 10s. sprintf(format, args) Format a string. sqlinject(host) Runs SQLInject.exe on a server. tail(fn, host, args) Open the tail window of a script. tFormat(milliseconds, milliPrecision) Format time to readable string toast(msg, variant, duration) Queue a toast (bottom-right notification). tprint(args) Prints one or more values or variables to the Terminal. tprintf(format, values) Prints a raw value or a variable to the Terminal. tryWritePort(port, data) Attempt to write to a port. upgradePurchasedServer(hostname, ram) Upgrade a purchased servers ram. vsprintf(format, args) Format a string with an array of arguments. weaken(host, opts) Reduce a server security level. weakenAnalyze(threads, cores) Predict the effect of weaken. wget(url, target, host) Download a file from the internet. write(filename, data, mode) Write data to a file. writePort(port, data) Write data to a port.","title":"Methods"},{"location":"bitburner.ns.movetail/","text":"Home > bitburner > NS > moveTail NS.moveTail() method Move a tail window Signature: moveTail(x: number, y: number, pid?: number): void; Parameters Parameter Type Description x number x coordinate. y number y coordinate. pid number Optional. PID of the script having its tail moved. If omitted, the current script is used. Returns: void Remarks RAM cost: 0 GB Moves a tail window. Coordinates are in screenspace pixels (top left is 0,0)","title":"Bitburner.ns.movetail"},{"location":"bitburner.ns.movetail/#nsmovetail-method","text":"Move a tail window Signature: moveTail(x: number, y: number, pid?: number): void;","title":"NS.moveTail() method"},{"location":"bitburner.ns.movetail/#parameters","text":"Parameter Type Description x number x coordinate. y number y coordinate. pid number Optional. PID of the script having its tail moved. If omitted, the current script is used. Returns: void","title":"Parameters"},{"location":"bitburner.ns.movetail/#remarks","text":"RAM cost: 0 GB Moves a tail window. Coordinates are in screenspace pixels (top left is 0,0)","title":"Remarks"},{"location":"bitburner.ns.mv/","text":"Home > bitburner > NS > mv NS.mv() method Move a file on the target server. Signature: mv(host: string, source: string, destination: string): void; Parameters Parameter Type Description host string Host of target server. source string Filename of the source file. destination string Filename of the destination file. Returns: void Remarks RAM cost: 0 GB NS2 exclusive Move the source file to the specified destination on the target server. This command only works for scripts and text files (.txt). It cannot, however, be used to convert from script to text file, or vice versa. This function can also be used to rename files.","title":"Bitburner.ns.mv"},{"location":"bitburner.ns.mv/#nsmv-method","text":"Move a file on the target server. Signature: mv(host: string, source: string, destination: string): void;","title":"NS.mv() method"},{"location":"bitburner.ns.mv/#parameters","text":"Parameter Type Description host string Host of target server. source string Filename of the source file. destination string Filename of the destination file. Returns: void","title":"Parameters"},{"location":"bitburner.ns.mv/#remarks","text":"RAM cost: 0 GB NS2 exclusive Move the source file to the specified destination on the target server. This command only works for scripts and text files (.txt). It cannot, however, be used to convert from script to text file, or vice versa. This function can also be used to rename files.","title":"Remarks"},{"location":"bitburner.ns.nformat/","text":"Home > bitburner > NS > nFormat NS.nFormat() method Format a number Signature: nFormat(n: number, format: string): string; Parameters Parameter Type Description n number Number to format. format string Formatter. Returns: string Formatted number. Remarks RAM cost: 0 GB Converts a number into a string with the specified formatter. This uses the numeral.js library, so the formatters must be compatible with that. This is the same function that the game itself uses to display numbers. see: http://numeraljs.com/","title":"Bitburner.ns.nformat"},{"location":"bitburner.ns.nformat/#nsnformat-method","text":"Format a number Signature: nFormat(n: number, format: string): string;","title":"NS.nFormat() method"},{"location":"bitburner.ns.nformat/#parameters","text":"Parameter Type Description n number Number to format. format string Formatter. Returns: string Formatted number.","title":"Parameters"},{"location":"bitburner.ns.nformat/#remarks","text":"RAM cost: 0 GB Converts a number into a string with the specified formatter. This uses the numeral.js library, so the formatters must be compatible with that. This is the same function that the game itself uses to display numbers. see: http://numeraljs.com/","title":"Remarks"},{"location":"bitburner.ns.nuke/","text":"Home > bitburner > NS > nuke NS.nuke() method Runs NUKE.exe on a server. Signature: nuke(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Running NUKE.exe on a target server gives you root access which means you can executes scripts on said server. NUKE.exe must exist on your home computer. Example 1 // NS1: nuke(\"foodnstuff\"); Example 2 // NS2: ns.nuke(\"foodnstuff\");","title":"Bitburner.ns.nuke"},{"location":"bitburner.ns.nuke/#nsnuke-method","text":"Runs NUKE.exe on a server. Signature: nuke(host: string): void;","title":"NS.nuke() method"},{"location":"bitburner.ns.nuke/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.nuke/#remarks","text":"RAM cost: 0.05 GB Running NUKE.exe on a target server gives you root access which means you can executes scripts on said server. NUKE.exe must exist on your home computer.","title":"Remarks"},{"location":"bitburner.ns.nuke/#example-1","text":"// NS1: nuke(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.nuke/#example-2","text":"// NS2: ns.nuke(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.peek/","text":"Home > bitburner > NS > peek NS.peek() method Get a copy of the data from a port without popping it. Signature: peek(port: number): PortData; Parameters Parameter Type Description port number Port to peek. Must be an integer between 1 and 20. Returns: PortData Data in the specified port. Remarks RAM cost: 0 GB This function is used to peek at the data from a port. It returns the first element in the specified port without removing that element. If the port is empty, the string \u201cNULL PORT DATA\u201d will be returned.","title":"Bitburner.ns.peek"},{"location":"bitburner.ns.peek/#nspeek-method","text":"Get a copy of the data from a port without popping it. Signature: peek(port: number): PortData;","title":"NS.peek() method"},{"location":"bitburner.ns.peek/#parameters","text":"Parameter Type Description port number Port to peek. Must be an integer between 1 and 20. Returns: PortData Data in the specified port.","title":"Parameters"},{"location":"bitburner.ns.peek/#remarks","text":"RAM cost: 0 GB This function is used to peek at the data from a port. It returns the first element in the specified port without removing that element. If the port is empty, the string \u201cNULL PORT DATA\u201d will be returned.","title":"Remarks"},{"location":"bitburner.ns.print/","text":"Home > bitburner > NS > print NS.print() method Prints one or move values or variables to the script\u2019s logs. Signature: print(...args: any[]): void; Parameters Parameter Type Description args any[] Value(s) to be printed. Returns: void Remarks RAM cost: 0 GB If the argument is a string, you can color code your message by prefixing your string with one of these strings: \"ERROR\" : The whole string will be printed in red. Use this prefix to indicate that an error has occurred. \"SUCCESS\" : The whole string will be printed in green, similar to the default theme of the Terminal. Use this prefix to indicate that something is correct. \"WARN\" : The whole string will be printed in yellow. Use this prefix to indicate that you or a user of your script should be careful of something. \"INFO\" : The whole string will be printed in purplish blue. Use this prefix to remind yourself or a user of your script of something. Think of this prefix as indicating an FYI (for your information). For custom coloring, use ANSI escape sequences. The examples below use the Unicode escape code \\u001b . The color coding also works if \\u001b is replaced with the hexadecimal escape code \\x1b . The Bash escape code \\e is not supported. The octal escape code \\033 is not allowed because the game runs JavaScript in strict mode. Example 1 // NS1 // Default color coding. print(\"ERROR means something's wrong.\"); print(\"SUCCESS means everything's OK.\"); print(\"WARN Tread with caution!\"); print(\"WARNING, warning, danger, danger!\"); print(\"WARNing! Here be dragons.\"); print(\"INFO for your I's only (FYI).\"); print(\"INFOrmation overload!\"); // Custom color coding. var cyan = \"\\u001b[36m\"; var green = \"\\u001b[32m\"; var red = \"\\u001b[31m\"; var reset = \"\\u001b[0m\"; var msgError = red + \"Ugh! What a mess.\" + reset; var msgSuccess = green + \"Well done!\" + reset; var msgMixed = cyan + \"ERROR Should this be in red?\" + reset; print(msgError); print(msgSuccess); print(msgMixed); tail(); Example 2 // NS2 // Default color coding. ns.print(\"ERROR means something's wrong.\"); ns.print(\"SUCCESS means everything's OK.\"); ns.print(\"WARN Tread with caution!\"); ns.print(\"WARNING, warning, danger, danger!\"); ns.print(\"WARNing! Here be dragons.\"); ns.print(\"INFO for your I's only (FYI).\"); ns.print(\"INFOrmation overload!\"); // Custom color coding. const cyan = \"\\u001b[36m\"; const green = \"\\u001b[32m\"; const red = \"\\u001b[31m\"; const reset = \"\\u001b[0m\"; const msgError = \"Ugh! What a mess.\"; const msgSuccess = \"Well done!\"; const msgMixed = \"ERROR Should this be in red?\"; ns.print(`${red + msgError + reset}`); ns.print(`${green + msgSuccess + reset}`); ns.print(`${cyan + msgMixed + reset}`); ns.tail();","title":"Bitburner.ns.print"},{"location":"bitburner.ns.print/#nsprint-method","text":"Prints one or move values or variables to the script\u2019s logs. Signature: print(...args: any[]): void;","title":"NS.print() method"},{"location":"bitburner.ns.print/#parameters","text":"Parameter Type Description args any[] Value(s) to be printed. Returns: void","title":"Parameters"},{"location":"bitburner.ns.print/#remarks","text":"RAM cost: 0 GB If the argument is a string, you can color code your message by prefixing your string with one of these strings: \"ERROR\" : The whole string will be printed in red. Use this prefix to indicate that an error has occurred. \"SUCCESS\" : The whole string will be printed in green, similar to the default theme of the Terminal. Use this prefix to indicate that something is correct. \"WARN\" : The whole string will be printed in yellow. Use this prefix to indicate that you or a user of your script should be careful of something. \"INFO\" : The whole string will be printed in purplish blue. Use this prefix to remind yourself or a user of your script of something. Think of this prefix as indicating an FYI (for your information). For custom coloring, use ANSI escape sequences. The examples below use the Unicode escape code \\u001b . The color coding also works if \\u001b is replaced with the hexadecimal escape code \\x1b . The Bash escape code \\e is not supported. The octal escape code \\033 is not allowed because the game runs JavaScript in strict mode.","title":"Remarks"},{"location":"bitburner.ns.print/#example-1","text":"// NS1 // Default color coding. print(\"ERROR means something's wrong.\"); print(\"SUCCESS means everything's OK.\"); print(\"WARN Tread with caution!\"); print(\"WARNING, warning, danger, danger!\"); print(\"WARNing! Here be dragons.\"); print(\"INFO for your I's only (FYI).\"); print(\"INFOrmation overload!\"); // Custom color coding. var cyan = \"\\u001b[36m\"; var green = \"\\u001b[32m\"; var red = \"\\u001b[31m\"; var reset = \"\\u001b[0m\"; var msgError = red + \"Ugh! What a mess.\" + reset; var msgSuccess = green + \"Well done!\" + reset; var msgMixed = cyan + \"ERROR Should this be in red?\" + reset; print(msgError); print(msgSuccess); print(msgMixed); tail();","title":"Example 1"},{"location":"bitburner.ns.print/#example-2","text":"// NS2 // Default color coding. ns.print(\"ERROR means something's wrong.\"); ns.print(\"SUCCESS means everything's OK.\"); ns.print(\"WARN Tread with caution!\"); ns.print(\"WARNING, warning, danger, danger!\"); ns.print(\"WARNing! Here be dragons.\"); ns.print(\"INFO for your I's only (FYI).\"); ns.print(\"INFOrmation overload!\"); // Custom color coding. const cyan = \"\\u001b[36m\"; const green = \"\\u001b[32m\"; const red = \"\\u001b[31m\"; const reset = \"\\u001b[0m\"; const msgError = \"Ugh! What a mess.\"; const msgSuccess = \"Well done!\"; const msgMixed = \"ERROR Should this be in red?\"; ns.print(`${red + msgError + reset}`); ns.print(`${green + msgSuccess + reset}`); ns.print(`${cyan + msgMixed + reset}`); ns.tail();","title":"Example 2"},{"location":"bitburner.ns.printf/","text":"Home > bitburner > NS > printf NS.printf() method Prints a formatted string to the script\u2019s logs. Signature: printf(format: string, ...args: any[]): void; Parameters Parameter Type Description format string Format of the message. args any[] Value(s) to be printed. Returns: void Remarks RAM cost: 0 GB See print for how to add color to your printed strings. For more detail, see: https://github.com/alexei/sprintf.js Example 1 // NS1 var name = \"Bit\"; var age = 4; printf(\"My name is %s.\", name); printf(\"I'm %d seconds old.\", age); printf(\"My age in binary is %b.\", age); printf(\"My age in scientific notation is %e.\", age); printf(\"In %d seconds, I'll be %s.\", 6, \"Byte\"); printf(\"Am I a nibble? %t\", (4 == age)); tail(); Example 2 // NS2 const name = \"Bit\"; const age = 4; ns.printf(\"My name is %s.\", name); ns.printf(\"I'm %d seconds old.\", age); ns.printf(\"My age in binary is %b.\", age); ns.printf(\"My age in scientific notation is %e.\", age); ns.printf(\"In %d seconds, I'll be %s.\", 6, \"Byte\"); ns.printf(\"Am I a nibble? %t\", (4 == age)); ns.tail();","title":"Bitburner.ns.printf"},{"location":"bitburner.ns.printf/#nsprintf-method","text":"Prints a formatted string to the script\u2019s logs. Signature: printf(format: string, ...args: any[]): void;","title":"NS.printf() method"},{"location":"bitburner.ns.printf/#parameters","text":"Parameter Type Description format string Format of the message. args any[] Value(s) to be printed. Returns: void","title":"Parameters"},{"location":"bitburner.ns.printf/#remarks","text":"RAM cost: 0 GB See print for how to add color to your printed strings. For more detail, see: https://github.com/alexei/sprintf.js","title":"Remarks"},{"location":"bitburner.ns.printf/#example-1","text":"// NS1 var name = \"Bit\"; var age = 4; printf(\"My name is %s.\", name); printf(\"I'm %d seconds old.\", age); printf(\"My age in binary is %b.\", age); printf(\"My age in scientific notation is %e.\", age); printf(\"In %d seconds, I'll be %s.\", 6, \"Byte\"); printf(\"Am I a nibble? %t\", (4 == age)); tail();","title":"Example 1"},{"location":"bitburner.ns.printf/#example-2","text":"// NS2 const name = \"Bit\"; const age = 4; ns.printf(\"My name is %s.\", name); ns.printf(\"I'm %d seconds old.\", age); ns.printf(\"My age in binary is %b.\", age); ns.printf(\"My age in scientific notation is %e.\", age); ns.printf(\"In %d seconds, I'll be %s.\", 6, \"Byte\"); ns.printf(\"Am I a nibble? %t\", (4 == age)); ns.tail();","title":"Example 2"},{"location":"bitburner.ns.prompt/","text":"Home > bitburner > NS > prompt NS.prompt() method Prompt the player with an input modal. Signature: prompt( txt: string, options?: { type?: \"boolean\" | \"text\" | \"select\"; choices?: string[] }, ): Promise<boolean | string>; Parameters Parameter Type Description txt string Text to appear in the prompt dialog box. options { type?: \"boolean\" | \"text\" | \"select\"; choices?: string[] } Options to modify the prompt the player is shown. Returns: Promise<boolean | string> True if the player clicks \u201cYes\u201d; false if the player clicks \u201cNo\u201d; or the value entered by the player. Remarks RAM cost: 0 GB Prompts the player with a dialog box. Here is an explanation of the various options. options.type is not provided to the function. If options.type is left out and only a string is passed to the function, then the default behavior is to create a boolean dialog box. options.type has value undefined or \"boolean\" . A boolean dialog box is created. The player is shown \"Yes\" and \"No\" prompts, which return true and false respectively. The script's execution is halted until the player presses either the \"Yes\" or \"No\" button. options.type has value \"text\" . The player is given a text field to enter free-form text. The script's execution is halted until the player enters some text and/or presses the \"Confirm\" button. options.type has value \"select\" . The player is shown a drop-down field. Choosing type \"select\" will require an array to be passed via the options.choices property. The array can be an array of strings, an array of numbers (not BigInt numbers), or a mixture of both numbers and strings. Any other types of array elements will result in an error or an undefined/unexpected behavior. The options.choices property will be ignored if options.type has a value other than \"select\" . The script's execution is halted until the player chooses one of the provided options and presses the \"Confirm\" button. Example 1 // NS1 // A Yes/No question. The default is to create a boolean dialog box. var queryA = \"Do you enjoy Bitburner?\"; var resultA = prompt(queryA); tprint(queryA + \" \" + resultA); // Another Yes/No question. Can also create a boolean dialog box by explicitly // passing the option {\"type\": \"boolean\"}. var queryB = \"Is programming fun?\"; var resultB = prompt(queryB, { type: \"boolean\" }); tprint(queryB + \" \" + resultB); // Free-form text box. var resultC = prompt(\"Please enter your name.\", { type: \"text\" }); tprint(\"Hello, \" + resultC + \".\"); // A drop-down list. var resultD = prompt(\"Please select your favorite fruit.\", { type: \"select\", choices: [\"Apple\", \"Banana\", \"Orange\", \"Pear\", \"Strawberry\"] }); tprint(\"Your favorite fruit is \" + resultD.toLowerCase() + \".\"); Example 2 // NS2 // A Yes/No question. The default is to create a boolean dialog box. const queryA = \"Do you enjoy Bitburner?\"; const resultA = await ns.prompt(queryA); ns.tprint(`${queryA} ${resultA}`); // Another Yes/No question. Can also create a boolean dialog box by explicitly // passing the option {\"type\": \"boolean\"}. const queryB = \"Is programming fun?\"; const resultB = await ns.prompt(queryB, { type: \"boolean\" }); ns.tprint(`${queryB} ${resultB}`); // Free-form text box. const resultC = await ns.prompt(\"Please enter your name.\", { type: \"text\" }); ns.tprint(`Hello, ${resultC}.`); // A drop-down list. const resultD = await ns.prompt(\"Please select your favorite fruit.\", { type: \"select\", choices: [\"Apple\", \"Banana\", \"Orange\", \"Pear\", \"Strawberry\"] }); ns.tprint(`Your favorite fruit is ${resultD.toLowerCase()}.`);","title":"Bitburner.ns.prompt"},{"location":"bitburner.ns.prompt/#nsprompt-method","text":"Prompt the player with an input modal. Signature: prompt( txt: string, options?: { type?: \"boolean\" | \"text\" | \"select\"; choices?: string[] }, ): Promise<boolean | string>;","title":"NS.prompt() method"},{"location":"bitburner.ns.prompt/#parameters","text":"Parameter Type Description txt string Text to appear in the prompt dialog box. options { type?: \"boolean\" | \"text\" | \"select\"; choices?: string[] } Options to modify the prompt the player is shown. Returns: Promise<boolean | string> True if the player clicks \u201cYes\u201d; false if the player clicks \u201cNo\u201d; or the value entered by the player.","title":"Parameters"},{"location":"bitburner.ns.prompt/#remarks","text":"RAM cost: 0 GB Prompts the player with a dialog box. Here is an explanation of the various options. options.type is not provided to the function. If options.type is left out and only a string is passed to the function, then the default behavior is to create a boolean dialog box. options.type has value undefined or \"boolean\" . A boolean dialog box is created. The player is shown \"Yes\" and \"No\" prompts, which return true and false respectively. The script's execution is halted until the player presses either the \"Yes\" or \"No\" button. options.type has value \"text\" . The player is given a text field to enter free-form text. The script's execution is halted until the player enters some text and/or presses the \"Confirm\" button. options.type has value \"select\" . The player is shown a drop-down field. Choosing type \"select\" will require an array to be passed via the options.choices property. The array can be an array of strings, an array of numbers (not BigInt numbers), or a mixture of both numbers and strings. Any other types of array elements will result in an error or an undefined/unexpected behavior. The options.choices property will be ignored if options.type has a value other than \"select\" . The script's execution is halted until the player chooses one of the provided options and presses the \"Confirm\" button.","title":"Remarks"},{"location":"bitburner.ns.prompt/#example-1","text":"// NS1 // A Yes/No question. The default is to create a boolean dialog box. var queryA = \"Do you enjoy Bitburner?\"; var resultA = prompt(queryA); tprint(queryA + \" \" + resultA); // Another Yes/No question. Can also create a boolean dialog box by explicitly // passing the option {\"type\": \"boolean\"}. var queryB = \"Is programming fun?\"; var resultB = prompt(queryB, { type: \"boolean\" }); tprint(queryB + \" \" + resultB); // Free-form text box. var resultC = prompt(\"Please enter your name.\", { type: \"text\" }); tprint(\"Hello, \" + resultC + \".\"); // A drop-down list. var resultD = prompt(\"Please select your favorite fruit.\", { type: \"select\", choices: [\"Apple\", \"Banana\", \"Orange\", \"Pear\", \"Strawberry\"] }); tprint(\"Your favorite fruit is \" + resultD.toLowerCase() + \".\");","title":"Example 1"},{"location":"bitburner.ns.prompt/#example-2","text":"// NS2 // A Yes/No question. The default is to create a boolean dialog box. const queryA = \"Do you enjoy Bitburner?\"; const resultA = await ns.prompt(queryA); ns.tprint(`${queryA} ${resultA}`); // Another Yes/No question. Can also create a boolean dialog box by explicitly // passing the option {\"type\": \"boolean\"}. const queryB = \"Is programming fun?\"; const resultB = await ns.prompt(queryB, { type: \"boolean\" }); ns.tprint(`${queryB} ${resultB}`); // Free-form text box. const resultC = await ns.prompt(\"Please enter your name.\", { type: \"text\" }); ns.tprint(`Hello, ${resultC}.`); // A drop-down list. const resultD = await ns.prompt(\"Please select your favorite fruit.\", { type: \"select\", choices: [\"Apple\", \"Banana\", \"Orange\", \"Pear\", \"Strawberry\"] }); ns.tprint(`Your favorite fruit is ${resultD.toLowerCase()}.`);","title":"Example 2"},{"location":"bitburner.ns.ps/","text":"Home > bitburner > NS > ps NS.ps() method List running scripts on a server. Signature: ps(host?: string): ProcessInfo[]; Parameters Parameter Type Description host string Host address of the target server. If not specified, it will be the current server\u2019s IP by default. Returns: ProcessInfo [] Array with general information about all scripts running on the specified target server. Remarks RAM cost: 0.2 GB Returns an array with general information about all scripts running on the specified target server. Example 1 // NS1: var scripts = ps(\"home\"); for (var i = 0; i < scripts.length; ++i) { tprint(scripts[i].filename + ' ' + scripts[i].threads); tprint(scripts[i].args); } Example 2 // NS2: const ps = ns.ps(\"home\"); for (let script of ps) { ns.tprint(`${script.filename} ${script.threads}`); ns.tprint(script.args); }","title":"Bitburner.ns.ps"},{"location":"bitburner.ns.ps/#nsps-method","text":"List running scripts on a server. Signature: ps(host?: string): ProcessInfo[];","title":"NS.ps() method"},{"location":"bitburner.ns.ps/#parameters","text":"Parameter Type Description host string Host address of the target server. If not specified, it will be the current server\u2019s IP by default. Returns: ProcessInfo [] Array with general information about all scripts running on the specified target server.","title":"Parameters"},{"location":"bitburner.ns.ps/#remarks","text":"RAM cost: 0.2 GB Returns an array with general information about all scripts running on the specified target server.","title":"Remarks"},{"location":"bitburner.ns.ps/#example-1","text":"// NS1: var scripts = ps(\"home\"); for (var i = 0; i < scripts.length; ++i) { tprint(scripts[i].filename + ' ' + scripts[i].threads); tprint(scripts[i].args); }","title":"Example 1"},{"location":"bitburner.ns.ps/#example-2","text":"// NS2: const ps = ns.ps(\"home\"); for (let script of ps) { ns.tprint(`${script.filename} ${script.threads}`); ns.tprint(script.args); }","title":"Example 2"},{"location":"bitburner.ns.purchaseserver/","text":"Home > bitburner > NS > purchaseServer NS.purchaseServer() method Purchase a server. Signature: purchaseServer(hostname: string, ram: number): string; Parameters Parameter Type Description hostname string Host of the purchased server. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: string The hostname of the newly purchased server. Remarks 2.25 GB Purchased a server with the specified hostname and amount of RAM. The hostname argument can be any data type, but it will be converted to a string and have whitespace removed. Anything that resolves to an empty string will cause the function to fail. If there is already a server with the specified hostname, then the function will automatically append a number at the end of the hostname argument value until it finds a unique hostname. For example, if the script calls purchaseServer(\u201cfoo\u201d, 4) but a server named \u201cfoo\u201d already exists, the it will automatically change the hostname to foo-0 . If there is already a server with the hostname foo-0 , then it will change the hostname to foo-1 , and so on. Note that there is a maximum limit to the amount of servers you can purchase. Returns the hostname of the newly purchased server as a string. If the function fails to purchase a server, then it will return an empty string. The function will fail if the arguments passed in are invalid, if the player does not have enough money to purchase the specified server, or if the player has exceeded the maximum amount of servers. Example 1 // NS1: var ram = 64; var prefix = \"pserv-\"; for (i = 0; i < 5; ++i) { purchaseServer(prefix + i, ram); } Example 2 // NS2: const ram = 64; const prefix = \"pserv-\"; for (i = 0; i < 5; ++i) { ns.purchaseServer(prefix + i, ram); }","title":"Bitburner.ns.purchaseserver"},{"location":"bitburner.ns.purchaseserver/#nspurchaseserver-method","text":"Purchase a server. Signature: purchaseServer(hostname: string, ram: number): string;","title":"NS.purchaseServer() method"},{"location":"bitburner.ns.purchaseserver/#parameters","text":"Parameter Type Description hostname string Host of the purchased server. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: string The hostname of the newly purchased server.","title":"Parameters"},{"location":"bitburner.ns.purchaseserver/#remarks","text":"2.25 GB Purchased a server with the specified hostname and amount of RAM. The hostname argument can be any data type, but it will be converted to a string and have whitespace removed. Anything that resolves to an empty string will cause the function to fail. If there is already a server with the specified hostname, then the function will automatically append a number at the end of the hostname argument value until it finds a unique hostname. For example, if the script calls purchaseServer(\u201cfoo\u201d, 4) but a server named \u201cfoo\u201d already exists, the it will automatically change the hostname to foo-0 . If there is already a server with the hostname foo-0 , then it will change the hostname to foo-1 , and so on. Note that there is a maximum limit to the amount of servers you can purchase. Returns the hostname of the newly purchased server as a string. If the function fails to purchase a server, then it will return an empty string. The function will fail if the arguments passed in are invalid, if the player does not have enough money to purchase the specified server, or if the player has exceeded the maximum amount of servers.","title":"Remarks"},{"location":"bitburner.ns.purchaseserver/#example-1","text":"// NS1: var ram = 64; var prefix = \"pserv-\"; for (i = 0; i < 5; ++i) { purchaseServer(prefix + i, ram); }","title":"Example 1"},{"location":"bitburner.ns.purchaseserver/#example-2","text":"// NS2: const ram = 64; const prefix = \"pserv-\"; for (i = 0; i < 5; ++i) { ns.purchaseServer(prefix + i, ram); }","title":"Example 2"},{"location":"bitburner.ns.read/","text":"Home > bitburner > NS > read NS.read() method Read content of a file. Signature: read(filename: string): string; Parameters Parameter Type Description filename string Name of the file to be read. Returns: string Data in the specified text file. Remarks RAM cost: 0 GB This function is used to read data from a text file (.txt) or script (.script, .js). This function will return the data in the specified file. If the file does not exist, an empty string will be returned.","title":"Bitburner.ns.read"},{"location":"bitburner.ns.read/#nsread-method","text":"Read content of a file. Signature: read(filename: string): string;","title":"NS.read() method"},{"location":"bitburner.ns.read/#parameters","text":"Parameter Type Description filename string Name of the file to be read. Returns: string Data in the specified text file.","title":"Parameters"},{"location":"bitburner.ns.read/#remarks","text":"RAM cost: 0 GB This function is used to read data from a text file (.txt) or script (.script, .js). This function will return the data in the specified file. If the file does not exist, an empty string will be returned.","title":"Remarks"},{"location":"bitburner.ns.readport/","text":"Home > bitburner > NS > readPort NS.readPort() method Read data from a port. Signature: readPort(port: number): PortData; Parameters Parameter Type Description port number Returns: PortData the data read. Remarks RAM cost: 0 GB Read data from that port. A port is a serialized queue. This function will remove the first element from that queue and return it. If the queue is empty, then the string \u201cNULL PORT DATA\u201d will be returned.","title":"Bitburner.ns.readport"},{"location":"bitburner.ns.readport/#nsreadport-method","text":"Read data from a port. Signature: readPort(port: number): PortData;","title":"NS.readPort() method"},{"location":"bitburner.ns.readport/#parameters","text":"Parameter Type Description port number Returns: PortData the data read.","title":"Parameters"},{"location":"bitburner.ns.readport/#remarks","text":"RAM cost: 0 GB Read data from that port. A port is a serialized queue. This function will remove the first element from that queue and return it. If the queue is empty, then the string \u201cNULL PORT DATA\u201d will be returned.","title":"Remarks"},{"location":"bitburner.ns.relaysmtp/","text":"Home > bitburner > NS > relaysmtp NS.relaysmtp() method Runs relaySMTP.exe on a server. Signature: relaysmtp(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Runs the relaySMTP.exe program on the target server. relaySMTP.exe must exist on your home computer. Example 1 // NS1: relaysmtp(\"foodnstuff\"); Example 2 // NS2: ns.relaysmtp(\"foodnstuff\");","title":"Bitburner.ns.relaysmtp"},{"location":"bitburner.ns.relaysmtp/#nsrelaysmtp-method","text":"Runs relaySMTP.exe on a server. Signature: relaysmtp(host: string): void;","title":"NS.relaysmtp() method"},{"location":"bitburner.ns.relaysmtp/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.relaysmtp/#remarks","text":"RAM cost: 0.05 GB Runs the relaySMTP.exe program on the target server. relaySMTP.exe must exist on your home computer.","title":"Remarks"},{"location":"bitburner.ns.relaysmtp/#example-1","text":"// NS1: relaysmtp(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.relaysmtp/#example-2","text":"// NS2: ns.relaysmtp(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.renamepurchasedserver/","text":"Home > bitburner > NS > renamePurchasedServer NS.renamePurchasedServer() method Rename a purchased server. Signature: renamePurchasedServer(hostname: string, newName: string): boolean; Parameters Parameter Type Description hostname string current server hostname newName string new server hostname Returns: boolean True if the upgrade succeeded. Remarks RAM cost: 2.00 GB","title":"Bitburner.ns.renamepurchasedserver"},{"location":"bitburner.ns.renamepurchasedserver/#nsrenamepurchasedserver-method","text":"Rename a purchased server. Signature: renamePurchasedServer(hostname: string, newName: string): boolean;","title":"NS.renamePurchasedServer() method"},{"location":"bitburner.ns.renamepurchasedserver/#parameters","text":"Parameter Type Description hostname string current server hostname newName string new server hostname Returns: boolean True if the upgrade succeeded.","title":"Parameters"},{"location":"bitburner.ns.renamepurchasedserver/#remarks","text":"RAM cost: 2.00 GB","title":"Remarks"},{"location":"bitburner.ns.resizetail/","text":"Home > bitburner > NS > resizeTail NS.resizeTail() method Resize a tail window Signature: resizeTail(width: number, height: number, pid?: number): void; Parameters Parameter Type Description width number width of the window. height number height of the window. pid number Optional. PID of the script having its tail resized. If omitted, the current script is used. Returns: void Remarks RAM cost: 0 GB Resize a tail window. Size are in pixel","title":"Bitburner.ns.resizetail"},{"location":"bitburner.ns.resizetail/#nsresizetail-method","text":"Resize a tail window Signature: resizeTail(width: number, height: number, pid?: number): void;","title":"NS.resizeTail() method"},{"location":"bitburner.ns.resizetail/#parameters","text":"Parameter Type Description width number width of the window. height number height of the window. pid number Optional. PID of the script having its tail resized. If omitted, the current script is used. Returns: void","title":"Parameters"},{"location":"bitburner.ns.resizetail/#remarks","text":"RAM cost: 0 GB Resize a tail window. Size are in pixel","title":"Remarks"},{"location":"bitburner.ns.rm/","text":"Home > bitburner > NS > rm NS.rm() method Delete a file. Signature: rm(name: string, host?: string): boolean; Parameters Parameter Type Description name string Filename of file to remove. Must include the extension. host string Host Address of the server on which to delete the file. Optional. Defaults to current server. Returns: boolean True if it successfully deletes the file, and false otherwise. Remarks RAM cost: 1 GB Removes the specified file from the current server. This function works for every file type except message (.msg) files.","title":"Bitburner.ns.rm"},{"location":"bitburner.ns.rm/#nsrm-method","text":"Delete a file. Signature: rm(name: string, host?: string): boolean;","title":"NS.rm() method"},{"location":"bitburner.ns.rm/#parameters","text":"Parameter Type Description name string Filename of file to remove. Must include the extension. host string Host Address of the server on which to delete the file. Optional. Defaults to current server. Returns: boolean True if it successfully deletes the file, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.rm/#remarks","text":"RAM cost: 1 GB Removes the specified file from the current server. This function works for every file type except message (.msg) files.","title":"Remarks"},{"location":"bitburner.ns.run/","text":"Home > bitburner > NS > run NS.run() method Start another script on the current server. Signature: run(script: string, numThreads?: number, ...args: (string | number | boolean)[]): number; Parameters Parameter Type Description script string Filename of script to run. numThreads number Optional thread count for new script. Set to 1 by default. Will be rounded to nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the second argument numThreads must be filled in with a value. Returns: number Returns the PID of a successfully started script, and 0 otherwise. Remarks RAM cost: 1 GB Run a script as a separate process. This function can only be used to run scripts located on the current server (the server running the script that calls this function). Requires a significant amount of RAM to run this command. If the script was successfully started, then this functions returns the PID of that script. Otherwise, it returns 0. PID stands for Process ID. The PID is a unique identifier for each script. The PID will always be a positive integer. Running this function with a numThreads argument of 0 or less will cause a runtime error. Example 1 // NS1: //The simplest way to use the run command is to call it with just the script name. The following example will run \u2018foo.script\u2019 single-threaded with no arguments: run(\"foo.script\"); //The following example will run \u2018foo.script\u2019 but with 5 threads instead of single-threaded: run(\"foo.script\", 5); //This next example will run \u2018foo.script\u2019 single-threaded, and will pass the string \u2018foodnstuff\u2019 into the script as an argument: run(\"foo.script\", 1, 'foodnstuff'); Example 2 // NS2: //The simplest way to use the run command is to call it with just the script name. The following example will run \u2018foo.script\u2019 single-threaded with no arguments: ns.run(\"foo.script\"); //The following example will run \u2018foo.script\u2019 but with 5 threads instead of single-threaded: ns.run(\"foo.script\", 5); //This next example will run \u2018foo.script\u2019 single-threaded, and will pass the string \u2018foodnstuff\u2019 into the script as an argument: ns.run(\"foo.script\", 1, 'foodnstuff');","title":"Bitburner.ns.run"},{"location":"bitburner.ns.run/#nsrun-method","text":"Start another script on the current server. Signature: run(script: string, numThreads?: number, ...args: (string | number | boolean)[]): number;","title":"NS.run() method"},{"location":"bitburner.ns.run/#parameters","text":"Parameter Type Description script string Filename of script to run. numThreads number Optional thread count for new script. Set to 1 by default. Will be rounded to nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Note that if any arguments are being passed into the new script, then the second argument numThreads must be filled in with a value. Returns: number Returns the PID of a successfully started script, and 0 otherwise.","title":"Parameters"},{"location":"bitburner.ns.run/#remarks","text":"RAM cost: 1 GB Run a script as a separate process. This function can only be used to run scripts located on the current server (the server running the script that calls this function). Requires a significant amount of RAM to run this command. If the script was successfully started, then this functions returns the PID of that script. Otherwise, it returns 0. PID stands for Process ID. The PID is a unique identifier for each script. The PID will always be a positive integer. Running this function with a numThreads argument of 0 or less will cause a runtime error.","title":"Remarks"},{"location":"bitburner.ns.run/#example-1","text":"// NS1: //The simplest way to use the run command is to call it with just the script name. The following example will run \u2018foo.script\u2019 single-threaded with no arguments: run(\"foo.script\"); //The following example will run \u2018foo.script\u2019 but with 5 threads instead of single-threaded: run(\"foo.script\", 5); //This next example will run \u2018foo.script\u2019 single-threaded, and will pass the string \u2018foodnstuff\u2019 into the script as an argument: run(\"foo.script\", 1, 'foodnstuff');","title":"Example 1"},{"location":"bitburner.ns.run/#example-2","text":"// NS2: //The simplest way to use the run command is to call it with just the script name. The following example will run \u2018foo.script\u2019 single-threaded with no arguments: ns.run(\"foo.script\"); //The following example will run \u2018foo.script\u2019 but with 5 threads instead of single-threaded: ns.run(\"foo.script\", 5); //This next example will run \u2018foo.script\u2019 single-threaded, and will pass the string \u2018foodnstuff\u2019 into the script as an argument: ns.run(\"foo.script\", 1, 'foodnstuff');","title":"Example 2"},{"location":"bitburner.ns.scan/","text":"Home > bitburner > NS > scan NS.scan() method Get the list of servers connected to a server. Signature: scan(host?: string): string[]; Parameters Parameter Type Description host string Optional. Hostname of the server to scan, default to current server. Returns: string[] Returns an array of hostnames. Remarks RAM cost: 0.2 GB Returns an array containing the hostnames of all servers that are one node way from the specified target server. The hostnames in the returned array are strings. Example 1 // NS1 // All servers that are one hop from the current server. tprint(\"Neighbors of current server.\"); var neighbor = scan(); for (var i = 0; i < neighbor.length; i++) { tprint(neighbor[i]); } // All neighbors of n00dles. var target = \"n00dles\"; neighbor = scan(target); tprintf(\"Neighbors of %s.\", target); for (var i = 0; i < neighbor.length; i++) { tprint(neighbor[i]); } Example 2 // NS2 // All servers that are one hop from the current server. ns.tprint(\"Neighbors of current server.\"); let neighbor = ns.scan(); for (let i = 0; i < neighbor.length; i++) { ns.tprint(neighbor[i]); } // All neighbors of n00dles. const target = \"n00dles\"; neighbor = ns.scan(target); ns.tprintf(\"Neighbors of %s.\", target); for (let i = 0; i < neighbor.length; i++) { ns.tprint(neighbor[i]); }","title":"Bitburner.ns.scan"},{"location":"bitburner.ns.scan/#nsscan-method","text":"Get the list of servers connected to a server. Signature: scan(host?: string): string[];","title":"NS.scan() method"},{"location":"bitburner.ns.scan/#parameters","text":"Parameter Type Description host string Optional. Hostname of the server to scan, default to current server. Returns: string[] Returns an array of hostnames.","title":"Parameters"},{"location":"bitburner.ns.scan/#remarks","text":"RAM cost: 0.2 GB Returns an array containing the hostnames of all servers that are one node way from the specified target server. The hostnames in the returned array are strings.","title":"Remarks"},{"location":"bitburner.ns.scan/#example-1","text":"// NS1 // All servers that are one hop from the current server. tprint(\"Neighbors of current server.\"); var neighbor = scan(); for (var i = 0; i < neighbor.length; i++) { tprint(neighbor[i]); } // All neighbors of n00dles. var target = \"n00dles\"; neighbor = scan(target); tprintf(\"Neighbors of %s.\", target); for (var i = 0; i < neighbor.length; i++) { tprint(neighbor[i]); }","title":"Example 1"},{"location":"bitburner.ns.scan/#example-2","text":"// NS2 // All servers that are one hop from the current server. ns.tprint(\"Neighbors of current server.\"); let neighbor = ns.scan(); for (let i = 0; i < neighbor.length; i++) { ns.tprint(neighbor[i]); } // All neighbors of n00dles. const target = \"n00dles\"; neighbor = ns.scan(target); ns.tprintf(\"Neighbors of %s.\", target); for (let i = 0; i < neighbor.length; i++) { ns.tprint(neighbor[i]); }","title":"Example 2"},{"location":"bitburner.ns.scp/","text":"Home > bitburner > NS > scp NS.scp() method Copy file between servers. Signature: scp(files: string | string[], destination: string, source?: string): boolean; Parameters Parameter Type Description files string | string[] Filename or an array of filenames of script/literature files to copy. destination string Host of the destination server, which is the server to which the file will be copied. source string Host of the source server, which is the server from which the file will be copied. This argument is optional and if it\u2019s omitted the source will be the current server. Returns: boolean True if the file is successfully copied over and false otherwise. If the files argument is an array then this function will return false if any of the operations failed. Remarks RAM cost: 0.6 GB Copies a script or literature (.lit) file(s) to another server. The files argument can be either a string specifying a single file to copy, or an array of strings specifying multiple files to copy. Example 1 // NS1: //Copies foo.lit from the helios server to the home computer: scp(\"foo.lit\", \"home\", \"helios\"); //Tries to copy three files from rothman-uni to home computer: files = [\"foo1.lit\", \"foo2.script\", \"foo3.script\"]; scp(files, \"home\", \"rothman-uni\"); Example 2 // NS2: //Copies foo.lit from the helios server to the home computer: ns.scp(\"foo.lit\", \"home\", \"helios\" ); //Tries to copy three files from rothman-uni to home computer: files = [\"foo1.lit\", \"foo2.script\", \"foo3.script\"]; ns.scp(files, \"home\", \"rothman-uni\"); Example 3 //ns2, copies files from home to a target server const server = ns.args[0]; const files = [\"hack.js\",\"weaken.js\",\"grow.js\"]; ns.scp(files, server, \"home\");","title":"Bitburner.ns.scp"},{"location":"bitburner.ns.scp/#nsscp-method","text":"Copy file between servers. Signature: scp(files: string | string[], destination: string, source?: string): boolean;","title":"NS.scp() method"},{"location":"bitburner.ns.scp/#parameters","text":"Parameter Type Description files string | string[] Filename or an array of filenames of script/literature files to copy. destination string Host of the destination server, which is the server to which the file will be copied. source string Host of the source server, which is the server from which the file will be copied. This argument is optional and if it\u2019s omitted the source will be the current server. Returns: boolean True if the file is successfully copied over and false otherwise. If the files argument is an array then this function will return false if any of the operations failed.","title":"Parameters"},{"location":"bitburner.ns.scp/#remarks","text":"RAM cost: 0.6 GB Copies a script or literature (.lit) file(s) to another server. The files argument can be either a string specifying a single file to copy, or an array of strings specifying multiple files to copy.","title":"Remarks"},{"location":"bitburner.ns.scp/#example-1","text":"// NS1: //Copies foo.lit from the helios server to the home computer: scp(\"foo.lit\", \"home\", \"helios\"); //Tries to copy three files from rothman-uni to home computer: files = [\"foo1.lit\", \"foo2.script\", \"foo3.script\"]; scp(files, \"home\", \"rothman-uni\");","title":"Example 1"},{"location":"bitburner.ns.scp/#example-2","text":"// NS2: //Copies foo.lit from the helios server to the home computer: ns.scp(\"foo.lit\", \"home\", \"helios\" ); //Tries to copy three files from rothman-uni to home computer: files = [\"foo1.lit\", \"foo2.script\", \"foo3.script\"]; ns.scp(files, \"home\", \"rothman-uni\");","title":"Example 2"},{"location":"bitburner.ns.scp/#example-3","text":"//ns2, copies files from home to a target server const server = ns.args[0]; const files = [\"hack.js\",\"weaken.js\",\"grow.js\"]; ns.scp(files, server, \"home\");","title":"Example 3"},{"location":"bitburner.ns.scriptkill/","text":"Home > bitburner > NS > scriptKill NS.scriptKill() method Kill all scripts with a filename. Signature: scriptKill(script: string, host: string): boolean; Parameters Parameter Type Description script string Filename of script to kill. This is case-sensitive. host string Host of target server. Returns: boolean true if one or more scripts were successfully killed, and false if none were. Remarks RAM cost: 1 GB Kills all scripts with the specified filename on the target server specified by hostname, regardless of arguments.","title":"Bitburner.ns.scriptkill"},{"location":"bitburner.ns.scriptkill/#nsscriptkill-method","text":"Kill all scripts with a filename. Signature: scriptKill(script: string, host: string): boolean;","title":"NS.scriptKill() method"},{"location":"bitburner.ns.scriptkill/#parameters","text":"Parameter Type Description script string Filename of script to kill. This is case-sensitive. host string Host of target server. Returns: boolean true if one or more scripts were successfully killed, and false if none were.","title":"Parameters"},{"location":"bitburner.ns.scriptkill/#remarks","text":"RAM cost: 1 GB Kills all scripts with the specified filename on the target server specified by hostname, regardless of arguments.","title":"Remarks"},{"location":"bitburner.ns.scriptrunning/","text":"Home > bitburner > NS > scriptRunning NS.scriptRunning() method Check if any script with a filename is running. Signature: scriptRunning(script: string, host: string): boolean; Parameters Parameter Type Description script string Filename of script to check. This is case-sensitive. host string Host of target server. Returns: boolean True if the specified script is running, and false otherwise. Remarks RAM cost: 1 GB Returns a boolean indicating whether any instance of the specified script is running on the target server, regardless of its arguments. This is different than the isRunning function because it does not try to identify a specific instance of a running script by its arguments. Example 1 // NS1: //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise: scriptRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is any script named \u201cfoo.script\u201d running on the current server, and false otherwise: scriptRunning(\"foo.script\", getHostname()); * Example 2 // NS2: //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise: ns.scriptRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is any script named \u201cfoo.script\u201d running on the current server, and false otherwise: ns.scriptRunning(\"foo.script\", ns.getHostname());","title":"Bitburner.ns.scriptrunning"},{"location":"bitburner.ns.scriptrunning/#nsscriptrunning-method","text":"Check if any script with a filename is running. Signature: scriptRunning(script: string, host: string): boolean;","title":"NS.scriptRunning() method"},{"location":"bitburner.ns.scriptrunning/#parameters","text":"Parameter Type Description script string Filename of script to check. This is case-sensitive. host string Host of target server. Returns: boolean True if the specified script is running, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.scriptrunning/#remarks","text":"RAM cost: 1 GB Returns a boolean indicating whether any instance of the specified script is running on the target server, regardless of its arguments. This is different than the isRunning function because it does not try to identify a specific instance of a running script by its arguments.","title":"Remarks"},{"location":"bitburner.ns.scriptrunning/#example-1","text":"// NS1: //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise: scriptRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is any script named \u201cfoo.script\u201d running on the current server, and false otherwise: scriptRunning(\"foo.script\", getHostname()); *","title":"Example 1"},{"location":"bitburner.ns.scriptrunning/#example-2","text":"// NS2: //The function call will return true if there is any script named foo.script running on the foodnstuff server, and false otherwise: ns.scriptRunning(\"foo.script\", \"foodnstuff\"); //The function call will return true if there is any script named \u201cfoo.script\u201d running on the current server, and false otherwise: ns.scriptRunning(\"foo.script\", ns.getHostname());","title":"Example 2"},{"location":"bitburner.ns.serverexists/","text":"Home > bitburner > NS > serverExists NS.serverExists() method Returns a boolean denoting whether or not the specified server exists. Signature: serverExists(host: string): boolean; Parameters Parameter Type Description host string Host of target server. Returns: boolean True if specified server exists, and false otherwise. Remarks RAM cost: 0.1 GB","title":"Bitburner.ns.serverexists"},{"location":"bitburner.ns.serverexists/#nsserverexists-method","text":"Returns a boolean denoting whether or not the specified server exists. Signature: serverExists(host: string): boolean;","title":"NS.serverExists() method"},{"location":"bitburner.ns.serverexists/#parameters","text":"Parameter Type Description host string Host of target server. Returns: boolean True if specified server exists, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.serverexists/#remarks","text":"RAM cost: 0.1 GB","title":"Remarks"},{"location":"bitburner.ns.share/","text":"Home > bitburner > NS > share NS.share() method Share your computer with your factions. Signature: share(): Promise<void>; Returns: Promise<void> Remarks RAM cost: 2.4 GB Increases your rep gain of hacking contracts while share is called. Scales with thread count.","title":"Bitburner.ns.share"},{"location":"bitburner.ns.share/#nsshare-method","text":"Share your computer with your factions. Signature: share(): Promise<void>; Returns: Promise<void>","title":"NS.share() method"},{"location":"bitburner.ns.share/#remarks","text":"RAM cost: 2.4 GB Increases your rep gain of hacking contracts while share is called. Scales with thread count.","title":"Remarks"},{"location":"bitburner.ns.singularity/","text":"Home > bitburner > NS > singularity NS.singularity property Namespace for singularity functions. RAM cost: 0 GB Signature: readonly singularity: Singularity;","title":"Bitburner.ns.singularity"},{"location":"bitburner.ns.singularity/#nssingularity-property","text":"Namespace for singularity functions. RAM cost: 0 GB Signature: readonly singularity: Singularity;","title":"NS.singularity property"},{"location":"bitburner.ns.sleep/","text":"Home > bitburner > NS > sleep NS.sleep() method Suspends the script for n milliseconds. Signature: sleep(millis: number): Promise<true>; Parameters Parameter Type Description millis number Number of milliseconds to sleep. Returns: Promise<true> Remarks RAM cost: 0 GB Example 1 // NS1: // This will count from 1 to 10 in your terminal, with one number every 5 seconds for (var i=0; i<10; i++) { tprint(i + 1); sleep(5000); } Example 2 // NS2: // This will count from 1 to 10 in your terminal, with one number every 5 seconds for (var i=0; i<10; i++) { ns.tprint(i + 1); await ns.sleep(5000); }","title":"Bitburner.ns.sleep"},{"location":"bitburner.ns.sleep/#nssleep-method","text":"Suspends the script for n milliseconds. Signature: sleep(millis: number): Promise<true>;","title":"NS.sleep() method"},{"location":"bitburner.ns.sleep/#parameters","text":"Parameter Type Description millis number Number of milliseconds to sleep. Returns: Promise<true>","title":"Parameters"},{"location":"bitburner.ns.sleep/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.sleep/#example-1","text":"// NS1: // This will count from 1 to 10 in your terminal, with one number every 5 seconds for (var i=0; i<10; i++) { tprint(i + 1); sleep(5000); }","title":"Example 1"},{"location":"bitburner.ns.sleep/#example-2","text":"// NS2: // This will count from 1 to 10 in your terminal, with one number every 5 seconds for (var i=0; i<10; i++) { ns.tprint(i + 1); await ns.sleep(5000); }","title":"Example 2"},{"location":"bitburner.ns.sleeve/","text":"Home > bitburner > NS > sleeve NS.sleeve property Namespace for sleeve functions. Signature: readonly sleeve: Sleeve; Remarks RAM cost: 0 GB","title":"Bitburner.ns.sleeve"},{"location":"bitburner.ns.sleeve/#nssleeve-property","text":"Namespace for sleeve functions. Signature: readonly sleeve: Sleeve;","title":"NS.sleeve property"},{"location":"bitburner.ns.sleeve/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.spawn/","text":"Home > bitburner > NS > spawn NS.spawn() method Terminate current script and start another in 10s. Signature: spawn(script: string, numThreads?: number, ...args: (string | number | boolean)[]): void; Parameters Parameter Type Description script string Filename of script to execute. numThreads number Number of threads to spawn new script with. Will be rounded to nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Returns: void Remarks RAM cost: 2 GB Terminates the current script, and then after a delay of about 10 seconds it will execute the newly-specified script. The purpose of this function is to execute a new script without being constrained by the RAM usage of the current one. This function can only be used to run scripts on the local server. Because this function immediately terminates the script, it does not have a return value. Running this function with a numThreads argument of 0 or less will cause a runtime error. Example 1 // NS1: //The following example will execute the script \u2018foo.script\u2019 with 10 threads and the arguments \u2018foodnstuff\u2019 and 90: spawn('foo.script', 10, 'foodnstuff', 90); Example 2 // NS2: //The following example will execute the script \u2018foo.script\u2019 with 10 threads and the arguments \u2018foodnstuff\u2019 and 90: ns.spawn('foo.script', 10, 'foodnstuff', 90);","title":"Bitburner.ns.spawn"},{"location":"bitburner.ns.spawn/#nsspawn-method","text":"Terminate current script and start another in 10s. Signature: spawn(script: string, numThreads?: number, ...args: (string | number | boolean)[]): void;","title":"NS.spawn() method"},{"location":"bitburner.ns.spawn/#parameters","text":"Parameter Type Description script string Filename of script to execute. numThreads number Number of threads to spawn new script with. Will be rounded to nearest integer. args (string | number | boolean)[] Additional arguments to pass into the new script that is being run. Returns: void","title":"Parameters"},{"location":"bitburner.ns.spawn/#remarks","text":"RAM cost: 2 GB Terminates the current script, and then after a delay of about 10 seconds it will execute the newly-specified script. The purpose of this function is to execute a new script without being constrained by the RAM usage of the current one. This function can only be used to run scripts on the local server. Because this function immediately terminates the script, it does not have a return value. Running this function with a numThreads argument of 0 or less will cause a runtime error.","title":"Remarks"},{"location":"bitburner.ns.spawn/#example-1","text":"// NS1: //The following example will execute the script \u2018foo.script\u2019 with 10 threads and the arguments \u2018foodnstuff\u2019 and 90: spawn('foo.script', 10, 'foodnstuff', 90);","title":"Example 1"},{"location":"bitburner.ns.spawn/#example-2","text":"// NS2: //The following example will execute the script \u2018foo.script\u2019 with 10 threads and the arguments \u2018foodnstuff\u2019 and 90: ns.spawn('foo.script', 10, 'foodnstuff', 90);","title":"Example 2"},{"location":"bitburner.ns.sprintf/","text":"Home > bitburner > NS > sprintf NS.sprintf() method Format a string. Signature: sprintf(format: string, ...args: any[]): string; Parameters Parameter Type Description format string String to format. args any[] Formatting arguments. Returns: string Formatted text. Remarks RAM cost: 0 GB see: https://github.com/alexei/sprintf.js","title":"Bitburner.ns.sprintf"},{"location":"bitburner.ns.sprintf/#nssprintf-method","text":"Format a string. Signature: sprintf(format: string, ...args: any[]): string;","title":"NS.sprintf() method"},{"location":"bitburner.ns.sprintf/#parameters","text":"Parameter Type Description format string String to format. args any[] Formatting arguments. Returns: string Formatted text.","title":"Parameters"},{"location":"bitburner.ns.sprintf/#remarks","text":"RAM cost: 0 GB see: https://github.com/alexei/sprintf.js","title":"Remarks"},{"location":"bitburner.ns.sqlinject/","text":"Home > bitburner > NS > sqlinject NS.sqlinject() method Runs SQLInject.exe on a server. Signature: sqlinject(host: string): void; Parameters Parameter Type Description host string Hostname of the target server. Returns: void Remarks RAM cost: 0.05 GB Example 1 // NS1: sqlinject(\"foodnstuff\"); Example 2 // NS2: ns.sqlinject(\"foodnstuff\");","title":"Bitburner.ns.sqlinject"},{"location":"bitburner.ns.sqlinject/#nssqlinject-method","text":"Runs SQLInject.exe on a server. Signature: sqlinject(host: string): void;","title":"NS.sqlinject() method"},{"location":"bitburner.ns.sqlinject/#parameters","text":"Parameter Type Description host string Hostname of the target server. Returns: void","title":"Parameters"},{"location":"bitburner.ns.sqlinject/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.ns.sqlinject/#example-1","text":"// NS1: sqlinject(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.sqlinject/#example-2","text":"// NS2: ns.sqlinject(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.stanek/","text":"Home > bitburner > NS > stanek NS.stanek property Namespace for stanek functions. RAM cost: 0 GB Signature: readonly stanek: Stanek;","title":"Bitburner.ns.stanek"},{"location":"bitburner.ns.stanek/#nsstanek-property","text":"Namespace for stanek functions. RAM cost: 0 GB Signature: readonly stanek: Stanek;","title":"NS.stanek property"},{"location":"bitburner.ns.stock/","text":"Home > bitburner > NS > stock NS.stock property Namespace for stock functions. Signature: readonly stock: TIX; Remarks RAM cost: 0 GB","title":"Bitburner.ns.stock"},{"location":"bitburner.ns.stock/#nsstock-property","text":"Namespace for stock functions. Signature: readonly stock: TIX;","title":"NS.stock property"},{"location":"bitburner.ns.stock/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.tail/","text":"Home > bitburner > NS > tail NS.tail() method Open the tail window of a script. Signature: tail(fn?: FilenameOrPID, host?: string, ...args: (string | number | boolean)[]): void; Parameters Parameter Type Description fn FilenameOrPID Optional. Filename or PID of the script being tailed. If omitted, the current script is tailed. host string Optional. Hostname of the script being tailed. Defaults to the server this script is running on. If args are specified, this is not optional. args (string | number | boolean)[] Arguments for the script being tailed. Returns: void Remarks RAM cost: 0 GB Opens a script\u2019s logs. This is functionally the same as the tail Terminal command. If the function is called with no arguments, it will open the current script\u2019s logs. Otherwise, the fn, hostname/ip, and args\u2026 arguments can be used to get the logs from another script. Remember that scripts are uniquely identified by both their names and arguments. Example 1 // NS1: //Open logs from foo.script on the current server that was run with no args tail(\"foo.script\"); //Get logs from foo.script on the foodnstuff server that was run with no args tail(\"foo.script\", \"foodnstuff\"); //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] tail(\"foo.script\", \"foodnstuff\", 1, \"test\"); Example 2 // NS2: //Open logs from foo.script on the current server that was run with no args ns.tail(\"foo.script\"); //Get logs from foo.script on the foodnstuff server that was run with no args ns.tail(\"foo.script\", \"foodnstuff\"); //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] ns.tail(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Bitburner.ns.tail"},{"location":"bitburner.ns.tail/#nstail-method","text":"Open the tail window of a script. Signature: tail(fn?: FilenameOrPID, host?: string, ...args: (string | number | boolean)[]): void;","title":"NS.tail() method"},{"location":"bitburner.ns.tail/#parameters","text":"Parameter Type Description fn FilenameOrPID Optional. Filename or PID of the script being tailed. If omitted, the current script is tailed. host string Optional. Hostname of the script being tailed. Defaults to the server this script is running on. If args are specified, this is not optional. args (string | number | boolean)[] Arguments for the script being tailed. Returns: void","title":"Parameters"},{"location":"bitburner.ns.tail/#remarks","text":"RAM cost: 0 GB Opens a script\u2019s logs. This is functionally the same as the tail Terminal command. If the function is called with no arguments, it will open the current script\u2019s logs. Otherwise, the fn, hostname/ip, and args\u2026 arguments can be used to get the logs from another script. Remember that scripts are uniquely identified by both their names and arguments.","title":"Remarks"},{"location":"bitburner.ns.tail/#example-1","text":"// NS1: //Open logs from foo.script on the current server that was run with no args tail(\"foo.script\"); //Get logs from foo.script on the foodnstuff server that was run with no args tail(\"foo.script\", \"foodnstuff\"); //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] tail(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Example 1"},{"location":"bitburner.ns.tail/#example-2","text":"// NS2: //Open logs from foo.script on the current server that was run with no args ns.tail(\"foo.script\"); //Get logs from foo.script on the foodnstuff server that was run with no args ns.tail(\"foo.script\", \"foodnstuff\"); //Get logs from foo.script on the foodnstuff server that was run with the arguments [1, \"test\"] ns.tail(\"foo.script\", \"foodnstuff\", 1, \"test\");","title":"Example 2"},{"location":"bitburner.ns.tformat/","text":"Home > bitburner > NS > tFormat NS.tFormat() method Format time to readable string Signature: tFormat(milliseconds: number, milliPrecision?: boolean): string; Parameters Parameter Type Description milliseconds number Number of millisecond to format. milliPrecision boolean Format time with subsecond precision, defaults to false. Returns: string The formatted time. Remarks RAM cost: 0 GB","title":"Bitburner.ns.tformat"},{"location":"bitburner.ns.tformat/#nstformat-method","text":"Format time to readable string Signature: tFormat(milliseconds: number, milliPrecision?: boolean): string;","title":"NS.tFormat() method"},{"location":"bitburner.ns.tformat/#parameters","text":"Parameter Type Description milliseconds number Number of millisecond to format. milliPrecision boolean Format time with subsecond precision, defaults to false. Returns: string The formatted time.","title":"Parameters"},{"location":"bitburner.ns.tformat/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.ns.toast/","text":"Home > bitburner > NS > toast NS.toast() method Queue a toast (bottom-right notification). Signature: toast(msg: string, variant?: ToastTypes | ToastVariant, duration?: number | null): void; Parameters Parameter Type Description msg string Message in the toast. variant ToastTypes | ToastVariant Type of toast, must be one of success, info, warning, error. Defaults to success. duration number | null Duration of toast in ms. Can also be null to create a persistent toast. Defaults to 2000 Returns: void","title":"Bitburner.ns.toast"},{"location":"bitburner.ns.toast/#nstoast-method","text":"Queue a toast (bottom-right notification). Signature: toast(msg: string, variant?: ToastTypes | ToastVariant, duration?: number | null): void;","title":"NS.toast() method"},{"location":"bitburner.ns.toast/#parameters","text":"Parameter Type Description msg string Message in the toast. variant ToastTypes | ToastVariant Type of toast, must be one of success, info, warning, error. Defaults to success. duration number | null Duration of toast in ms. Can also be null to create a persistent toast. Defaults to 2000 Returns: void","title":"Parameters"},{"location":"bitburner.ns.tprint/","text":"Home > bitburner > NS > tprint NS.tprint() method Prints one or more values or variables to the Terminal. Signature: tprint(...args: any[]): void; Parameters Parameter Type Description args any[] Value(s) to be printed. Returns: void Remarks RAM cost: 0 GB See print for how to add color to your printed strings.","title":"Bitburner.ns.tprint"},{"location":"bitburner.ns.tprint/#nstprint-method","text":"Prints one or more values or variables to the Terminal. Signature: tprint(...args: any[]): void;","title":"NS.tprint() method"},{"location":"bitburner.ns.tprint/#parameters","text":"Parameter Type Description args any[] Value(s) to be printed. Returns: void","title":"Parameters"},{"location":"bitburner.ns.tprint/#remarks","text":"RAM cost: 0 GB See print for how to add color to your printed strings.","title":"Remarks"},{"location":"bitburner.ns.tprintf/","text":"Home > bitburner > NS > tprintf NS.tprintf() method Prints a raw value or a variable to the Terminal. Signature: tprintf(format: string, ...values: any[]): void; Parameters Parameter Type Description format string Format of the message. values any[] Value(s) to be printed. Returns: void Remarks RAM cost: 0 GB See print for how to add color to your printed strings. See printf for examples on formatted strings. For more detail, see: https://github.com/alexei/sprintf.js","title":"Bitburner.ns.tprintf"},{"location":"bitburner.ns.tprintf/#nstprintf-method","text":"Prints a raw value or a variable to the Terminal. Signature: tprintf(format: string, ...values: any[]): void;","title":"NS.tprintf() method"},{"location":"bitburner.ns.tprintf/#parameters","text":"Parameter Type Description format string Format of the message. values any[] Value(s) to be printed. Returns: void","title":"Parameters"},{"location":"bitburner.ns.tprintf/#remarks","text":"RAM cost: 0 GB See print for how to add color to your printed strings. See printf for examples on formatted strings. For more detail, see: https://github.com/alexei/sprintf.js","title":"Remarks"},{"location":"bitburner.ns.trywriteport/","text":"Home > bitburner > NS > tryWritePort NS.tryWritePort() method Attempt to write to a port. Signature: tryWritePort(port: number, data: string | number): boolean; Parameters Parameter Type Description port number Port or text file that will be written to. data string | number Data to write. Returns: boolean True if the data is successfully written to the port, and false otherwise. Remarks RAM cost: 0 GB Attempts to write data to the specified Netscript Port. If the port is full, the data will not be written. Otherwise, the data will be written normally.","title":"Bitburner.ns.trywriteport"},{"location":"bitburner.ns.trywriteport/#nstrywriteport-method","text":"Attempt to write to a port. Signature: tryWritePort(port: number, data: string | number): boolean;","title":"NS.tryWritePort() method"},{"location":"bitburner.ns.trywriteport/#parameters","text":"Parameter Type Description port number Port or text file that will be written to. data string | number Data to write. Returns: boolean True if the data is successfully written to the port, and false otherwise.","title":"Parameters"},{"location":"bitburner.ns.trywriteport/#remarks","text":"RAM cost: 0 GB Attempts to write data to the specified Netscript Port. If the port is full, the data will not be written. Otherwise, the data will be written normally.","title":"Remarks"},{"location":"bitburner.ns.ui/","text":"Home > bitburner > NS > ui NS.ui property Namespace for user interface functions. RAM cost: 0 GB Signature: readonly ui: UserInterface;","title":"Bitburner.ns.ui"},{"location":"bitburner.ns.ui/#nsui-property","text":"Namespace for user interface functions. RAM cost: 0 GB Signature: readonly ui: UserInterface;","title":"NS.ui property"},{"location":"bitburner.ns.upgradepurchasedserver/","text":"Home > bitburner > NS > upgradePurchasedServer NS.upgradePurchasedServer() method Upgrade a purchased servers ram. Signature: upgradePurchasedServer(hostname: string, ram: number): boolean; Parameters Parameter Type Description hostname string Hostname of the server to upgrade. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: boolean True if the upgrade succeeded. Remarks RAM cost: 0.25 GB","title":"Bitburner.ns.upgradepurchasedserver"},{"location":"bitburner.ns.upgradepurchasedserver/#nsupgradepurchasedserver-method","text":"Upgrade a purchased servers ram. Signature: upgradePurchasedServer(hostname: string, ram: number): boolean;","title":"NS.upgradePurchasedServer() method"},{"location":"bitburner.ns.upgradepurchasedserver/#parameters","text":"Parameter Type Description hostname string Hostname of the server to upgrade. ram number Amount of RAM of the purchased server, in GB. Must be a power of 2 (2, 4, 8, 16, etc.). Maximum value of 1048576 (2^20). Returns: boolean True if the upgrade succeeded.","title":"Parameters"},{"location":"bitburner.ns.upgradepurchasedserver/#remarks","text":"RAM cost: 0.25 GB","title":"Remarks"},{"location":"bitburner.ns.vsprintf/","text":"Home > bitburner > NS > vsprintf NS.vsprintf() method Format a string with an array of arguments. Signature: vsprintf(format: string, args: any[]): string; Parameters Parameter Type Description format string String to format. args any[] Formatting arguments. Returns: string Formatted text. Remarks RAM cost: 0 GB see: https://github.com/alexei/sprintf.js","title":"Bitburner.ns.vsprintf"},{"location":"bitburner.ns.vsprintf/#nsvsprintf-method","text":"Format a string with an array of arguments. Signature: vsprintf(format: string, args: any[]): string;","title":"NS.vsprintf() method"},{"location":"bitburner.ns.vsprintf/#parameters","text":"Parameter Type Description format string String to format. args any[] Formatting arguments. Returns: string Formatted text.","title":"Parameters"},{"location":"bitburner.ns.vsprintf/#remarks","text":"RAM cost: 0 GB see: https://github.com/alexei/sprintf.js","title":"Remarks"},{"location":"bitburner.ns.weaken/","text":"Home > bitburner > NS > weaken NS.weaken() method Reduce a server security level. Signature: weaken(host: string, opts?: BasicHGWOptions): Promise<number>; Parameters Parameter Type Description host string Hostname of the target server to weaken. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The amount by which the target server\u2019s security level was decreased. This is equivalent to 0.05 multiplied by the number of script threads. Remarks RAM cost: 0.15 GB Use your hacking skills to attack a server\u2019s security, lowering the server\u2019s security level. The runtime for this command depends on your hacking level and the target server\u2019s security level when this function is called. This function lowers the security level of the target server by 0.05. Like hack and grow, weaken can be called on any server, regardless of where the script is running. This command requires root access to the target server, but there is no required hacking level to run the command. Example 1 // NS1: var currentSecurity = getServerSecurityLevel(\"foodnstuff\"); currentSecurity = currentSecurity - weaken(\"foodnstuff\"); Example 2 // NS2: let currentSecurity = ns.getServerSecurityLevel(\"foodnstuff\"); currentSecurity -= await ns.weaken(\"foodnstuff\");","title":"Bitburner.ns.weaken"},{"location":"bitburner.ns.weaken/#nsweaken-method","text":"Reduce a server security level. Signature: weaken(host: string, opts?: BasicHGWOptions): Promise<number>;","title":"NS.weaken() method"},{"location":"bitburner.ns.weaken/#parameters","text":"Parameter Type Description host string Hostname of the target server to weaken. opts BasicHGWOptions Optional parameters for configuring function behavior. Returns: Promise<number> The amount by which the target server\u2019s security level was decreased. This is equivalent to 0.05 multiplied by the number of script threads.","title":"Parameters"},{"location":"bitburner.ns.weaken/#remarks","text":"RAM cost: 0.15 GB Use your hacking skills to attack a server\u2019s security, lowering the server\u2019s security level. The runtime for this command depends on your hacking level and the target server\u2019s security level when this function is called. This function lowers the security level of the target server by 0.05. Like hack and grow, weaken can be called on any server, regardless of where the script is running. This command requires root access to the target server, but there is no required hacking level to run the command.","title":"Remarks"},{"location":"bitburner.ns.weaken/#example-1","text":"// NS1: var currentSecurity = getServerSecurityLevel(\"foodnstuff\"); currentSecurity = currentSecurity - weaken(\"foodnstuff\");","title":"Example 1"},{"location":"bitburner.ns.weaken/#example-2","text":"// NS2: let currentSecurity = ns.getServerSecurityLevel(\"foodnstuff\"); currentSecurity -= await ns.weaken(\"foodnstuff\");","title":"Example 2"},{"location":"bitburner.ns.weakenanalyze/","text":"Home > bitburner > NS > weakenAnalyze NS.weakenAnalyze() method Predict the effect of weaken. Signature: weakenAnalyze(threads: number, cores?: number): number; Parameters Parameter Type Description threads number Amount of threads that will be used. cores number Optional. The number of cores of the server that would run weaken. Returns: number The security decrease. Remarks RAM cost: 1 GB Returns the security decrease that would occur if a weaken with this many threads happened.","title":"Bitburner.ns.weakenanalyze"},{"location":"bitburner.ns.weakenanalyze/#nsweakenanalyze-method","text":"Predict the effect of weaken. Signature: weakenAnalyze(threads: number, cores?: number): number;","title":"NS.weakenAnalyze() method"},{"location":"bitburner.ns.weakenanalyze/#parameters","text":"Parameter Type Description threads number Amount of threads that will be used. cores number Optional. The number of cores of the server that would run weaken. Returns: number The security decrease.","title":"Parameters"},{"location":"bitburner.ns.weakenanalyze/#remarks","text":"RAM cost: 1 GB Returns the security decrease that would occur if a weaken with this many threads happened.","title":"Remarks"},{"location":"bitburner.ns.wget/","text":"Home > bitburner > NS > wget NS.wget() method Download a file from the internet. Signature: wget(url: string, target: string, host?: string): Promise<boolean>; Parameters Parameter Type Description url string URL to pull data from. target string Filename to write data to. Must be script or text file. host string Optional hostname/ip of server for target file. Returns: Promise<boolean> True if the data was successfully retrieved from the URL, false otherwise. Remarks RAM cost: 0 GB Retrieves data from a URL and downloads it to a file on the specified server. The data can only be downloaded to a script (.script, .js) or a text file (.txt). If the file already exists, it will be overwritten by this command. Note that it will not be possible to download data from many websites because they do not allow cross-origin resource sharing (CORS). IMPORTANT: This is an asynchronous function that returns a Promise. The Promise\u2019s resolved value will be a boolean indicating whether or not the data was successfully retrieved from the URL. Because the function is async and returns a Promise, it is recommended you use wget in NetscriptJS (Netscript 2.0). In NetscriptJS, you must preface any call to wget with the await keyword (like you would hack or sleep). wget will still work in Netscript 1.0, but the functions execution will not be synchronous (i.e. it may not execute when you expect/want it to). Furthermore, since Promises are not supported in ES5, you will not be able to process the returned value of wget in Netscript 1.0. Example 1 // NS1: wget(\"https://raw.githubusercontent.com/bitburner-official/bitburner-src/master/README.md\", \"game_readme.txt\"); Example 2 // NS2: await ns.wget(\"https://raw.githubusercontent.com/bitburner-official/bitburner-src/master/README.md\", \"game_readme.txt\");","title":"Bitburner.ns.wget"},{"location":"bitburner.ns.wget/#nswget-method","text":"Download a file from the internet. Signature: wget(url: string, target: string, host?: string): Promise<boolean>;","title":"NS.wget() method"},{"location":"bitburner.ns.wget/#parameters","text":"Parameter Type Description url string URL to pull data from. target string Filename to write data to. Must be script or text file. host string Optional hostname/ip of server for target file. Returns: Promise<boolean> True if the data was successfully retrieved from the URL, false otherwise.","title":"Parameters"},{"location":"bitburner.ns.wget/#remarks","text":"RAM cost: 0 GB Retrieves data from a URL and downloads it to a file on the specified server. The data can only be downloaded to a script (.script, .js) or a text file (.txt). If the file already exists, it will be overwritten by this command. Note that it will not be possible to download data from many websites because they do not allow cross-origin resource sharing (CORS). IMPORTANT: This is an asynchronous function that returns a Promise. The Promise\u2019s resolved value will be a boolean indicating whether or not the data was successfully retrieved from the URL. Because the function is async and returns a Promise, it is recommended you use wget in NetscriptJS (Netscript 2.0). In NetscriptJS, you must preface any call to wget with the await keyword (like you would hack or sleep). wget will still work in Netscript 1.0, but the functions execution will not be synchronous (i.e. it may not execute when you expect/want it to). Furthermore, since Promises are not supported in ES5, you will not be able to process the returned value of wget in Netscript 1.0.","title":"Remarks"},{"location":"bitburner.ns.wget/#example-1","text":"// NS1: wget(\"https://raw.githubusercontent.com/bitburner-official/bitburner-src/master/README.md\", \"game_readme.txt\");","title":"Example 1"},{"location":"bitburner.ns.wget/#example-2","text":"// NS2: await ns.wget(\"https://raw.githubusercontent.com/bitburner-official/bitburner-src/master/README.md\", \"game_readme.txt\");","title":"Example 2"},{"location":"bitburner.ns.write/","text":"Home > bitburner > NS > write NS.write() method Write data to a file. Signature: write(filename: string, data?: string, mode?: \"w\" | \"a\"): void; Parameters Parameter Type Description filename string Name of the file to be written to. data string Data to write. mode \"w\" | \"a\" Defines the write mode. Returns: void Remarks RAM cost: 0 GB This function can be used to write data to a text file (.txt) or a script (.js or .script). This function will write data to that file. If the specified file does not exist, then it will be created. The third argument mode, defines how the data will be written to the file. If *mode is set to \u201cw\u201d, then the data is written in \u201cwrite\u201d mode which means that it will overwrite all existing data on the file. If mode is set to any other value then the data will be written in \u201cappend\u201d mode which means that the data will be added at the end of the file.","title":"Bitburner.ns.write"},{"location":"bitburner.ns.write/#nswrite-method","text":"Write data to a file. Signature: write(filename: string, data?: string, mode?: \"w\" | \"a\"): void;","title":"NS.write() method"},{"location":"bitburner.ns.write/#parameters","text":"Parameter Type Description filename string Name of the file to be written to. data string Data to write. mode \"w\" | \"a\" Defines the write mode. Returns: void","title":"Parameters"},{"location":"bitburner.ns.write/#remarks","text":"RAM cost: 0 GB This function can be used to write data to a text file (.txt) or a script (.js or .script). This function will write data to that file. If the specified file does not exist, then it will be created. The third argument mode, defines how the data will be written to the file. If *mode is set to \u201cw\u201d, then the data is written in \u201cwrite\u201d mode which means that it will overwrite all existing data on the file. If mode is set to any other value then the data will be written in \u201cappend\u201d mode which means that the data will be added at the end of the file.","title":"Remarks"},{"location":"bitburner.ns.writeport/","text":"Home > bitburner > NS > writePort NS.writePort() method Write data to a port. Signature: writePort(port: number, data: string | number): Promise<PortData>; Parameters Parameter Type Description port number data string | number Returns: Promise< PortData > The data popped off the queue if it was full. Remarks RAM cost: 0 GB Write data to that netscript port.","title":"Bitburner.ns.writeport"},{"location":"bitburner.ns.writeport/#nswriteport-method","text":"Write data to a port. Signature: writePort(port: number, data: string | number): Promise<PortData>;","title":"NS.writePort() method"},{"location":"bitburner.ns.writeport/#parameters","text":"Parameter Type Description port number data string | number Returns: Promise< PortData > The data popped off the queue if it was full.","title":"Parameters"},{"location":"bitburner.ns.writeport/#remarks","text":"RAM cost: 0 GB Write data to that netscript port.","title":"Remarks"},{"location":"bitburner.nsenums/","text":"Home > bitburner > NSEnums NSEnums type Signature: export type NSEnums = { toast: typeof ToastVariant; crimes: typeof CrimeType; }; References: ToastVariant , CrimeType","title":"Bitburner.nsenums"},{"location":"bitburner.nsenums/#nsenums-type","text":"Signature: export type NSEnums = { toast: typeof ToastVariant; crimes: typeof CrimeType; }; References: ToastVariant , CrimeType","title":"NSEnums type"},{"location":"bitburner.office.employeejobs/","text":"Home > bitburner > Office > employeeJobs Office.employeeJobs property Positions of the employees Signature: employeeJobs: EmployeeJobs;","title":"Bitburner.office.employeejobs"},{"location":"bitburner.office.employeejobs/#officeemployeejobs-property","text":"Positions of the employees Signature: employeeJobs: EmployeeJobs;","title":"Office.employeeJobs property"},{"location":"bitburner.office.employeeprod/","text":"Home > bitburner > Office > employeeProd Office.employeeProd property Production of the employees Signature: employeeProd: EmployeeJobs;","title":"Bitburner.office.employeeprod"},{"location":"bitburner.office.employeeprod/#officeemployeeprod-property","text":"Production of the employees Signature: employeeProd: EmployeeJobs;","title":"Office.employeeProd property"},{"location":"bitburner.office.employees/","text":"Home > bitburner > Office > employees Office.employees property Name of all the employees Signature: employees: string[];","title":"Bitburner.office.employees"},{"location":"bitburner.office.employees/#officeemployees-property","text":"Name of all the employees Signature: employees: string[];","title":"Office.employees property"},{"location":"bitburner.office.loc/","text":"Home > bitburner > Office > loc Office.loc property City of the office Signature: loc: string;","title":"Bitburner.office.loc"},{"location":"bitburner.office.loc/#officeloc-property","text":"City of the office Signature: loc: string;","title":"Office.loc property"},{"location":"bitburner.office.maxene/","text":"Home > bitburner > Office > maxEne Office.maxEne property Maximum amount of energy of the employees Signature: maxEne: number;","title":"Bitburner.office.maxene"},{"location":"bitburner.office.maxene/#officemaxene-property","text":"Maximum amount of energy of the employees Signature: maxEne: number;","title":"Office.maxEne property"},{"location":"bitburner.office.maxhap/","text":"Home > bitburner > Office > maxHap Office.maxHap property Maximum happiness of the employees Signature: maxHap: number;","title":"Bitburner.office.maxhap"},{"location":"bitburner.office.maxhap/#officemaxhap-property","text":"Maximum happiness of the employees Signature: maxHap: number;","title":"Office.maxHap property"},{"location":"bitburner.office.maxmor/","text":"Home > bitburner > Office > maxMor Office.maxMor property Maximum morale of the employees Signature: maxMor: number;","title":"Bitburner.office.maxmor"},{"location":"bitburner.office.maxmor/#officemaxmor-property","text":"Maximum morale of the employees Signature: maxMor: number;","title":"Office.maxMor property"},{"location":"bitburner.office/","text":"Home > bitburner > Office Office interface Office for a division in a city. Signature: export interface Office Properties Property Type Description employeeJobs EmployeeJobs Positions of the employees employeeProd EmployeeJobs Production of the employees employees string[] Name of all the employees loc string City of the office maxEne number Maximum amount of energy of the employees maxHap number Maximum happiness of the employees maxMor number Maximum morale of the employees minEne number Minimum amount of energy of the employees minHap number Minimum happiness of the employees minMor number Minimum morale of the employees size number Maximum number of employee","title":"Bitburner.office"},{"location":"bitburner.office/#office-interface","text":"Office for a division in a city. Signature: export interface Office","title":"Office interface"},{"location":"bitburner.office/#properties","text":"Property Type Description employeeJobs EmployeeJobs Positions of the employees employeeProd EmployeeJobs Production of the employees employees string[] Name of all the employees loc string City of the office maxEne number Maximum amount of energy of the employees maxHap number Maximum happiness of the employees maxMor number Maximum morale of the employees minEne number Minimum amount of energy of the employees minHap number Minimum happiness of the employees minMor number Minimum morale of the employees size number Maximum number of employee","title":"Properties"},{"location":"bitburner.office.minene/","text":"Home > bitburner > Office > minEne Office.minEne property Minimum amount of energy of the employees Signature: minEne: number;","title":"Bitburner.office.minene"},{"location":"bitburner.office.minene/#officeminene-property","text":"Minimum amount of energy of the employees Signature: minEne: number;","title":"Office.minEne property"},{"location":"bitburner.office.minhap/","text":"Home > bitburner > Office > minHap Office.minHap property Minimum happiness of the employees Signature: minHap: number;","title":"Bitburner.office.minhap"},{"location":"bitburner.office.minhap/#officeminhap-property","text":"Minimum happiness of the employees Signature: minHap: number;","title":"Office.minHap property"},{"location":"bitburner.office.minmor/","text":"Home > bitburner > Office > minMor Office.minMor property Minimum morale of the employees Signature: minMor: number;","title":"Bitburner.office.minmor"},{"location":"bitburner.office.minmor/#officeminmor-property","text":"Minimum morale of the employees Signature: minMor: number;","title":"Office.minMor property"},{"location":"bitburner.office.size/","text":"Home > bitburner > Office > size Office.size property Maximum number of employee Signature: size: number;","title":"Bitburner.office.size"},{"location":"bitburner.office.size/#officesize-property","text":"Maximum number of employee Signature: size: number;","title":"Office.size property"},{"location":"bitburner.officeapi.assignjob/","text":"Home > bitburner > OfficeAPI > assignJob OfficeAPI.assignJob() method Assign an employee to a job. Signature: assignJob(divisionName: string, cityName: string, employeeName: string, job: string): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city employeeName string name of the employee job string Name of the job. Returns: void","title":"Bitburner.officeapi.assignjob"},{"location":"bitburner.officeapi.assignjob/#officeapiassignjob-method","text":"Assign an employee to a job. Signature: assignJob(divisionName: string, cityName: string, employeeName: string, job: string): void;","title":"OfficeAPI.assignJob() method"},{"location":"bitburner.officeapi.assignjob/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city employeeName string name of the employee job string Name of the job. Returns: void","title":"Parameters"},{"location":"bitburner.officeapi.buycoffee/","text":"Home > bitburner > OfficeAPI > buyCoffee OfficeAPI.buyCoffee() method Buy coffee for your employees Signature: buyCoffee(divisionName: string, cityName: string): boolean; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: boolean true if buying coffee was successful, false otherwise","title":"Bitburner.officeapi.buycoffee"},{"location":"bitburner.officeapi.buycoffee/#officeapibuycoffee-method","text":"Buy coffee for your employees Signature: buyCoffee(divisionName: string, cityName: string): boolean;","title":"OfficeAPI.buyCoffee() method"},{"location":"bitburner.officeapi.buycoffee/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: boolean true if buying coffee was successful, false otherwise","title":"Parameters"},{"location":"bitburner.officeapi.getemployee/","text":"Home > bitburner > OfficeAPI > getEmployee OfficeAPI.getEmployee() method Get data about an employee Signature: getEmployee(divisionName: string, cityName: string, employeeName: string): Employee; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city employeeName string Name of the employee Returns: Employee Employee data","title":"Bitburner.officeapi.getemployee"},{"location":"bitburner.officeapi.getemployee/#officeapigetemployee-method","text":"Get data about an employee Signature: getEmployee(divisionName: string, cityName: string, employeeName: string): Employee;","title":"OfficeAPI.getEmployee() method"},{"location":"bitburner.officeapi.getemployee/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city employeeName string Name of the employee Returns: Employee Employee data","title":"Parameters"},{"location":"bitburner.officeapi.gethireadvertcost/","text":"Home > bitburner > OfficeAPI > getHireAdVertCost OfficeAPI.getHireAdVertCost() method Get the cost to Hire AdVert Signature: getHireAdVertCost(divisionName: string): number; Parameters Parameter Type Description divisionName string Name of the division Returns: number Cost","title":"Bitburner.officeapi.gethireadvertcost"},{"location":"bitburner.officeapi.gethireadvertcost/#officeapigethireadvertcost-method","text":"Get the cost to Hire AdVert Signature: getHireAdVertCost(divisionName: string): number;","title":"OfficeAPI.getHireAdVertCost() method"},{"location":"bitburner.officeapi.gethireadvertcost/#parameters","text":"Parameter Type Description divisionName string Name of the division Returns: number Cost","title":"Parameters"},{"location":"bitburner.officeapi.gethireadvertcount/","text":"Home > bitburner > OfficeAPI > getHireAdVertCount OfficeAPI.getHireAdVertCount() method Get the number of times you have Hired AdVert Signature: getHireAdVertCount(adivisionName: string): number; Parameters Parameter Type Description adivisionName string Returns: number Number of times you have Hired AdVert","title":"Bitburner.officeapi.gethireadvertcount"},{"location":"bitburner.officeapi.gethireadvertcount/#officeapigethireadvertcount-method","text":"Get the number of times you have Hired AdVert Signature: getHireAdVertCount(adivisionName: string): number;","title":"OfficeAPI.getHireAdVertCount() method"},{"location":"bitburner.officeapi.gethireadvertcount/#parameters","text":"Parameter Type Description adivisionName string Returns: number Number of times you have Hired AdVert","title":"Parameters"},{"location":"bitburner.officeapi.getoffice/","text":"Home > bitburner > OfficeAPI > getOffice OfficeAPI.getOffice() method Get data about an office Signature: getOffice(divisionName: string, cityName: string): Office; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Office Office data","title":"Bitburner.officeapi.getoffice"},{"location":"bitburner.officeapi.getoffice/#officeapigetoffice-method","text":"Get data about an office Signature: getOffice(divisionName: string, cityName: string): Office;","title":"OfficeAPI.getOffice() method"},{"location":"bitburner.officeapi.getoffice/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Office Office data","title":"Parameters"},{"location":"bitburner.officeapi.getofficesizeupgradecost/","text":"Home > bitburner > OfficeAPI > getOfficeSizeUpgradeCost OfficeAPI.getOfficeSizeUpgradeCost() method Cost to Upgrade office size. Signature: getOfficeSizeUpgradeCost(divisionName: string, cityName: string, asize: number): number; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city asize number Returns: number Cost of upgrading the office","title":"Bitburner.officeapi.getofficesizeupgradecost"},{"location":"bitburner.officeapi.getofficesizeupgradecost/#officeapigetofficesizeupgradecost-method","text":"Cost to Upgrade office size. Signature: getOfficeSizeUpgradeCost(divisionName: string, cityName: string, asize: number): number;","title":"OfficeAPI.getOfficeSizeUpgradeCost() method"},{"location":"bitburner.officeapi.getofficesizeupgradecost/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city asize number Returns: number Cost of upgrading the office","title":"Parameters"},{"location":"bitburner.officeapi.getresearchcost/","text":"Home > bitburner > OfficeAPI > getResearchCost OfficeAPI.getResearchCost() method Get the cost to unlock research Signature: getResearchCost(divisionName: string, researchName: string): number; Parameters Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: number cost","title":"Bitburner.officeapi.getresearchcost"},{"location":"bitburner.officeapi.getresearchcost/#officeapigetresearchcost-method","text":"Get the cost to unlock research Signature: getResearchCost(divisionName: string, researchName: string): number;","title":"OfficeAPI.getResearchCost() method"},{"location":"bitburner.officeapi.getresearchcost/#parameters","text":"Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: number cost","title":"Parameters"},{"location":"bitburner.officeapi.hasresearched/","text":"Home > bitburner > OfficeAPI > hasResearched OfficeAPI.hasResearched() method Gets if you have unlocked a research Signature: hasResearched(divisionName: string, researchName: string): boolean; Parameters Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: boolean true is unlocked, false if not","title":"Bitburner.officeapi.hasresearched"},{"location":"bitburner.officeapi.hasresearched/#officeapihasresearched-method","text":"Gets if you have unlocked a research Signature: hasResearched(divisionName: string, researchName: string): boolean;","title":"OfficeAPI.hasResearched() method"},{"location":"bitburner.officeapi.hasresearched/#parameters","text":"Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: boolean true is unlocked, false if not","title":"Parameters"},{"location":"bitburner.officeapi.hireadvert/","text":"Home > bitburner > OfficeAPI > hireAdVert OfficeAPI.hireAdVert() method Hire AdVert. Signature: hireAdVert(divisionName: string): void; Parameters Parameter Type Description divisionName string Name of the division Returns: void","title":"Bitburner.officeapi.hireadvert"},{"location":"bitburner.officeapi.hireadvert/#officeapihireadvert-method","text":"Hire AdVert. Signature: hireAdVert(divisionName: string): void;","title":"OfficeAPI.hireAdVert() method"},{"location":"bitburner.officeapi.hireadvert/#parameters","text":"Parameter Type Description divisionName string Name of the division Returns: void","title":"Parameters"},{"location":"bitburner.officeapi.hireemployee/","text":"Home > bitburner > OfficeAPI > hireEmployee OfficeAPI.hireEmployee() method Hire an employee. Signature: hireEmployee(divisionName: string, cityName: string): Employee | undefined; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Employee | undefined The newly hired employee, if any","title":"Bitburner.officeapi.hireemployee"},{"location":"bitburner.officeapi.hireemployee/#officeapihireemployee-method","text":"Hire an employee. Signature: hireEmployee(divisionName: string, cityName: string): Employee | undefined;","title":"OfficeAPI.hireEmployee() method"},{"location":"bitburner.officeapi.hireemployee/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Employee | undefined The newly hired employee, if any","title":"Parameters"},{"location":"bitburner.officeapi/","text":"Home > bitburner > OfficeAPI OfficeAPI interface Corporation Office API Signature: export interface OfficeAPI Remarks requires the Office API upgrade from your corporation. Methods Method Description assignJob(divisionName, cityName, employeeName, job) Assign an employee to a job. buyCoffee(divisionName, cityName) Buy coffee for your employees getEmployee(divisionName, cityName, employeeName) Get data about an employee getHireAdVertCost(divisionName) Get the cost to Hire AdVert getHireAdVertCount(adivisionName) Get the number of times you have Hired AdVert getOffice(divisionName, cityName) Get data about an office getOfficeSizeUpgradeCost(divisionName, cityName, asize) Cost to Upgrade office size. getResearchCost(divisionName, researchName) Get the cost to unlock research hasResearched(divisionName, researchName) Gets if you have unlocked a research hireAdVert(divisionName) Hire AdVert. hireEmployee(divisionName, cityName) Hire an employee. research(divisionName, researchName) Purchase a research setAutoJobAssignment(divisionName, cityName, job, amount) Set the auto job assignment for a job throwParty(divisionName, cityName, costPerEmployee) Throw a party for your employees upgradeOfficeSize(divisionName, cityName, size) Upgrade office size.","title":"Bitburner.officeapi"},{"location":"bitburner.officeapi/#officeapi-interface","text":"Corporation Office API Signature: export interface OfficeAPI","title":"OfficeAPI interface"},{"location":"bitburner.officeapi/#remarks","text":"requires the Office API upgrade from your corporation.","title":"Remarks"},{"location":"bitburner.officeapi/#methods","text":"Method Description assignJob(divisionName, cityName, employeeName, job) Assign an employee to a job. buyCoffee(divisionName, cityName) Buy coffee for your employees getEmployee(divisionName, cityName, employeeName) Get data about an employee getHireAdVertCost(divisionName) Get the cost to Hire AdVert getHireAdVertCount(adivisionName) Get the number of times you have Hired AdVert getOffice(divisionName, cityName) Get data about an office getOfficeSizeUpgradeCost(divisionName, cityName, asize) Cost to Upgrade office size. getResearchCost(divisionName, researchName) Get the cost to unlock research hasResearched(divisionName, researchName) Gets if you have unlocked a research hireAdVert(divisionName) Hire AdVert. hireEmployee(divisionName, cityName) Hire an employee. research(divisionName, researchName) Purchase a research setAutoJobAssignment(divisionName, cityName, job, amount) Set the auto job assignment for a job throwParty(divisionName, cityName, costPerEmployee) Throw a party for your employees upgradeOfficeSize(divisionName, cityName, size) Upgrade office size.","title":"Methods"},{"location":"bitburner.officeapi.research/","text":"Home > bitburner > OfficeAPI > research OfficeAPI.research() method Purchase a research Signature: research(divisionName: string, researchName: string): void; Parameters Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: void","title":"Bitburner.officeapi.research"},{"location":"bitburner.officeapi.research/#officeapiresearch-method","text":"Purchase a research Signature: research(divisionName: string, researchName: string): void;","title":"OfficeAPI.research() method"},{"location":"bitburner.officeapi.research/#parameters","text":"Parameter Type Description divisionName string Name of the division researchName string Name of the research Returns: void","title":"Parameters"},{"location":"bitburner.officeapi.setautojobassignment/","text":"Home > bitburner > OfficeAPI > setAutoJobAssignment OfficeAPI.setAutoJobAssignment() method Set the auto job assignment for a job Signature: setAutoJobAssignment(divisionName: string, cityName: string, job: string, amount: number): boolean; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city job string Name of the job amount number Number of employees to assign to that job Returns: boolean true if the employee count reached the target amount, false if not","title":"Bitburner.officeapi.setautojobassignment"},{"location":"bitburner.officeapi.setautojobassignment/#officeapisetautojobassignment-method","text":"Set the auto job assignment for a job Signature: setAutoJobAssignment(divisionName: string, cityName: string, job: string, amount: number): boolean;","title":"OfficeAPI.setAutoJobAssignment() method"},{"location":"bitburner.officeapi.setautojobassignment/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city job string Name of the job amount number Number of employees to assign to that job Returns: boolean true if the employee count reached the target amount, false if not","title":"Parameters"},{"location":"bitburner.officeapi.throwparty/","text":"Home > bitburner > OfficeAPI > throwParty OfficeAPI.throwParty() method Throw a party for your employees Signature: throwParty(divisionName: string, cityName: string, costPerEmployee: number): number; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city costPerEmployee number Amount to spend per employee. Returns: number Multiplier for happiness and morale, or zero on failure","title":"Bitburner.officeapi.throwparty"},{"location":"bitburner.officeapi.throwparty/#officeapithrowparty-method","text":"Throw a party for your employees Signature: throwParty(divisionName: string, cityName: string, costPerEmployee: number): number;","title":"OfficeAPI.throwParty() method"},{"location":"bitburner.officeapi.throwparty/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city costPerEmployee number Amount to spend per employee. Returns: number Multiplier for happiness and morale, or zero on failure","title":"Parameters"},{"location":"bitburner.officeapi.upgradeofficesize/","text":"Home > bitburner > OfficeAPI > upgradeOfficeSize OfficeAPI.upgradeOfficeSize() method Upgrade office size. Signature: upgradeOfficeSize(divisionName: string, cityName: string, size: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city size number Amount of positions to open Returns: void","title":"Bitburner.officeapi.upgradeofficesize"},{"location":"bitburner.officeapi.upgradeofficesize/#officeapiupgradeofficesize-method","text":"Upgrade office size. Signature: upgradeOfficeSize(divisionName: string, cityName: string, size: number): void;","title":"OfficeAPI.upgradeOfficeSize() method"},{"location":"bitburner.officeapi.upgradeofficesize/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city size number Amount of positions to open Returns: void","title":"Parameters"},{"location":"bitburner.ordertypes/","text":"Home > bitburner > OrderTypes OrderTypes enum Signature: export enum OrderTypes Enumeration Members Member Value Description LimitBuy \"Limit Buy Order\" LimitSell \"Limit Sell Order\" StopBuy \"Stop Buy Order\" StopSell \"Stop Sell Order\"","title":"Bitburner.ordertypes"},{"location":"bitburner.ordertypes/#ordertypes-enum","text":"Signature: export enum OrderTypes","title":"OrderTypes enum"},{"location":"bitburner.ordertypes/#enumeration-members","text":"Member Value Description LimitBuy \"Limit Buy Order\" LimitSell \"Limit Sell Order\" StopBuy \"Stop Buy Order\" StopSell \"Stop Sell Order\"","title":"Enumeration Members"},{"location":"bitburner.player.bitnoden/","text":"Home > bitburner > Player > bitNodeN Player.bitNodeN property Signature: bitNodeN: number;","title":"Bitburner.player.bitnoden"},{"location":"bitburner.player.bitnoden/#playerbitnoden-property","text":"Signature: bitNodeN: number;","title":"Player.bitNodeN property"},{"location":"bitburner.player.city/","text":"Home > bitburner > Player > city Player.city property Signature: city: string;","title":"Bitburner.player.city"},{"location":"bitburner.player.city/#playercity-property","text":"Signature: city: string;","title":"Player.city property"},{"location":"bitburner.player.entropy/","text":"Home > bitburner > Player > entropy Player.entropy property Signature: entropy: number;","title":"Bitburner.player.entropy"},{"location":"bitburner.player.entropy/#playerentropy-property","text":"Signature: entropy: number;","title":"Player.entropy property"},{"location":"bitburner.player.exp/","text":"Home > bitburner > Player > exp Player.exp property Signature: exp: Skills;","title":"Bitburner.player.exp"},{"location":"bitburner.player.exp/#playerexp-property","text":"Signature: exp: Skills;","title":"Player.exp property"},{"location":"bitburner.player.factions/","text":"Home > bitburner > Player > factions Player.factions property Signature: factions: string[];","title":"Bitburner.player.factions"},{"location":"bitburner.player.factions/#playerfactions-property","text":"Signature: factions: string[];","title":"Player.factions property"},{"location":"bitburner.player.hascorporation/","text":"Home > bitburner > Player > hasCorporation Player.hasCorporation property Signature: hasCorporation: boolean;","title":"Bitburner.player.hascorporation"},{"location":"bitburner.player.hascorporation/#playerhascorporation-property","text":"Signature: hasCorporation: boolean;","title":"Player.hasCorporation property"},{"location":"bitburner.player.hp/","text":"Home > bitburner > Player > hp Player.hp property Signature: hp: HP;","title":"Bitburner.player.hp"},{"location":"bitburner.player.hp/#playerhp-property","text":"Signature: hp: HP;","title":"Player.hp property"},{"location":"bitburner.player.inbladeburner/","text":"Home > bitburner > Player > inBladeburner Player.inBladeburner property Signature: inBladeburner: boolean;","title":"Bitburner.player.inbladeburner"},{"location":"bitburner.player.inbladeburner/#playerinbladeburner-property","text":"Signature: inBladeburner: boolean;","title":"Player.inBladeburner property"},{"location":"bitburner.player.jobs/","text":"Home > bitburner > Player > jobs Player.jobs property Signature: jobs: Record<string, string>;","title":"Bitburner.player.jobs"},{"location":"bitburner.player.jobs/#playerjobs-property","text":"Signature: jobs: Record<string, string>;","title":"Player.jobs property"},{"location":"bitburner.player.location/","text":"Home > bitburner > Player > location Player.location property Signature: location: string;","title":"Bitburner.player.location"},{"location":"bitburner.player.location/#playerlocation-property","text":"Signature: location: string;","title":"Player.location property"},{"location":"bitburner.player/","text":"Home > bitburner > Player Player interface Signature: interface Player Properties Property Type Description bitNodeN number city string entropy number exp Skills factions string[] hasCorporation boolean hp HP inBladeburner boolean jobs Record<string, string> location string money number mults Multipliers numPeopleKilled number playtimeSinceLastAug number playtimeSinceLastBitnode number skills Skills tor boolean totalPlaytime number","title":"Bitburner.player"},{"location":"bitburner.player/#player-interface","text":"Signature: interface Player","title":"Player interface"},{"location":"bitburner.player/#properties","text":"Property Type Description bitNodeN number city string entropy number exp Skills factions string[] hasCorporation boolean hp HP inBladeburner boolean jobs Record<string, string> location string money number mults Multipliers numPeopleKilled number playtimeSinceLastAug number playtimeSinceLastBitnode number skills Skills tor boolean totalPlaytime number","title":"Properties"},{"location":"bitburner.player.money/","text":"Home > bitburner > Player > money Player.money property Signature: money: number;","title":"Bitburner.player.money"},{"location":"bitburner.player.money/#playermoney-property","text":"Signature: money: number;","title":"Player.money property"},{"location":"bitburner.player.mults/","text":"Home > bitburner > Player > mults Player.mults property Signature: mults: Multipliers;","title":"Bitburner.player.mults"},{"location":"bitburner.player.mults/#playermults-property","text":"Signature: mults: Multipliers;","title":"Player.mults property"},{"location":"bitburner.player.numpeoplekilled/","text":"Home > bitburner > Player > numPeopleKilled Player.numPeopleKilled property Signature: numPeopleKilled: number;","title":"Bitburner.player.numpeoplekilled"},{"location":"bitburner.player.numpeoplekilled/#playernumpeoplekilled-property","text":"Signature: numPeopleKilled: number;","title":"Player.numPeopleKilled property"},{"location":"bitburner.player.playtimesincelastaug/","text":"Home > bitburner > Player > playtimeSinceLastAug Player.playtimeSinceLastAug property Signature: playtimeSinceLastAug: number;","title":"Bitburner.player.playtimesincelastaug"},{"location":"bitburner.player.playtimesincelastaug/#playerplaytimesincelastaug-property","text":"Signature: playtimeSinceLastAug: number;","title":"Player.playtimeSinceLastAug property"},{"location":"bitburner.player.playtimesincelastbitnode/","text":"Home > bitburner > Player > playtimeSinceLastBitnode Player.playtimeSinceLastBitnode property Signature: playtimeSinceLastBitnode: number;","title":"Bitburner.player.playtimesincelastbitnode"},{"location":"bitburner.player.playtimesincelastbitnode/#playerplaytimesincelastbitnode-property","text":"Signature: playtimeSinceLastBitnode: number;","title":"Player.playtimeSinceLastBitnode property"},{"location":"bitburner.player.skills/","text":"Home > bitburner > Player > skills Player.skills property Signature: skills: Skills;","title":"Bitburner.player.skills"},{"location":"bitburner.player.skills/#playerskills-property","text":"Signature: skills: Skills;","title":"Player.skills property"},{"location":"bitburner.player.tor/","text":"Home > bitburner > Player > tor Player.tor property Signature: tor: boolean;","title":"Bitburner.player.tor"},{"location":"bitburner.player.tor/#playertor-property","text":"Signature: tor: boolean;","title":"Player.tor property"},{"location":"bitburner.player.totalplaytime/","text":"Home > bitburner > Player > totalPlaytime Player.totalPlaytime property Signature: totalPlaytime: number;","title":"Bitburner.player.totalplaytime"},{"location":"bitburner.player.totalplaytime/#playertotalplaytime-property","text":"Signature: totalPlaytime: number;","title":"Player.totalPlaytime property"},{"location":"bitburner.portdata/","text":"Home > bitburner > PortData PortData type Signature: type PortData = string | number;","title":"Bitburner.portdata"},{"location":"bitburner.portdata/#portdata-type","text":"Signature: type PortData = string | number;","title":"PortData type"},{"location":"bitburner.positiontypes/","text":"Home > bitburner > PositionTypes PositionTypes enum Signature: export enum PositionTypes Enumeration Members Member Value Description Long \"L\" Short \"S\"","title":"Bitburner.positiontypes"},{"location":"bitburner.positiontypes/#positiontypes-enum","text":"Signature: export enum PositionTypes","title":"PositionTypes enum"},{"location":"bitburner.positiontypes/#enumeration-members","text":"Member Value Description Long \"L\" Short \"S\"","title":"Enumeration Members"},{"location":"bitburner.possibleinfiltrationlocation.city/","text":"Home > bitburner > PossibleInfiltrationLocation > city PossibleInfiltrationLocation.city property Signature: city: string;","title":"Bitburner.possibleinfiltrationlocation.city"},{"location":"bitburner.possibleinfiltrationlocation.city/#possibleinfiltrationlocationcity-property","text":"Signature: city: string;","title":"PossibleInfiltrationLocation.city property"},{"location":"bitburner.possibleinfiltrationlocation/","text":"Home > bitburner > PossibleInfiltrationLocation PossibleInfiltrationLocation interface Signature: export interface PossibleInfiltrationLocation Properties Property Type Description city string name string","title":"Bitburner.possibleinfiltrationlocation"},{"location":"bitburner.possibleinfiltrationlocation/#possibleinfiltrationlocation-interface","text":"Signature: export interface PossibleInfiltrationLocation","title":"PossibleInfiltrationLocation interface"},{"location":"bitburner.possibleinfiltrationlocation/#properties","text":"Property Type Description city string name string","title":"Properties"},{"location":"bitburner.possibleinfiltrationlocation.name/","text":"Home > bitburner > PossibleInfiltrationLocation > name PossibleInfiltrationLocation.name property Signature: name: string;","title":"Bitburner.possibleinfiltrationlocation.name"},{"location":"bitburner.possibleinfiltrationlocation.name/#possibleinfiltrationlocationname-property","text":"Signature: name: string;","title":"PossibleInfiltrationLocation.name property"},{"location":"bitburner.processinfo.args/","text":"Home > bitburner > ProcessInfo > args ProcessInfo.args property Script's arguments Signature: args: (string | number | boolean)[];","title":"Bitburner.processinfo.args"},{"location":"bitburner.processinfo.args/#processinfoargs-property","text":"Script's arguments Signature: args: (string | number | boolean)[];","title":"ProcessInfo.args property"},{"location":"bitburner.processinfo.filename/","text":"Home > bitburner > ProcessInfo > filename ProcessInfo.filename property Script name. Signature: filename: string;","title":"Bitburner.processinfo.filename"},{"location":"bitburner.processinfo.filename/#processinfofilename-property","text":"Script name. Signature: filename: string;","title":"ProcessInfo.filename property"},{"location":"bitburner.processinfo/","text":"Home > bitburner > ProcessInfo ProcessInfo interface A single process on a server. Signature: export interface ProcessInfo Properties Property Type Description args (string | number | boolean)[] Script's arguments filename string Script name. pid number Process ID threads number Number of threads script is running with","title":"Bitburner.processinfo"},{"location":"bitburner.processinfo/#processinfo-interface","text":"A single process on a server. Signature: export interface ProcessInfo","title":"ProcessInfo interface"},{"location":"bitburner.processinfo/#properties","text":"Property Type Description args (string | number | boolean)[] Script's arguments filename string Script name. pid number Process ID threads number Number of threads script is running with","title":"Properties"},{"location":"bitburner.processinfo.pid/","text":"Home > bitburner > ProcessInfo > pid ProcessInfo.pid property Process ID Signature: pid: number;","title":"Bitburner.processinfo.pid"},{"location":"bitburner.processinfo.pid/#processinfopid-property","text":"Process ID Signature: pid: number;","title":"ProcessInfo.pid property"},{"location":"bitburner.processinfo.threads/","text":"Home > bitburner > ProcessInfo > threads ProcessInfo.threads property Number of threads script is running with Signature: threads: number;","title":"Bitburner.processinfo.threads"},{"location":"bitburner.processinfo.threads/#processinfothreads-property","text":"Number of threads script is running with Signature: threads: number;","title":"ProcessInfo.threads property"},{"location":"bitburner.product.citydata/","text":"Home > bitburner > Product > cityData Product.cityData property Data refers to the production, sale, and quantity of the products These values are specific to a city For each city, the data is [qty, prod, sell] Signature: cityData: { [key: string]: number[] };","title":"Bitburner.product.citydata"},{"location":"bitburner.product.citydata/#productcitydata-property","text":"Data refers to the production, sale, and quantity of the products These values are specific to a city For each city, the data is [qty, prod, sell] Signature: cityData: { [key: string]: number[] };","title":"Product.cityData property"},{"location":"bitburner.product.cmp/","text":"Home > bitburner > Product > cmp Product.cmp property Competition for the product, only present if \"Market Research - Competition\" unlocked Signature: cmp: number | undefined;","title":"Bitburner.product.cmp"},{"location":"bitburner.product.cmp/#productcmp-property","text":"Competition for the product, only present if \"Market Research - Competition\" unlocked Signature: cmp: number | undefined;","title":"Product.cmp property"},{"location":"bitburner.product.developmentprogress/","text":"Home > bitburner > Product > developmentProgress Product.developmentProgress property Creation progress - A number between 0-100 representing percentage Signature: developmentProgress: number;","title":"Bitburner.product.developmentprogress"},{"location":"bitburner.product.developmentprogress/#productdevelopmentprogress-property","text":"Creation progress - A number between 0-100 representing percentage Signature: developmentProgress: number;","title":"Product.developmentProgress property"},{"location":"bitburner.product.dmd/","text":"Home > bitburner > Product > dmd Product.dmd property Demand for the product, only present if \"Market Research - Demand\" unlocked Signature: dmd: number | undefined;","title":"Bitburner.product.dmd"},{"location":"bitburner.product.dmd/#productdmd-property","text":"Demand for the product, only present if \"Market Research - Demand\" unlocked Signature: dmd: number | undefined;","title":"Product.dmd property"},{"location":"bitburner.product/","text":"Home > bitburner > Product Product interface Product in a warehouse Signature: interface Product Properties Property Type Description cityData { [key: string]: number[] } Data refers to the production, sale, and quantity of the products These values are specific to a city For each city, the data is [qty, prod, sell] cmp number | undefined Competition for the product, only present if \"Market Research - Competition\" unlocked developmentProgress number Creation progress - A number between 0-100 representing percentage dmd number | undefined Demand for the product, only present if \"Market Research - Demand\" unlocked name string Name of the product pCost number Production cost properties { [key: string]: number } Product Properties. The data is { qlt, per, dur, rel, aes, fea } rat number Product Rating sCost string | number Sell cost, can be \"MP+5\"","title":"Bitburner.product"},{"location":"bitburner.product/#product-interface","text":"Product in a warehouse Signature: interface Product","title":"Product interface"},{"location":"bitburner.product/#properties","text":"Property Type Description cityData { [key: string]: number[] } Data refers to the production, sale, and quantity of the products These values are specific to a city For each city, the data is [qty, prod, sell] cmp number | undefined Competition for the product, only present if \"Market Research - Competition\" unlocked developmentProgress number Creation progress - A number between 0-100 representing percentage dmd number | undefined Demand for the product, only present if \"Market Research - Demand\" unlocked name string Name of the product pCost number Production cost properties { [key: string]: number } Product Properties. The data is { qlt, per, dur, rel, aes, fea } rat number Product Rating sCost string | number Sell cost, can be \"MP+5\"","title":"Properties"},{"location":"bitburner.product.name/","text":"Home > bitburner > Product > name Product.name property Name of the product Signature: name: string;","title":"Bitburner.product.name"},{"location":"bitburner.product.name/#productname-property","text":"Name of the product Signature: name: string;","title":"Product.name property"},{"location":"bitburner.product.pcost/","text":"Home > bitburner > Product > pCost Product.pCost property Production cost Signature: pCost: number;","title":"Bitburner.product.pcost"},{"location":"bitburner.product.pcost/#productpcost-property","text":"Production cost Signature: pCost: number;","title":"Product.pCost property"},{"location":"bitburner.product.properties/","text":"Home > bitburner > Product > properties Product.properties property Product Properties. The data is { qlt, per, dur, rel, aes, fea } Signature: properties: { [key: string]: number };","title":"Bitburner.product.properties"},{"location":"bitburner.product.properties/#productproperties-property","text":"Product Properties. The data is { qlt, per, dur, rel, aes, fea } Signature: properties: { [key: string]: number };","title":"Product.properties property"},{"location":"bitburner.product.rat/","text":"Home > bitburner > Product > rat Product.rat property Product Rating Signature: rat: number;","title":"Bitburner.product.rat"},{"location":"bitburner.product.rat/#productrat-property","text":"Product Rating Signature: rat: number;","title":"Product.rat property"},{"location":"bitburner.product.scost/","text":"Home > bitburner > Product > sCost Product.sCost property Sell cost, can be \"MP+5\" Signature: sCost: string | number;","title":"Bitburner.product.scost"},{"location":"bitburner.product.scost/#productscost-property","text":"Sell cost, can be \"MP+5\" Signature: sCost: string | number;","title":"Product.sCost property"},{"location":"bitburner.recentscript/","text":"Home > bitburner > RecentScript RecentScript interface Signature: export interface RecentScript extends RunningScript Extends: RunningScript Properties Property Type Description timeOfDeath Date Timestamp of when the script was killed","title":"Bitburner.recentscript"},{"location":"bitburner.recentscript/#recentscript-interface","text":"Signature: export interface RecentScript extends RunningScript Extends: RunningScript","title":"RecentScript interface"},{"location":"bitburner.recentscript/#properties","text":"Property Type Description timeOfDeath Date Timestamp of when the script was killed","title":"Properties"},{"location":"bitburner.recentscript.timeofdeath/","text":"Home > bitburner > RecentScript > timeOfDeath RecentScript.timeOfDeath property Timestamp of when the script was killed Signature: timeOfDeath: Date;","title":"Bitburner.recentscript.timeofdeath"},{"location":"bitburner.recentscript.timeofdeath/#recentscripttimeofdeath-property","text":"Timestamp of when the script was killed Signature: timeOfDeath: Date;","title":"RecentScript.timeOfDeath property"},{"location":"bitburner.reputationformulas.calculatefavortorep/","text":"Home > bitburner > ReputationFormulas > calculateFavorToRep ReputationFormulas.calculateFavorToRep() method Calculate the total required amount of faction reputation to reach a target favor. Signature: calculateFavorToRep(favor: number): number; Parameters Parameter Type Description favor number target faction favor. Returns: number The calculated faction reputation required.","title":"Bitburner.reputationformulas.calculatefavortorep"},{"location":"bitburner.reputationformulas.calculatefavortorep/#reputationformulascalculatefavortorep-method","text":"Calculate the total required amount of faction reputation to reach a target favor. Signature: calculateFavorToRep(favor: number): number;","title":"ReputationFormulas.calculateFavorToRep() method"},{"location":"bitburner.reputationformulas.calculatefavortorep/#parameters","text":"Parameter Type Description favor number target faction favor. Returns: number The calculated faction reputation required.","title":"Parameters"},{"location":"bitburner.reputationformulas.calculatereptofavor/","text":"Home > bitburner > ReputationFormulas > calculateRepToFavor ReputationFormulas.calculateRepToFavor() method Calculate the resulting faction favor of a total amount of reputation. (Faction favor is gained whenever you install an Augmentation.) Signature: calculateRepToFavor(rep: number): number; Parameters Parameter Type Description rep number amount of reputation. Returns: number The calculated faction favor.","title":"Bitburner.reputationformulas.calculatereptofavor"},{"location":"bitburner.reputationformulas.calculatereptofavor/#reputationformulascalculatereptofavor-method","text":"Calculate the resulting faction favor of a total amount of reputation. (Faction favor is gained whenever you install an Augmentation.) Signature: calculateRepToFavor(rep: number): number;","title":"ReputationFormulas.calculateRepToFavor() method"},{"location":"bitburner.reputationformulas.calculatereptofavor/#parameters","text":"Parameter Type Description rep number amount of reputation. Returns: number The calculated faction favor.","title":"Parameters"},{"location":"bitburner.reputationformulas/","text":"Home > bitburner > ReputationFormulas ReputationFormulas interface Reputation formulas Signature: interface ReputationFormulas Methods Method Description calculateFavorToRep(favor) Calculate the total required amount of faction reputation to reach a target favor. calculateRepToFavor(rep) Calculate the resulting faction favor of a total amount of reputation. (Faction favor is gained whenever you install an Augmentation.) repFromDonation(amount, player) Calculate how much rep would be gained.","title":"Bitburner.reputationformulas"},{"location":"bitburner.reputationformulas/#reputationformulas-interface","text":"Reputation formulas Signature: interface ReputationFormulas","title":"ReputationFormulas interface"},{"location":"bitburner.reputationformulas/#methods","text":"Method Description calculateFavorToRep(favor) Calculate the total required amount of faction reputation to reach a target favor. calculateRepToFavor(rep) Calculate the resulting faction favor of a total amount of reputation. (Faction favor is gained whenever you install an Augmentation.) repFromDonation(amount, player) Calculate how much rep would be gained.","title":"Methods"},{"location":"bitburner.reputationformulas.repfromdonation/","text":"Home > bitburner > ReputationFormulas > repFromDonation ReputationFormulas.repFromDonation() method Calculate how much rep would be gained. Signature: repFromDonation(amount: number, player: Player): number; Parameters Parameter Type Description amount number Amount of money donated player Player Player info from getPlayer Returns: number","title":"Bitburner.reputationformulas.repfromdonation"},{"location":"bitburner.reputationformulas.repfromdonation/#reputationformulasrepfromdonation-method","text":"Calculate how much rep would be gained. Signature: repFromDonation(amount: number, player: Player): number;","title":"ReputationFormulas.repFromDonation() method"},{"location":"bitburner.reputationformulas.repfromdonation/#parameters","text":"Parameter Type Description amount number Amount of money donated player Player Player info from getPlayer Returns: number","title":"Parameters"},{"location":"bitburner.runningscript.args/","text":"Home > bitburner > RunningScript > args RunningScript.args property Arguments the script was called with Signature: args: (string | number | boolean)[];","title":"Bitburner.runningscript.args"},{"location":"bitburner.runningscript.args/#runningscriptargs-property","text":"Arguments the script was called with Signature: args: (string | number | boolean)[];","title":"RunningScript.args property"},{"location":"bitburner.runningscript.filename/","text":"Home > bitburner > RunningScript > filename RunningScript.filename property Filename of the script Signature: filename: string;","title":"Bitburner.runningscript.filename"},{"location":"bitburner.runningscript.filename/#runningscriptfilename-property","text":"Filename of the script Signature: filename: string;","title":"RunningScript.filename property"},{"location":"bitburner.runningscript.logs/","text":"Home > bitburner > RunningScript > logs RunningScript.logs property Script logs as an array. The newest log entries are at the bottom. Timestamps, if enabled, are placed inside [brackets] at the start of each line. Signature: logs: string[];","title":"Bitburner.runningscript.logs"},{"location":"bitburner.runningscript.logs/#runningscriptlogs-property","text":"Script logs as an array. The newest log entries are at the bottom. Timestamps, if enabled, are placed inside [brackets] at the start of each line. Signature: logs: string[];","title":"RunningScript.logs property"},{"location":"bitburner.runningscript/","text":"Home > bitburner > RunningScript RunningScript interface Signature: export interface RunningScript Properties Property Type Description args (string | number | boolean)[] Arguments the script was called with filename string Filename of the script logs string[] Script logs as an array. The newest log entries are at the bottom. Timestamps, if enabled, are placed inside [brackets] at the start of each line. offlineExpGained number Total amount of hacking experience earned from this script when offline offlineMoneyMade number Total amount of money made by this script when offline offlineRunningTime number Number of seconds that the script has been running offline onlineExpGained number Total amount of hacking experience earned from this script when online onlineMoneyMade number Total amount of money made by this script when online onlineRunningTime number Number of seconds that this script has been running online pid number Process ID. Must be an integer ramUsage number How much RAM this script uses for ONE thread server string Hostname of the server on which this script runs threads number Number of threads that this script runs with","title":"Bitburner.runningscript"},{"location":"bitburner.runningscript/#runningscript-interface","text":"Signature: export interface RunningScript","title":"RunningScript interface"},{"location":"bitburner.runningscript/#properties","text":"Property Type Description args (string | number | boolean)[] Arguments the script was called with filename string Filename of the script logs string[] Script logs as an array. The newest log entries are at the bottom. Timestamps, if enabled, are placed inside [brackets] at the start of each line. offlineExpGained number Total amount of hacking experience earned from this script when offline offlineMoneyMade number Total amount of money made by this script when offline offlineRunningTime number Number of seconds that the script has been running offline onlineExpGained number Total amount of hacking experience earned from this script when online onlineMoneyMade number Total amount of money made by this script when online onlineRunningTime number Number of seconds that this script has been running online pid number Process ID. Must be an integer ramUsage number How much RAM this script uses for ONE thread server string Hostname of the server on which this script runs threads number Number of threads that this script runs with","title":"Properties"},{"location":"bitburner.runningscript.offlineexpgained/","text":"Home > bitburner > RunningScript > offlineExpGained RunningScript.offlineExpGained property Total amount of hacking experience earned from this script when offline Signature: offlineExpGained: number;","title":"Bitburner.runningscript.offlineexpgained"},{"location":"bitburner.runningscript.offlineexpgained/#runningscriptofflineexpgained-property","text":"Total amount of hacking experience earned from this script when offline Signature: offlineExpGained: number;","title":"RunningScript.offlineExpGained property"},{"location":"bitburner.runningscript.offlinemoneymade/","text":"Home > bitburner > RunningScript > offlineMoneyMade RunningScript.offlineMoneyMade property Total amount of money made by this script when offline Signature: offlineMoneyMade: number;","title":"Bitburner.runningscript.offlinemoneymade"},{"location":"bitburner.runningscript.offlinemoneymade/#runningscriptofflinemoneymade-property","text":"Total amount of money made by this script when offline Signature: offlineMoneyMade: number;","title":"RunningScript.offlineMoneyMade property"},{"location":"bitburner.runningscript.offlinerunningtime/","text":"Home > bitburner > RunningScript > offlineRunningTime RunningScript.offlineRunningTime property Number of seconds that the script has been running offline Signature: offlineRunningTime: number;","title":"Bitburner.runningscript.offlinerunningtime"},{"location":"bitburner.runningscript.offlinerunningtime/#runningscriptofflinerunningtime-property","text":"Number of seconds that the script has been running offline Signature: offlineRunningTime: number;","title":"RunningScript.offlineRunningTime property"},{"location":"bitburner.runningscript.onlineexpgained/","text":"Home > bitburner > RunningScript > onlineExpGained RunningScript.onlineExpGained property Total amount of hacking experience earned from this script when online Signature: onlineExpGained: number;","title":"Bitburner.runningscript.onlineexpgained"},{"location":"bitburner.runningscript.onlineexpgained/#runningscriptonlineexpgained-property","text":"Total amount of hacking experience earned from this script when online Signature: onlineExpGained: number;","title":"RunningScript.onlineExpGained property"},{"location":"bitburner.runningscript.onlinemoneymade/","text":"Home > bitburner > RunningScript > onlineMoneyMade RunningScript.onlineMoneyMade property Total amount of money made by this script when online Signature: onlineMoneyMade: number;","title":"Bitburner.runningscript.onlinemoneymade"},{"location":"bitburner.runningscript.onlinemoneymade/#runningscriptonlinemoneymade-property","text":"Total amount of money made by this script when online Signature: onlineMoneyMade: number;","title":"RunningScript.onlineMoneyMade property"},{"location":"bitburner.runningscript.onlinerunningtime/","text":"Home > bitburner > RunningScript > onlineRunningTime RunningScript.onlineRunningTime property Number of seconds that this script has been running online Signature: onlineRunningTime: number;","title":"Bitburner.runningscript.onlinerunningtime"},{"location":"bitburner.runningscript.onlinerunningtime/#runningscriptonlinerunningtime-property","text":"Number of seconds that this script has been running online Signature: onlineRunningTime: number;","title":"RunningScript.onlineRunningTime property"},{"location":"bitburner.runningscript.pid/","text":"Home > bitburner > RunningScript > pid RunningScript.pid property Process ID. Must be an integer Signature: pid: number;","title":"Bitburner.runningscript.pid"},{"location":"bitburner.runningscript.pid/#runningscriptpid-property","text":"Process ID. Must be an integer Signature: pid: number;","title":"RunningScript.pid property"},{"location":"bitburner.runningscript.ramusage/","text":"Home > bitburner > RunningScript > ramUsage RunningScript.ramUsage property How much RAM this script uses for ONE thread Signature: ramUsage: number;","title":"Bitburner.runningscript.ramusage"},{"location":"bitburner.runningscript.ramusage/#runningscriptramusage-property","text":"How much RAM this script uses for ONE thread Signature: ramUsage: number;","title":"RunningScript.ramUsage property"},{"location":"bitburner.runningscript.server/","text":"Home > bitburner > RunningScript > server RunningScript.server property Hostname of the server on which this script runs Signature: server: string;","title":"Bitburner.runningscript.server"},{"location":"bitburner.runningscript.server/#runningscriptserver-property","text":"Hostname of the server on which this script runs Signature: server: string;","title":"RunningScript.server property"},{"location":"bitburner.runningscript.threads/","text":"Home > bitburner > RunningScript > threads RunningScript.threads property Number of threads that this script runs with Signature: threads: number;","title":"Bitburner.runningscript.threads"},{"location":"bitburner.runningscript.threads/#runningscriptthreads-property","text":"Number of threads that this script runs with Signature: threads: number;","title":"RunningScript.threads property"},{"location":"bitburner.scriptarg/","text":"Home > bitburner > ScriptArg ScriptArg type Signature: type ScriptArg = string | number | boolean;","title":"Bitburner.scriptarg"},{"location":"bitburner.scriptarg/#scriptarg-type","text":"Signature: type ScriptArg = string | number | boolean;","title":"ScriptArg type"},{"location":"bitburner.server.backdoorinstalled/","text":"Home > bitburner > Server > backdoorInstalled Server.backdoorInstalled property Flag indicating whether this server has a backdoor installed by a player Signature: backdoorInstalled: boolean;","title":"Bitburner.server.backdoorinstalled"},{"location":"bitburner.server.backdoorinstalled/#serverbackdoorinstalled-property","text":"Flag indicating whether this server has a backdoor installed by a player Signature: backdoorInstalled: boolean;","title":"Server.backdoorInstalled property"},{"location":"bitburner.server.basedifficulty/","text":"Home > bitburner > Server > baseDifficulty Server.baseDifficulty property Initial server security level (i.e. security level when the server was created) Signature: baseDifficulty: number;","title":"Bitburner.server.basedifficulty"},{"location":"bitburner.server.basedifficulty/#serverbasedifficulty-property","text":"Initial server security level (i.e. security level when the server was created) Signature: baseDifficulty: number;","title":"Server.baseDifficulty property"},{"location":"bitburner.server.cpucores/","text":"Home > bitburner > Server > cpuCores Server.cpuCores property How many CPU cores this server has. Maximum of 8. Affects magnitude of grow and weaken. Signature: cpuCores: number;","title":"Bitburner.server.cpucores"},{"location":"bitburner.server.cpucores/#servercpucores-property","text":"How many CPU cores this server has. Maximum of 8. Affects magnitude of grow and weaken. Signature: cpuCores: number;","title":"Server.cpuCores property"},{"location":"bitburner.server.ftpportopen/","text":"Home > bitburner > Server > ftpPortOpen Server.ftpPortOpen property Flag indicating whether the FTP port is open Signature: ftpPortOpen: boolean;","title":"Bitburner.server.ftpportopen"},{"location":"bitburner.server.ftpportopen/#serverftpportopen-property","text":"Flag indicating whether the FTP port is open Signature: ftpPortOpen: boolean;","title":"Server.ftpPortOpen property"},{"location":"bitburner.server.hackdifficulty/","text":"Home > bitburner > Server > hackDifficulty Server.hackDifficulty property Server Security Level Signature: hackDifficulty: number;","title":"Bitburner.server.hackdifficulty"},{"location":"bitburner.server.hackdifficulty/#serverhackdifficulty-property","text":"Server Security Level Signature: hackDifficulty: number;","title":"Server.hackDifficulty property"},{"location":"bitburner.server.hasadminrights/","text":"Home > bitburner > Server > hasAdminRights Server.hasAdminRights property Flag indicating whether player has admin/root access to this server Signature: hasAdminRights: boolean;","title":"Bitburner.server.hasadminrights"},{"location":"bitburner.server.hasadminrights/#serverhasadminrights-property","text":"Flag indicating whether player has admin/root access to this server Signature: hasAdminRights: boolean;","title":"Server.hasAdminRights property"},{"location":"bitburner.server.hostname/","text":"Home > bitburner > Server > hostname Server.hostname property Hostname. Must be unique Signature: hostname: string;","title":"Bitburner.server.hostname"},{"location":"bitburner.server.hostname/#serverhostname-property","text":"Hostname. Must be unique Signature: hostname: string;","title":"Server.hostname property"},{"location":"bitburner.server.httpportopen/","text":"Home > bitburner > Server > httpPortOpen Server.httpPortOpen property Flag indicating whether HTTP Port is open Signature: httpPortOpen: boolean;","title":"Bitburner.server.httpportopen"},{"location":"bitburner.server.httpportopen/#serverhttpportopen-property","text":"Flag indicating whether HTTP Port is open Signature: httpPortOpen: boolean;","title":"Server.httpPortOpen property"},{"location":"bitburner.server.ip/","text":"Home > bitburner > Server > ip Server.ip property IP Address. Must be unique Signature: ip: string;","title":"Bitburner.server.ip"},{"location":"bitburner.server.ip/#serverip-property","text":"IP Address. Must be unique Signature: ip: string;","title":"Server.ip property"},{"location":"bitburner.server.isconnectedto/","text":"Home > bitburner > Server > isConnectedTo Server.isConnectedTo property Flag indicating whether player is currently connected to this server Signature: isConnectedTo: boolean;","title":"Bitburner.server.isconnectedto"},{"location":"bitburner.server.isconnectedto/#serverisconnectedto-property","text":"Flag indicating whether player is currently connected to this server Signature: isConnectedTo: boolean;","title":"Server.isConnectedTo property"},{"location":"bitburner.server.maxram/","text":"Home > bitburner > Server > maxRam Server.maxRam property RAM (GB) available on this server Signature: maxRam: number;","title":"Bitburner.server.maxram"},{"location":"bitburner.server.maxram/#servermaxram-property","text":"RAM (GB) available on this server Signature: maxRam: number;","title":"Server.maxRam property"},{"location":"bitburner.server/","text":"Home > bitburner > Server Server interface A single server. Signature: export interface Server Properties Property Type Description backdoorInstalled boolean Flag indicating whether this server has a backdoor installed by a player baseDifficulty number Initial server security level (i.e. security level when the server was created) cpuCores number How many CPU cores this server has. Maximum of 8. Affects magnitude of grow and weaken. ftpPortOpen boolean Flag indicating whether the FTP port is open hackDifficulty number Server Security Level hasAdminRights boolean Flag indicating whether player has admin/root access to this server hostname string Hostname. Must be unique httpPortOpen boolean Flag indicating whether HTTP Port is open ip string IP Address. Must be unique isConnectedTo boolean Flag indicating whether player is currently connected to this server maxRam number RAM (GB) available on this server minDifficulty number Minimum server security level that this server can be weakened to moneyAvailable number How much money currently resides on the server and can be hacked moneyMax number Maximum amount of money that this server can hold numOpenPortsRequired number Number of open ports required in order to gain admin/root access openPortCount number How many ports are currently opened on the server organizationName string Name of company/faction/etc. that this server belongs to. Optional, not applicable to all Servers purchasedByPlayer boolean Flag indicating whether this is a purchased server ramUsed number RAM (GB) used. i.e. unavailable RAM requiredHackingSkill number Hacking level required to hack this server serverGrowth number Parameter that affects how effectively this server's money can be increased using the grow() Netscript function smtpPortOpen boolean Flag indicating whether SMTP Port is open sqlPortOpen boolean Flag indicating whether SQL Port is open sshPortOpen boolean Flag indicating whether the SSH Port is open","title":"Bitburner.server"},{"location":"bitburner.server/#server-interface","text":"A single server. Signature: export interface Server","title":"Server interface"},{"location":"bitburner.server/#properties","text":"Property Type Description backdoorInstalled boolean Flag indicating whether this server has a backdoor installed by a player baseDifficulty number Initial server security level (i.e. security level when the server was created) cpuCores number How many CPU cores this server has. Maximum of 8. Affects magnitude of grow and weaken. ftpPortOpen boolean Flag indicating whether the FTP port is open hackDifficulty number Server Security Level hasAdminRights boolean Flag indicating whether player has admin/root access to this server hostname string Hostname. Must be unique httpPortOpen boolean Flag indicating whether HTTP Port is open ip string IP Address. Must be unique isConnectedTo boolean Flag indicating whether player is currently connected to this server maxRam number RAM (GB) available on this server minDifficulty number Minimum server security level that this server can be weakened to moneyAvailable number How much money currently resides on the server and can be hacked moneyMax number Maximum amount of money that this server can hold numOpenPortsRequired number Number of open ports required in order to gain admin/root access openPortCount number How many ports are currently opened on the server organizationName string Name of company/faction/etc. that this server belongs to. Optional, not applicable to all Servers purchasedByPlayer boolean Flag indicating whether this is a purchased server ramUsed number RAM (GB) used. i.e. unavailable RAM requiredHackingSkill number Hacking level required to hack this server serverGrowth number Parameter that affects how effectively this server's money can be increased using the grow() Netscript function smtpPortOpen boolean Flag indicating whether SMTP Port is open sqlPortOpen boolean Flag indicating whether SQL Port is open sshPortOpen boolean Flag indicating whether the SSH Port is open","title":"Properties"},{"location":"bitburner.server.mindifficulty/","text":"Home > bitburner > Server > minDifficulty Server.minDifficulty property Minimum server security level that this server can be weakened to Signature: minDifficulty: number;","title":"Bitburner.server.mindifficulty"},{"location":"bitburner.server.mindifficulty/#servermindifficulty-property","text":"Minimum server security level that this server can be weakened to Signature: minDifficulty: number;","title":"Server.minDifficulty property"},{"location":"bitburner.server.moneyavailable/","text":"Home > bitburner > Server > moneyAvailable Server.moneyAvailable property How much money currently resides on the server and can be hacked Signature: moneyAvailable: number;","title":"Bitburner.server.moneyavailable"},{"location":"bitburner.server.moneyavailable/#servermoneyavailable-property","text":"How much money currently resides on the server and can be hacked Signature: moneyAvailable: number;","title":"Server.moneyAvailable property"},{"location":"bitburner.server.moneymax/","text":"Home > bitburner > Server > moneyMax Server.moneyMax property Maximum amount of money that this server can hold Signature: moneyMax: number;","title":"Bitburner.server.moneymax"},{"location":"bitburner.server.moneymax/#servermoneymax-property","text":"Maximum amount of money that this server can hold Signature: moneyMax: number;","title":"Server.moneyMax property"},{"location":"bitburner.server.numopenportsrequired/","text":"Home > bitburner > Server > numOpenPortsRequired Server.numOpenPortsRequired property Number of open ports required in order to gain admin/root access Signature: numOpenPortsRequired: number;","title":"Bitburner.server.numopenportsrequired"},{"location":"bitburner.server.numopenportsrequired/#servernumopenportsrequired-property","text":"Number of open ports required in order to gain admin/root access Signature: numOpenPortsRequired: number;","title":"Server.numOpenPortsRequired property"},{"location":"bitburner.server.openportcount/","text":"Home > bitburner > Server > openPortCount Server.openPortCount property How many ports are currently opened on the server Signature: openPortCount: number;","title":"Bitburner.server.openportcount"},{"location":"bitburner.server.openportcount/#serveropenportcount-property","text":"How many ports are currently opened on the server Signature: openPortCount: number;","title":"Server.openPortCount property"},{"location":"bitburner.server.organizationname/","text":"Home > bitburner > Server > organizationName Server.organizationName property Name of company/faction/etc. that this server belongs to. Optional, not applicable to all Servers Signature: organizationName: string;","title":"Bitburner.server.organizationname"},{"location":"bitburner.server.organizationname/#serverorganizationname-property","text":"Name of company/faction/etc. that this server belongs to. Optional, not applicable to all Servers Signature: organizationName: string;","title":"Server.organizationName property"},{"location":"bitburner.server.purchasedbyplayer/","text":"Home > bitburner > Server > purchasedByPlayer Server.purchasedByPlayer property Flag indicating whether this is a purchased server Signature: purchasedByPlayer: boolean;","title":"Bitburner.server.purchasedbyplayer"},{"location":"bitburner.server.purchasedbyplayer/#serverpurchasedbyplayer-property","text":"Flag indicating whether this is a purchased server Signature: purchasedByPlayer: boolean;","title":"Server.purchasedByPlayer property"},{"location":"bitburner.server.ramused/","text":"Home > bitburner > Server > ramUsed Server.ramUsed property RAM (GB) used. i.e. unavailable RAM Signature: ramUsed: number;","title":"Bitburner.server.ramused"},{"location":"bitburner.server.ramused/#serverramused-property","text":"RAM (GB) used. i.e. unavailable RAM Signature: ramUsed: number;","title":"Server.ramUsed property"},{"location":"bitburner.server.requiredhackingskill/","text":"Home > bitburner > Server > requiredHackingSkill Server.requiredHackingSkill property Hacking level required to hack this server Signature: requiredHackingSkill: number;","title":"Bitburner.server.requiredhackingskill"},{"location":"bitburner.server.requiredhackingskill/#serverrequiredhackingskill-property","text":"Hacking level required to hack this server Signature: requiredHackingSkill: number;","title":"Server.requiredHackingSkill property"},{"location":"bitburner.server.servergrowth/","text":"Home > bitburner > Server > serverGrowth Server.serverGrowth property Parameter that affects how effectively this server's money can be increased using the grow() Netscript function Signature: serverGrowth: number;","title":"Bitburner.server.servergrowth"},{"location":"bitburner.server.servergrowth/#serverservergrowth-property","text":"Parameter that affects how effectively this server's money can be increased using the grow() Netscript function Signature: serverGrowth: number;","title":"Server.serverGrowth property"},{"location":"bitburner.server.smtpportopen/","text":"Home > bitburner > Server > smtpPortOpen Server.smtpPortOpen property Flag indicating whether SMTP Port is open Signature: smtpPortOpen: boolean;","title":"Bitburner.server.smtpportopen"},{"location":"bitburner.server.smtpportopen/#serversmtpportopen-property","text":"Flag indicating whether SMTP Port is open Signature: smtpPortOpen: boolean;","title":"Server.smtpPortOpen property"},{"location":"bitburner.server.sqlportopen/","text":"Home > bitburner > Server > sqlPortOpen Server.sqlPortOpen property Flag indicating whether SQL Port is open Signature: sqlPortOpen: boolean;","title":"Bitburner.server.sqlportopen"},{"location":"bitburner.server.sqlportopen/#serversqlportopen-property","text":"Flag indicating whether SQL Port is open Signature: sqlPortOpen: boolean;","title":"Server.sqlPortOpen property"},{"location":"bitburner.server.sshportopen/","text":"Home > bitburner > Server > sshPortOpen Server.sshPortOpen property Flag indicating whether the SSH Port is open Signature: sshPortOpen: boolean;","title":"Bitburner.server.sshportopen"},{"location":"bitburner.server.sshportopen/#serversshportopen-property","text":"Flag indicating whether the SSH Port is open Signature: sshPortOpen: boolean;","title":"Server.sshPortOpen property"},{"location":"bitburner.singularity.applytocompany/","text":"Home > bitburner > Singularity > applyToCompany Singularity.applyToCompany() method Apply for a job at a company. Signature: applyToCompany(companyName: string, field: string): boolean; Parameters Parameter Type Description companyName string Name of company to apply to. field string Field to which you want to apply. Returns: boolean True if the player successfully get a job/promotion, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will automatically try to apply to the specified company for a position in the specified field. This function can also be used to apply for promotions by specifying the company and field you are already employed at. This function will return true if you successfully get a job/promotion, and false otherwise. Note that if you are trying to use this function to apply for a promotion and you don\u2019t get one, it will return false.","title":"Bitburner.singularity.applytocompany"},{"location":"bitburner.singularity.applytocompany/#singularityapplytocompany-method","text":"Apply for a job at a company. Signature: applyToCompany(companyName: string, field: string): boolean;","title":"Singularity.applyToCompany() method"},{"location":"bitburner.singularity.applytocompany/#parameters","text":"Parameter Type Description companyName string Name of company to apply to. field string Field to which you want to apply. Returns: boolean True if the player successfully get a job/promotion, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.applytocompany/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will automatically try to apply to the specified company for a position in the specified field. This function can also be used to apply for promotions by specifying the company and field you are already employed at. This function will return true if you successfully get a job/promotion, and false otherwise. Note that if you are trying to use this function to apply for a promotion and you don\u2019t get one, it will return false.","title":"Remarks"},{"location":"bitburner.singularity.b1tflum3/","text":"Home > bitburner > Singularity > b1tflum3 Singularity.b1tflum3() method b1t_flum3 into a different BN. Signature: b1tflum3(nextBN: number, callbackScript?: string): void; Parameters Parameter Type Description nextBN number BN number to jump to callbackScript string Name of the script to launch in the next BN. Returns: void Remarks RAM cost: 16 GB * 16/4/1","title":"Bitburner.singularity.b1tflum3"},{"location":"bitburner.singularity.b1tflum3/#singularityb1tflum3-method","text":"b1t_flum3 into a different BN. Signature: b1tflum3(nextBN: number, callbackScript?: string): void;","title":"Singularity.b1tflum3() method"},{"location":"bitburner.singularity.b1tflum3/#parameters","text":"Parameter Type Description nextBN number BN number to jump to callbackScript string Name of the script to launch in the next BN. Returns: void","title":"Parameters"},{"location":"bitburner.singularity.b1tflum3/#remarks","text":"RAM cost: 16 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.checkfactioninvitations/","text":"Home > bitburner > Singularity > checkFactionInvitations Singularity.checkFactionInvitations() method List all current faction invitations. Signature: checkFactionInvitations(): string[]; Returns: string[] Array with the name of all Factions you currently have outstanding invitations from. Remarks RAM cost: 3 GB * 16/4/1 Returns an array with the name of all Factions you currently have outstanding invitations from.","title":"Bitburner.singularity.checkfactioninvitations"},{"location":"bitburner.singularity.checkfactioninvitations/#singularitycheckfactioninvitations-method","text":"List all current faction invitations. Signature: checkFactionInvitations(): string[]; Returns: string[] Array with the name of all Factions you currently have outstanding invitations from.","title":"Singularity.checkFactionInvitations() method"},{"location":"bitburner.singularity.checkfactioninvitations/#remarks","text":"RAM cost: 3 GB * 16/4/1 Returns an array with the name of all Factions you currently have outstanding invitations from.","title":"Remarks"},{"location":"bitburner.singularity.commitcrime/","text":"Home > bitburner > Singularity > commitCrime Singularity.commitCrime() method Commit a crime. Signature: commitCrime(crime: CrimeType | CrimeNames, focus?: boolean): number; Parameters Parameter Type Description crime CrimeType | CrimeNames Name of crime to attempt. focus boolean Acquire player focus on this crime. Optional. Defaults to true. Returns: number The number of milliseconds it takes to attempt the specified crime. Remarks RAM cost: 5 GB * 16/4/1 This function is used to automatically attempt to commit crimes. If you are already in the middle of some \u2018working\u2019 action (such as working for a company or training at a gym), then running this function will automatically cancel that action and give you your earnings. This function returns the number of milliseconds it takes to attempt the specified crime (e.g It takes 60 seconds to attempt the \u2018Rob Store\u2019 crime, so running commitCrime('ROBSTORE') will return 60,000).","title":"Bitburner.singularity.commitcrime"},{"location":"bitburner.singularity.commitcrime/#singularitycommitcrime-method","text":"Commit a crime. Signature: commitCrime(crime: CrimeType | CrimeNames, focus?: boolean): number;","title":"Singularity.commitCrime() method"},{"location":"bitburner.singularity.commitcrime/#parameters","text":"Parameter Type Description crime CrimeType | CrimeNames Name of crime to attempt. focus boolean Acquire player focus on this crime. Optional. Defaults to true. Returns: number The number of milliseconds it takes to attempt the specified crime.","title":"Parameters"},{"location":"bitburner.singularity.commitcrime/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function is used to automatically attempt to commit crimes. If you are already in the middle of some \u2018working\u2019 action (such as working for a company or training at a gym), then running this function will automatically cancel that action and give you your earnings. This function returns the number of milliseconds it takes to attempt the specified crime (e.g It takes 60 seconds to attempt the \u2018Rob Store\u2019 crime, so running commitCrime('ROBSTORE') will return 60,000).","title":"Remarks"},{"location":"bitburner.singularity.connect/","text":"Home > bitburner > Singularity > connect Singularity.connect() method Connect to a server. Signature: connect(hostname: string): boolean; Parameters Parameter Type Description hostname string Returns: boolean True if the connect command was successful, false otherwise. Remarks RAM cost: 2 GB * 16/4/1 Run the connect HOSTNAME command in the terminal. Can only connect to neighbors.","title":"Bitburner.singularity.connect"},{"location":"bitburner.singularity.connect/#singularityconnect-method","text":"Connect to a server. Signature: connect(hostname: string): boolean;","title":"Singularity.connect() method"},{"location":"bitburner.singularity.connect/#parameters","text":"Parameter Type Description hostname string Returns: boolean True if the connect command was successful, false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.connect/#remarks","text":"RAM cost: 2 GB * 16/4/1 Run the connect HOSTNAME command in the terminal. Can only connect to neighbors.","title":"Remarks"},{"location":"bitburner.singularity.createprogram/","text":"Home > bitburner > Singularity > createProgram Singularity.createProgram() method Create a program. Signature: createProgram(program: string, focus?: boolean): boolean; Parameters Parameter Type Description program string Name of program to create. focus boolean Acquire player focus on this program creation. Optional. Defaults to true. Returns: boolean True if you successfully start working on the specified program, and false otherwise. Remarks RAM cost: 5 GB * 16/4/1 This function will automatically set you to start working on creating the specified program. If you are already in the middle of some \u201cworking\u201d action (such as working for a company, training at a gym, or taking a course), then running this function will automatically cancel that action and give you your earnings. This function returns true if you successfully start working on the specified program, and false otherwise. Note that creating a program using this function has the same hacking level requirements as it normally would. These level requirements are: * BruteSSH.exe: 50 * FTPCrack.exe: 100 * relaySMTP.exe: 250 * HTTPWorm.exe: 500 * SQLInject.exe: 750 * DeepscanV1.exe: 75 * DeepscanV2.exe: 400 * ServerProfiler.exe: 75 * AutoLink.exe: 25 Example 1 // NS1: createProgram(\u201crelaysmtp.exe\u201d); Example 2 // NS2: ns.createProgram(\u201crelaysmtp.exe\u201d);","title":"Bitburner.singularity.createprogram"},{"location":"bitburner.singularity.createprogram/#singularitycreateprogram-method","text":"Create a program. Signature: createProgram(program: string, focus?: boolean): boolean;","title":"Singularity.createProgram() method"},{"location":"bitburner.singularity.createprogram/#parameters","text":"Parameter Type Description program string Name of program to create. focus boolean Acquire player focus on this program creation. Optional. Defaults to true. Returns: boolean True if you successfully start working on the specified program, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.createprogram/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function will automatically set you to start working on creating the specified program. If you are already in the middle of some \u201cworking\u201d action (such as working for a company, training at a gym, or taking a course), then running this function will automatically cancel that action and give you your earnings. This function returns true if you successfully start working on the specified program, and false otherwise. Note that creating a program using this function has the same hacking level requirements as it normally would. These level requirements are: * BruteSSH.exe: 50 * FTPCrack.exe: 100 * relaySMTP.exe: 250 * HTTPWorm.exe: 500 * SQLInject.exe: 750 * DeepscanV1.exe: 75 * DeepscanV2.exe: 400 * ServerProfiler.exe: 75 * AutoLink.exe: 25","title":"Remarks"},{"location":"bitburner.singularity.createprogram/#example-1","text":"// NS1: createProgram(\u201crelaysmtp.exe\u201d);","title":"Example 1"},{"location":"bitburner.singularity.createprogram/#example-2","text":"// NS2: ns.createProgram(\u201crelaysmtp.exe\u201d);","title":"Example 2"},{"location":"bitburner.singularity.destroyw0r1dd43m0n/","text":"Home > bitburner > Singularity > destroyW0r1dD43m0n Singularity.destroyW0r1dD43m0n() method Destroy the w0r1d_d43m0n and move on to the next BN. Signature: destroyW0r1dD43m0n(nextBN: number, callbackScript?: string): void; Parameters Parameter Type Description nextBN number BN number to jump to callbackScript string Name of the script to launch in the next BN. Returns: void Remarks RAM cost: 32 GB * 16/4/1 You must have the special augment installed and the required hacking level OR Completed the final black op.","title":"Bitburner.singularity.destroyw0r1dd43m0n"},{"location":"bitburner.singularity.destroyw0r1dd43m0n/#singularitydestroyw0r1dd43m0n-method","text":"Destroy the w0r1d_d43m0n and move on to the next BN. Signature: destroyW0r1dD43m0n(nextBN: number, callbackScript?: string): void;","title":"Singularity.destroyW0r1dD43m0n() method"},{"location":"bitburner.singularity.destroyw0r1dd43m0n/#parameters","text":"Parameter Type Description nextBN number BN number to jump to callbackScript string Name of the script to launch in the next BN. Returns: void","title":"Parameters"},{"location":"bitburner.singularity.destroyw0r1dd43m0n/#remarks","text":"RAM cost: 32 GB * 16/4/1 You must have the special augment installed and the required hacking level OR Completed the final black op.","title":"Remarks"},{"location":"bitburner.singularity.donatetofaction/","text":"Home > bitburner > Singularity > donateToFaction Singularity.donateToFaction() method Donate to a faction. Signature: donateToFaction(faction: string, amount: number): boolean; Parameters Parameter Type Description faction string Name of faction to donate to. amount number Amount of money to donate. Returns: boolean True if the money was donated, and false otherwise. Remarks RAM cost: 5 GB * 16/4/1 Attempts to donate money to the specified faction in exchange for reputation. Returns true if you successfully donate the money, and false otherwise.","title":"Bitburner.singularity.donatetofaction"},{"location":"bitburner.singularity.donatetofaction/#singularitydonatetofaction-method","text":"Donate to a faction. Signature: donateToFaction(faction: string, amount: number): boolean;","title":"Singularity.donateToFaction() method"},{"location":"bitburner.singularity.donatetofaction/#parameters","text":"Parameter Type Description faction string Name of faction to donate to. amount number Amount of money to donate. Returns: boolean True if the money was donated, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.donatetofaction/#remarks","text":"RAM cost: 5 GB * 16/4/1 Attempts to donate money to the specified faction in exchange for reputation. Returns true if you successfully donate the money, and false otherwise.","title":"Remarks"},{"location":"bitburner.singularity.exportgame/","text":"Home > bitburner > Singularity > exportGame Singularity.exportGame() method Backup game save. Signature: exportGame(): void; Returns: void Remarks RAM cost: 1 GB * 16/4/1 This function will automatically opens the backup save prompt and claim the free faction favour if available.","title":"Bitburner.singularity.exportgame"},{"location":"bitburner.singularity.exportgame/#singularityexportgame-method","text":"Backup game save. Signature: exportGame(): void; Returns: void","title":"Singularity.exportGame() method"},{"location":"bitburner.singularity.exportgame/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function will automatically opens the backup save prompt and claim the free faction favour if available.","title":"Remarks"},{"location":"bitburner.singularity.exportgamebonus/","text":"Home > bitburner > Singularity > exportGameBonus Singularity.exportGameBonus() method Returns Backup save bonus availability. Signature: exportGameBonus(): boolean; Returns: boolean Remarks RAM cost: 0.5 GB * 16/4/1 This function will check if there is a bonus for backing up your save.","title":"Bitburner.singularity.exportgamebonus"},{"location":"bitburner.singularity.exportgamebonus/#singularityexportgamebonus-method","text":"Returns Backup save bonus availability. Signature: exportGameBonus(): boolean; Returns: boolean","title":"Singularity.exportGameBonus() method"},{"location":"bitburner.singularity.exportgamebonus/#remarks","text":"RAM cost: 0.5 GB * 16/4/1 This function will check if there is a bonus for backing up your save.","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationbaseprice/","text":"Home > bitburner > Singularity > getAugmentationBasePrice Singularity.getAugmentationBasePrice() method Get base price of an augmentation. Signature: getAugmentationBasePrice(augName: string): number; Parameters Parameter Type Description augName string Name of Augmentation. Returns: number Base price of the augmentation, before price multiplier. Remarks RAM cost: 2.5 GB * 16/4/1","title":"Bitburner.singularity.getaugmentationbaseprice"},{"location":"bitburner.singularity.getaugmentationbaseprice/#singularitygetaugmentationbaseprice-method","text":"Get base price of an augmentation. Signature: getAugmentationBasePrice(augName: string): number;","title":"Singularity.getAugmentationBasePrice() method"},{"location":"bitburner.singularity.getaugmentationbaseprice/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: number Base price of the augmentation, before price multiplier.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationbaseprice/#remarks","text":"RAM cost: 2.5 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationcost/","text":"Home > bitburner > Singularity > getAugmentationCost Singularity.getAugmentationCost() method Warning: This API is now obsolete. use getAugmentationPrice getAugmentationRepReq Get the price and reputation of an augmentation. Signature: getAugmentationCost(augName: string): [number, number]; Parameters Parameter Type Description augName string Name of Augmentation. Returns: [number, number] Array with first element as a reputation requirement and second element as the money cost. Remarks RAM cost: 5 GB * 16/4/1 This function returns an array with two elements that gives the cost for the specified Augmentation. The first element in the returned array is the reputation requirement of the Augmentation, and the second element is the money cost. If an invalid Augmentation name is passed in for the augName argument, this function will return the array [-1, -1].","title":"Bitburner.singularity.getaugmentationcost"},{"location":"bitburner.singularity.getaugmentationcost/#singularitygetaugmentationcost-method","text":"Warning: This API is now obsolete. use getAugmentationPrice getAugmentationRepReq Get the price and reputation of an augmentation. Signature: getAugmentationCost(augName: string): [number, number];","title":"Singularity.getAugmentationCost() method"},{"location":"bitburner.singularity.getaugmentationcost/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: [number, number] Array with first element as a reputation requirement and second element as the money cost.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationcost/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function returns an array with two elements that gives the cost for the specified Augmentation. The first element in the returned array is the reputation requirement of the Augmentation, and the second element is the money cost. If an invalid Augmentation name is passed in for the augName argument, this function will return the array [-1, -1].","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationprereq/","text":"Home > bitburner > Singularity > getAugmentationPrereq Singularity.getAugmentationPrereq() method Get the pre-requisite of an augmentation. Signature: getAugmentationPrereq(augName: string): string[]; Parameters Parameter Type Description augName string Name of Augmentation. Returns: string[] Array with the names of the prerequisite Augmentation(s) for the specified Augmentation. Remarks RAM cost: 5 GB * 16/4/1 This function returns an array with the names of the prerequisite Augmentation(s) for the specified Augmentation. If there are no prerequisites, a blank array is returned.","title":"Bitburner.singularity.getaugmentationprereq"},{"location":"bitburner.singularity.getaugmentationprereq/#singularitygetaugmentationprereq-method","text":"Get the pre-requisite of an augmentation. Signature: getAugmentationPrereq(augName: string): string[];","title":"Singularity.getAugmentationPrereq() method"},{"location":"bitburner.singularity.getaugmentationprereq/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: string[] Array with the names of the prerequisite Augmentation(s) for the specified Augmentation.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationprereq/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function returns an array with the names of the prerequisite Augmentation(s) for the specified Augmentation. If there are no prerequisites, a blank array is returned.","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationprice/","text":"Home > bitburner > Singularity > getAugmentationPrice Singularity.getAugmentationPrice() method Get price of an augmentation. Signature: getAugmentationPrice(augName: string): number; Parameters Parameter Type Description augName string Name of Augmentation. Returns: number Price of the augmentation. Remarks RAM cost: 2.5 GB * 16/4/1","title":"Bitburner.singularity.getaugmentationprice"},{"location":"bitburner.singularity.getaugmentationprice/#singularitygetaugmentationprice-method","text":"Get price of an augmentation. Signature: getAugmentationPrice(augName: string): number;","title":"Singularity.getAugmentationPrice() method"},{"location":"bitburner.singularity.getaugmentationprice/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: number Price of the augmentation.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationprice/#remarks","text":"RAM cost: 2.5 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationrepreq/","text":"Home > bitburner > Singularity > getAugmentationRepReq Singularity.getAugmentationRepReq() method Get reputation requirement of an augmentation. Signature: getAugmentationRepReq(augName: string): number; Parameters Parameter Type Description augName string Name of Augmentation. Returns: number Reputation requirement of the augmentation. Remarks RAM cost: 2.5 GB * 16/4/1","title":"Bitburner.singularity.getaugmentationrepreq"},{"location":"bitburner.singularity.getaugmentationrepreq/#singularitygetaugmentationrepreq-method","text":"Get reputation requirement of an augmentation. Signature: getAugmentationRepReq(augName: string): number;","title":"Singularity.getAugmentationRepReq() method"},{"location":"bitburner.singularity.getaugmentationrepreq/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: number Reputation requirement of the augmentation.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationrepreq/#remarks","text":"RAM cost: 2.5 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationsfromfaction/","text":"Home > bitburner > Singularity > getAugmentationsFromFaction Singularity.getAugmentationsFromFaction() method Get a list of augmentation available from a faction. Signature: getAugmentationsFromFaction(faction: string): string[]; Parameters Parameter Type Description faction string Name of faction. Returns: string[] Array containing the names of all Augmentations. Remarks RAM cost: 5 GB * 16/4/1 Returns an array containing the names (as strings) of all Augmentations that are available from the specified faction.","title":"Bitburner.singularity.getaugmentationsfromfaction"},{"location":"bitburner.singularity.getaugmentationsfromfaction/#singularitygetaugmentationsfromfaction-method","text":"Get a list of augmentation available from a faction. Signature: getAugmentationsFromFaction(faction: string): string[];","title":"Singularity.getAugmentationsFromFaction() method"},{"location":"bitburner.singularity.getaugmentationsfromfaction/#parameters","text":"Parameter Type Description faction string Name of faction. Returns: string[] Array containing the names of all Augmentations.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationsfromfaction/#remarks","text":"RAM cost: 5 GB * 16/4/1 Returns an array containing the names (as strings) of all Augmentations that are available from the specified faction.","title":"Remarks"},{"location":"bitburner.singularity.getaugmentationstats/","text":"Home > bitburner > Singularity > getAugmentationStats Singularity.getAugmentationStats() method Get the stats of an augmentation. Signature: getAugmentationStats(name: string): Multipliers; Parameters Parameter Type Description name string Name of Augmentation. CASE-SENSITIVE. Returns: Multipliers Augmentation stats. Remarks RAM cost: 5 GB * 16/4/1 This function returns augmentation stats.","title":"Bitburner.singularity.getaugmentationstats"},{"location":"bitburner.singularity.getaugmentationstats/#singularitygetaugmentationstats-method","text":"Get the stats of an augmentation. Signature: getAugmentationStats(name: string): Multipliers;","title":"Singularity.getAugmentationStats() method"},{"location":"bitburner.singularity.getaugmentationstats/#parameters","text":"Parameter Type Description name string Name of Augmentation. CASE-SENSITIVE. Returns: Multipliers Augmentation stats.","title":"Parameters"},{"location":"bitburner.singularity.getaugmentationstats/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function returns augmentation stats.","title":"Remarks"},{"location":"bitburner.singularity.getcompanyfavor/","text":"Home > bitburner > Singularity > getCompanyFavor Singularity.getCompanyFavor() method Get company favor. Signature: getCompanyFavor(companyName: string): number; Parameters Parameter Type Description companyName string Name of the company. Returns: number Amount of favor you have at the specified company. Remarks RAM cost: 1 GB * 16/4/1 This function will return the amount of favor you have at the specified company. If the company passed in as an argument is invalid, -1 will be returned.","title":"Bitburner.singularity.getcompanyfavor"},{"location":"bitburner.singularity.getcompanyfavor/#singularitygetcompanyfavor-method","text":"Get company favor. Signature: getCompanyFavor(companyName: string): number;","title":"Singularity.getCompanyFavor() method"},{"location":"bitburner.singularity.getcompanyfavor/#parameters","text":"Parameter Type Description companyName string Name of the company. Returns: number Amount of favor you have at the specified company.","title":"Parameters"},{"location":"bitburner.singularity.getcompanyfavor/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function will return the amount of favor you have at the specified company. If the company passed in as an argument is invalid, -1 will be returned.","title":"Remarks"},{"location":"bitburner.singularity.getcompanyfavorgain/","text":"Home > bitburner > Singularity > getCompanyFavorGain Singularity.getCompanyFavorGain() method Get company favor gain. Signature: getCompanyFavorGain(companyName: string): number; Parameters Parameter Type Description companyName string Name of the company. Returns: number Amount of favor you gain at the specified company when you reset by installing Augmentations. Remarks RAM cost: 0.75 GB * 16/4/1 This function will return the amount of favor you will gain for the specified company when you reset by installing Augmentations.","title":"Bitburner.singularity.getcompanyfavorgain"},{"location":"bitburner.singularity.getcompanyfavorgain/#singularitygetcompanyfavorgain-method","text":"Get company favor gain. Signature: getCompanyFavorGain(companyName: string): number;","title":"Singularity.getCompanyFavorGain() method"},{"location":"bitburner.singularity.getcompanyfavorgain/#parameters","text":"Parameter Type Description companyName string Name of the company. Returns: number Amount of favor you gain at the specified company when you reset by installing Augmentations.","title":"Parameters"},{"location":"bitburner.singularity.getcompanyfavorgain/#remarks","text":"RAM cost: 0.75 GB * 16/4/1 This function will return the amount of favor you will gain for the specified company when you reset by installing Augmentations.","title":"Remarks"},{"location":"bitburner.singularity.getcompanyrep/","text":"Home > bitburner > Singularity > getCompanyRep Singularity.getCompanyRep() method Get company reputation. Signature: getCompanyRep(companyName: string): number; Parameters Parameter Type Description companyName string Name of the company. Returns: number Amount of reputation you have at the specified company. Remarks RAM cost: 1 GB * 16/4/1 This function will return the amount of reputation you have at the specified company. If the company passed in as an argument is invalid, -1 will be returned.","title":"Bitburner.singularity.getcompanyrep"},{"location":"bitburner.singularity.getcompanyrep/#singularitygetcompanyrep-method","text":"Get company reputation. Signature: getCompanyRep(companyName: string): number;","title":"Singularity.getCompanyRep() method"},{"location":"bitburner.singularity.getcompanyrep/#parameters","text":"Parameter Type Description companyName string Name of the company. Returns: number Amount of reputation you have at the specified company.","title":"Parameters"},{"location":"bitburner.singularity.getcompanyrep/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function will return the amount of reputation you have at the specified company. If the company passed in as an argument is invalid, -1 will be returned.","title":"Remarks"},{"location":"bitburner.singularity.getcrimechance/","text":"Home > bitburner > Singularity > getCrimeChance Singularity.getCrimeChance() method Get chance to successfully commit a crime. Signature: getCrimeChance(crime: CrimeType | CrimeNames): number; Parameters Parameter Type Description crime CrimeType | CrimeNames Name of crime. Returns: number Chance of success at committing the specified crime. Remarks RAM cost: 5 GB * 16/4/1 This function returns your chance of success at committing the specified crime.","title":"Bitburner.singularity.getcrimechance"},{"location":"bitburner.singularity.getcrimechance/#singularitygetcrimechance-method","text":"Get chance to successfully commit a crime. Signature: getCrimeChance(crime: CrimeType | CrimeNames): number;","title":"Singularity.getCrimeChance() method"},{"location":"bitburner.singularity.getcrimechance/#parameters","text":"Parameter Type Description crime CrimeType | CrimeNames Name of crime. Returns: number Chance of success at committing the specified crime.","title":"Parameters"},{"location":"bitburner.singularity.getcrimechance/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function returns your chance of success at committing the specified crime.","title":"Remarks"},{"location":"bitburner.singularity.getcrimestats/","text":"Home > bitburner > Singularity > getCrimeStats Singularity.getCrimeStats() method Get stats related to a crime. Signature: getCrimeStats(crime: CrimeType | CrimeNames): CrimeStats; Parameters Parameter Type Description crime CrimeType | CrimeNames Name of crime. Returns: CrimeStats The stats of the crime. Remarks RAM cost: 5 GB * 16/4/1 Returns the stats of the crime.","title":"Bitburner.singularity.getcrimestats"},{"location":"bitburner.singularity.getcrimestats/#singularitygetcrimestats-method","text":"Get stats related to a crime. Signature: getCrimeStats(crime: CrimeType | CrimeNames): CrimeStats;","title":"Singularity.getCrimeStats() method"},{"location":"bitburner.singularity.getcrimestats/#parameters","text":"Parameter Type Description crime CrimeType | CrimeNames Name of crime. Returns: CrimeStats The stats of the crime.","title":"Parameters"},{"location":"bitburner.singularity.getcrimestats/#remarks","text":"RAM cost: 5 GB * 16/4/1 Returns the stats of the crime.","title":"Remarks"},{"location":"bitburner.singularity.getcurrentserver/","text":"Home > bitburner > Singularity > getCurrentServer Singularity.getCurrentServer() method Get the current server. Signature: getCurrentServer(): string; Returns: string Name of the current server. Remarks RAM cost: 2 GB * 16/4/1","title":"Bitburner.singularity.getcurrentserver"},{"location":"bitburner.singularity.getcurrentserver/#singularitygetcurrentserver-method","text":"Get the current server. Signature: getCurrentServer(): string; Returns: string Name of the current server.","title":"Singularity.getCurrentServer() method"},{"location":"bitburner.singularity.getcurrentserver/#remarks","text":"RAM cost: 2 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.getcurrentwork/","text":"Home > bitburner > Singularity > getCurrentWork Singularity.getCurrentWork() method Get the current work the player is doing. Signature: getCurrentWork(): any | null; Returns: any | null An object representing the current work. Fields depend on the kind of work. Remarks RAM cost: 0.5 GB * 16/4/1","title":"Bitburner.singularity.getcurrentwork"},{"location":"bitburner.singularity.getcurrentwork/#singularitygetcurrentwork-method","text":"Get the current work the player is doing. Signature: getCurrentWork(): any | null; Returns: any | null An object representing the current work. Fields depend on the kind of work.","title":"Singularity.getCurrentWork() method"},{"location":"bitburner.singularity.getcurrentwork/#remarks","text":"RAM cost: 0.5 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.getdarkwebprogramcost/","text":"Home > bitburner > Singularity > getDarkwebProgramCost Singularity.getDarkwebProgramCost() method Check the price of an exploit on the dark web Signature: getDarkwebProgramCost(programName: string): number; Parameters Parameter Type Description programName string Name of program to check the price of Returns: number Price of the specified darkweb program (if not yet purchased), 0 if it has already been purchased, or -1 if Tor has not been purchased. Throws an error if the specified program/exploit does not exist Remarks RAM cost: 0.5 GB * 16/4/1 This function allows you to check the price of a darkweb exploit/program. You MUST have a TOR router in order to use this function. The price returned by this function is the same price you would see with buy -l from the terminal. Returns the cost of the program if it has not been purchased yet, 0 if it has already been purchased, or -1 if Tor has not been purchased (and thus the program/exploit is not available for purchase). If the program does not exist, an error is thrown. Example 1 // NS1 getDarkwebProgramCost(\"brutessh.exe\"); Example 2 // NS2 ns.getDarkwebProgramCost(\"brutessh.exe\");","title":"Bitburner.singularity.getdarkwebprogramcost"},{"location":"bitburner.singularity.getdarkwebprogramcost/#singularitygetdarkwebprogramcost-method","text":"Check the price of an exploit on the dark web Signature: getDarkwebProgramCost(programName: string): number;","title":"Singularity.getDarkwebProgramCost() method"},{"location":"bitburner.singularity.getdarkwebprogramcost/#parameters","text":"Parameter Type Description programName string Name of program to check the price of Returns: number Price of the specified darkweb program (if not yet purchased), 0 if it has already been purchased, or -1 if Tor has not been purchased. Throws an error if the specified program/exploit does not exist","title":"Parameters"},{"location":"bitburner.singularity.getdarkwebprogramcost/#remarks","text":"RAM cost: 0.5 GB * 16/4/1 This function allows you to check the price of a darkweb exploit/program. You MUST have a TOR router in order to use this function. The price returned by this function is the same price you would see with buy -l from the terminal. Returns the cost of the program if it has not been purchased yet, 0 if it has already been purchased, or -1 if Tor has not been purchased (and thus the program/exploit is not available for purchase). If the program does not exist, an error is thrown.","title":"Remarks"},{"location":"bitburner.singularity.getdarkwebprogramcost/#example-1","text":"// NS1 getDarkwebProgramCost(\"brutessh.exe\");","title":"Example 1"},{"location":"bitburner.singularity.getdarkwebprogramcost/#example-2","text":"// NS2 ns.getDarkwebProgramCost(\"brutessh.exe\");","title":"Example 2"},{"location":"bitburner.singularity.getdarkwebprograms/","text":"Home > bitburner > Singularity > getDarkwebPrograms Singularity.getDarkwebPrograms() method Get a list of programs offered on the dark web. Signature: getDarkwebPrograms(): string[]; Returns: string[] a list of programs available for purchase on the dark web, or [] if Tor has not been purchased Remarks RAM cost: 1 GB * 16/4/1 This function allows the player to get a list of programs available for purchase on the dark web. Players MUST have purchased Tor to get the list of programs available. If Tor has not been purchased yet, this function will return an empty list. Example 1 // NS1 getDarkwebPrograms(); // returns ['BruteSSH.exe', 'FTPCrack.exe'...etc] Example 2 // NS2 ns.getDarkwebPrograms(); // returns ['BruteSSH.exe', 'FTPCrack.exe'...etc]","title":"Bitburner.singularity.getdarkwebprograms"},{"location":"bitburner.singularity.getdarkwebprograms/#singularitygetdarkwebprograms-method","text":"Get a list of programs offered on the dark web. Signature: getDarkwebPrograms(): string[]; Returns: string[] a list of programs available for purchase on the dark web, or [] if Tor has not been purchased","title":"Singularity.getDarkwebPrograms() method"},{"location":"bitburner.singularity.getdarkwebprograms/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function allows the player to get a list of programs available for purchase on the dark web. Players MUST have purchased Tor to get the list of programs available. If Tor has not been purchased yet, this function will return an empty list.","title":"Remarks"},{"location":"bitburner.singularity.getdarkwebprograms/#example-1","text":"// NS1 getDarkwebPrograms(); // returns ['BruteSSH.exe', 'FTPCrack.exe'...etc]","title":"Example 1"},{"location":"bitburner.singularity.getdarkwebprograms/#example-2","text":"// NS2 ns.getDarkwebPrograms(); // returns ['BruteSSH.exe', 'FTPCrack.exe'...etc]","title":"Example 2"},{"location":"bitburner.singularity.getfactionfavor/","text":"Home > bitburner > Singularity > getFactionFavor Singularity.getFactionFavor() method Get faction favor. Signature: getFactionFavor(faction: string): number; Parameters Parameter Type Description faction string Name of faction. Returns: number Amount of favor you have for the specified faction. Remarks RAM cost: 1 GB * 16/4/1 This function returns the amount of favor you have for the specified faction.","title":"Bitburner.singularity.getfactionfavor"},{"location":"bitburner.singularity.getfactionfavor/#singularitygetfactionfavor-method","text":"Get faction favor. Signature: getFactionFavor(faction: string): number;","title":"Singularity.getFactionFavor() method"},{"location":"bitburner.singularity.getfactionfavor/#parameters","text":"Parameter Type Description faction string Name of faction. Returns: number Amount of favor you have for the specified faction.","title":"Parameters"},{"location":"bitburner.singularity.getfactionfavor/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function returns the amount of favor you have for the specified faction.","title":"Remarks"},{"location":"bitburner.singularity.getfactionfavorgain/","text":"Home > bitburner > Singularity > getFactionFavorGain Singularity.getFactionFavorGain() method Get faction favor gain. Signature: getFactionFavorGain(faction: string): number; Parameters Parameter Type Description faction string Name of faction. Returns: number Amount of favor you will gain for the specified faction when you reset by installing Augmentations. Remarks RAM cost: 0.75 GB * 16/4/1 This function returns the amount of favor you will gain for the specified faction when you reset by installing Augmentations.","title":"Bitburner.singularity.getfactionfavorgain"},{"location":"bitburner.singularity.getfactionfavorgain/#singularitygetfactionfavorgain-method","text":"Get faction favor gain. Signature: getFactionFavorGain(faction: string): number;","title":"Singularity.getFactionFavorGain() method"},{"location":"bitburner.singularity.getfactionfavorgain/#parameters","text":"Parameter Type Description faction string Name of faction. Returns: number Amount of favor you will gain for the specified faction when you reset by installing Augmentations.","title":"Parameters"},{"location":"bitburner.singularity.getfactionfavorgain/#remarks","text":"RAM cost: 0.75 GB * 16/4/1 This function returns the amount of favor you will gain for the specified faction when you reset by installing Augmentations.","title":"Remarks"},{"location":"bitburner.singularity.getfactionrep/","text":"Home > bitburner > Singularity > getFactionRep Singularity.getFactionRep() method Get faction reputation. Signature: getFactionRep(faction: string): number; Parameters Parameter Type Description faction string Name of faction to work for. Returns: number Amount of reputation you have for the specified faction. Remarks RAM cost: 1 GB * 16/4/1 This function returns the amount of reputation you have for the specified faction.","title":"Bitburner.singularity.getfactionrep"},{"location":"bitburner.singularity.getfactionrep/#singularitygetfactionrep-method","text":"Get faction reputation. Signature: getFactionRep(faction: string): number;","title":"Singularity.getFactionRep() method"},{"location":"bitburner.singularity.getfactionrep/#parameters","text":"Parameter Type Description faction string Name of faction to work for. Returns: number Amount of reputation you have for the specified faction.","title":"Parameters"},{"location":"bitburner.singularity.getfactionrep/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function returns the amount of reputation you have for the specified faction.","title":"Remarks"},{"location":"bitburner.singularity.getownedaugmentations/","text":"Home > bitburner > Singularity > getOwnedAugmentations Singularity.getOwnedAugmentations() method Get a list of owned augmentation. Signature: getOwnedAugmentations(purchased?: boolean): string[]; Parameters Parameter Type Description purchased boolean Specifies whether the returned array should include Augmentations you have purchased but not yet installed. By default, this argument is false which means that the return value will NOT have the purchased Augmentations. Returns: string[] Array containing the names (as strings) of all Augmentations you have. Remarks RAM cost: 5 GB * 16/4/1 This function returns an array containing the names (as strings) of all Augmentations you have.","title":"Bitburner.singularity.getownedaugmentations"},{"location":"bitburner.singularity.getownedaugmentations/#singularitygetownedaugmentations-method","text":"Get a list of owned augmentation. Signature: getOwnedAugmentations(purchased?: boolean): string[];","title":"Singularity.getOwnedAugmentations() method"},{"location":"bitburner.singularity.getownedaugmentations/#parameters","text":"Parameter Type Description purchased boolean Specifies whether the returned array should include Augmentations you have purchased but not yet installed. By default, this argument is false which means that the return value will NOT have the purchased Augmentations. Returns: string[] Array containing the names (as strings) of all Augmentations you have.","title":"Parameters"},{"location":"bitburner.singularity.getownedaugmentations/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function returns an array containing the names (as strings) of all Augmentations you have.","title":"Remarks"},{"location":"bitburner.singularity.getownedsourcefiles/","text":"Home > bitburner > Singularity > getOwnedSourceFiles Singularity.getOwnedSourceFiles() method Get a list of acquired Source-Files. Signature: getOwnedSourceFiles(): SourceFileLvl[]; Returns: SourceFileLvl [] Array containing an object with number and level of the source file. Remarks RAM cost: 5 GB Returns an array of source files","title":"Bitburner.singularity.getownedsourcefiles"},{"location":"bitburner.singularity.getownedsourcefiles/#singularitygetownedsourcefiles-method","text":"Get a list of acquired Source-Files. Signature: getOwnedSourceFiles(): SourceFileLvl[]; Returns: SourceFileLvl [] Array containing an object with number and level of the source file.","title":"Singularity.getOwnedSourceFiles() method"},{"location":"bitburner.singularity.getownedsourcefiles/#remarks","text":"RAM cost: 5 GB Returns an array of source files","title":"Remarks"},{"location":"bitburner.singularity.getupgradehomecorescost/","text":"Home > bitburner > Singularity > getUpgradeHomeCoresCost Singularity.getUpgradeHomeCoresCost() method Get the price of upgrading home cores. Signature: getUpgradeHomeCoresCost(): number; Returns: number Cost of upgrading the player\u2019s home computer cores. Remarks RAM cost: 1.5 GB * 16/4/1 Returns the cost of upgrading the player\u2019s home computer cores.","title":"Bitburner.singularity.getupgradehomecorescost"},{"location":"bitburner.singularity.getupgradehomecorescost/#singularitygetupgradehomecorescost-method","text":"Get the price of upgrading home cores. Signature: getUpgradeHomeCoresCost(): number; Returns: number Cost of upgrading the player\u2019s home computer cores.","title":"Singularity.getUpgradeHomeCoresCost() method"},{"location":"bitburner.singularity.getupgradehomecorescost/#remarks","text":"RAM cost: 1.5 GB * 16/4/1 Returns the cost of upgrading the player\u2019s home computer cores.","title":"Remarks"},{"location":"bitburner.singularity.getupgradehomeramcost/","text":"Home > bitburner > Singularity > getUpgradeHomeRamCost Singularity.getUpgradeHomeRamCost() method Get the price of upgrading home RAM. Signature: getUpgradeHomeRamCost(): number; Returns: number Cost of upgrading the player\u2019s home computer RAM. Remarks RAM cost: 1.5 GB * 16/4/1 Returns the cost of upgrading the player\u2019s home computer RAM.","title":"Bitburner.singularity.getupgradehomeramcost"},{"location":"bitburner.singularity.getupgradehomeramcost/#singularitygetupgradehomeramcost-method","text":"Get the price of upgrading home RAM. Signature: getUpgradeHomeRamCost(): number; Returns: number Cost of upgrading the player\u2019s home computer RAM.","title":"Singularity.getUpgradeHomeRamCost() method"},{"location":"bitburner.singularity.getupgradehomeramcost/#remarks","text":"RAM cost: 1.5 GB * 16/4/1 Returns the cost of upgrading the player\u2019s home computer RAM.","title":"Remarks"},{"location":"bitburner.singularity.gotolocation/","text":"Home > bitburner > Singularity > goToLocation Singularity.goToLocation() method Go to a location. Signature: goToLocation(locationName: string): boolean; Parameters Parameter Type Description locationName string Name of the location. Returns: boolean True if the player was moved there, false otherwise. Remarks RAM cost: 5 GB * 16/4/1 Move the player to a specific location.","title":"Bitburner.singularity.gotolocation"},{"location":"bitburner.singularity.gotolocation/#singularitygotolocation-method","text":"Go to a location. Signature: goToLocation(locationName: string): boolean;","title":"Singularity.goToLocation() method"},{"location":"bitburner.singularity.gotolocation/#parameters","text":"Parameter Type Description locationName string Name of the location. Returns: boolean True if the player was moved there, false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.gotolocation/#remarks","text":"RAM cost: 5 GB * 16/4/1 Move the player to a specific location.","title":"Remarks"},{"location":"bitburner.singularity.gymworkout/","text":"Home > bitburner > Singularity > gymWorkout Singularity.gymWorkout() method Workout at the gym. Signature: gymWorkout(gymName: string, stat: string, focus?: boolean): boolean; Parameters Parameter Type Description gymName string Name of gym. You must be in the correct city for whatever gym you specify. stat string The stat you want to train. focus boolean Acquire player focus on this gym workout. Optional. Defaults to true. Returns: boolean True if actions is successfully started, false otherwise. Remarks RAM cost: 2 GB * 16/4/1 This function will automatically set you to start working out at a gym to train a particular stat. If you are already in the middle of some \u201cworking\u201d action (such as working at a company, for a faction, or on a program), then running this function will automatically cancel that action and give you your earnings. The cost and experience gains for all of these gyms are the same as if you were to manually visit these gyms and train","title":"Bitburner.singularity.gymworkout"},{"location":"bitburner.singularity.gymworkout/#singularitygymworkout-method","text":"Workout at the gym. Signature: gymWorkout(gymName: string, stat: string, focus?: boolean): boolean;","title":"Singularity.gymWorkout() method"},{"location":"bitburner.singularity.gymworkout/#parameters","text":"Parameter Type Description gymName string Name of gym. You must be in the correct city for whatever gym you specify. stat string The stat you want to train. focus boolean Acquire player focus on this gym workout. Optional. Defaults to true. Returns: boolean True if actions is successfully started, false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.gymworkout/#remarks","text":"RAM cost: 2 GB * 16/4/1 This function will automatically set you to start working out at a gym to train a particular stat. If you are already in the middle of some \u201cworking\u201d action (such as working at a company, for a faction, or on a program), then running this function will automatically cancel that action and give you your earnings. The cost and experience gains for all of these gyms are the same as if you were to manually visit these gyms and train","title":"Remarks"},{"location":"bitburner.singularity.hospitalize/","text":"Home > bitburner > Singularity > hospitalize Singularity.hospitalize() method Hospitalize the player. Signature: hospitalize(): void; Returns: void Remarks RAM cost: 0.25 GB * 16/4/1","title":"Bitburner.singularity.hospitalize"},{"location":"bitburner.singularity.hospitalize/#singularityhospitalize-method","text":"Hospitalize the player. Signature: hospitalize(): void; Returns: void","title":"Singularity.hospitalize() method"},{"location":"bitburner.singularity.hospitalize/#remarks","text":"RAM cost: 0.25 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.installaugmentations/","text":"Home > bitburner > Singularity > installAugmentations Singularity.installAugmentations() method Install your purchased augmentations. Signature: installAugmentations(cbScript?: string): void; Parameters Parameter Type Description cbScript string This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer. Returns: void Remarks RAM cost: 5 GB * 16/4/1 This function will automatically install your Augmentations, resetting the game as usual. If you do not own uninstalled Augmentations then the game will not reset.","title":"Bitburner.singularity.installaugmentations"},{"location":"bitburner.singularity.installaugmentations/#singularityinstallaugmentations-method","text":"Install your purchased augmentations. Signature: installAugmentations(cbScript?: string): void;","title":"Singularity.installAugmentations() method"},{"location":"bitburner.singularity.installaugmentations/#parameters","text":"Parameter Type Description cbScript string This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer. Returns: void","title":"Parameters"},{"location":"bitburner.singularity.installaugmentations/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function will automatically install your Augmentations, resetting the game as usual. If you do not own uninstalled Augmentations then the game will not reset.","title":"Remarks"},{"location":"bitburner.singularity.installbackdoor/","text":"Home > bitburner > Singularity > installBackdoor Singularity.installBackdoor() method Run the backdoor command in the terminal. Signature: installBackdoor(): Promise<void>; Returns: Promise<void> Promise waiting for the installation to finish. Remarks RAM cost: 2 GB * 16/4/1","title":"Bitburner.singularity.installbackdoor"},{"location":"bitburner.singularity.installbackdoor/#singularityinstallbackdoor-method","text":"Run the backdoor command in the terminal. Signature: installBackdoor(): Promise<void>; Returns: Promise<void> Promise waiting for the installation to finish.","title":"Singularity.installBackdoor() method"},{"location":"bitburner.singularity.installbackdoor/#remarks","text":"RAM cost: 2 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.isbusy/","text":"Home > bitburner > Singularity > isBusy Singularity.isBusy() method Check if the player is busy. Signature: isBusy(): boolean; Returns: boolean True if the player is currently performing an \u2018action\u2019, false otherwise. Remarks RAM cost: 0.5 GB * 16/4/1 Returns a boolean indicating whether or not the player is currently performing an \u2018action\u2019. These actions include working for a company/faction, studying at a university, working out at a gym, creating a program, committing a crime, or carrying out a Hacking Mission.","title":"Bitburner.singularity.isbusy"},{"location":"bitburner.singularity.isbusy/#singularityisbusy-method","text":"Check if the player is busy. Signature: isBusy(): boolean; Returns: boolean True if the player is currently performing an \u2018action\u2019, false otherwise.","title":"Singularity.isBusy() method"},{"location":"bitburner.singularity.isbusy/#remarks","text":"RAM cost: 0.5 GB * 16/4/1 Returns a boolean indicating whether or not the player is currently performing an \u2018action\u2019. These actions include working for a company/faction, studying at a university, working out at a gym, creating a program, committing a crime, or carrying out a Hacking Mission.","title":"Remarks"},{"location":"bitburner.singularity.isfocused/","text":"Home > bitburner > Singularity > isFocused Singularity.isFocused() method Check if the player is focused. Signature: isFocused(): boolean; Returns: boolean True if the player is focused. Remarks RAM cost: 0.1 GB * 16/4/1","title":"Bitburner.singularity.isfocused"},{"location":"bitburner.singularity.isfocused/#singularityisfocused-method","text":"Check if the player is focused. Signature: isFocused(): boolean; Returns: boolean True if the player is focused.","title":"Singularity.isFocused() method"},{"location":"bitburner.singularity.isfocused/#remarks","text":"RAM cost: 0.1 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.joinfaction/","text":"Home > bitburner > Singularity > joinFaction Singularity.joinFaction() method Join a faction. Signature: joinFaction(faction: string): boolean; Parameters Parameter Type Description faction string Name of faction to join. Returns: boolean True if player joined the faction, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will automatically accept an invitation from a faction and join it.","title":"Bitburner.singularity.joinfaction"},{"location":"bitburner.singularity.joinfaction/#singularityjoinfaction-method","text":"Join a faction. Signature: joinFaction(faction: string): boolean;","title":"Singularity.joinFaction() method"},{"location":"bitburner.singularity.joinfaction/#parameters","text":"Parameter Type Description faction string Name of faction to join. Returns: boolean True if player joined the faction, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.joinfaction/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will automatically accept an invitation from a faction and join it.","title":"Remarks"},{"location":"bitburner.singularity.manualhack/","text":"Home > bitburner > Singularity > manualHack Singularity.manualHack() method Run the hack command in the terminal. Signature: manualHack(): Promise<number>; Returns: Promise<number> Amount of money stolen by manual hacking. Remarks RAM cost: 2 GB * 16/4/1","title":"Bitburner.singularity.manualhack"},{"location":"bitburner.singularity.manualhack/#singularitymanualhack-method","text":"Run the hack command in the terminal. Signature: manualHack(): Promise<number>; Returns: Promise<number> Amount of money stolen by manual hacking.","title":"Singularity.manualHack() method"},{"location":"bitburner.singularity.manualhack/#remarks","text":"RAM cost: 2 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity/","text":"Home > bitburner > Singularity Singularity interface Singularity API Signature: export interface Singularity Remarks This API requires Source-File 4 to use. The RAM cost of all these functions is multiplied by 16/4/1 based on Source-File 4 levels. Methods Method Description applyToCompany(companyName, field) Apply for a job at a company. b1tflum3(nextBN, callbackScript) b1t_flum3 into a different BN. checkFactionInvitations() List all current faction invitations. commitCrime(crime, focus) Commit a crime. connect(hostname) Connect to a server. createProgram(program, focus) Create a program. destroyW0r1dD43m0n(nextBN, callbackScript) Destroy the w0r1d_d43m0n and move on to the next BN. donateToFaction(faction, amount) Donate to a faction. exportGame() Backup game save. exportGameBonus() Returns Backup save bonus availability. getAugmentationBasePrice(augName) Get base price of an augmentation. getAugmentationCost(augName) Get the price and reputation of an augmentation. getAugmentationPrereq(augName) Get the pre-requisite of an augmentation. getAugmentationPrice(augName) Get price of an augmentation. getAugmentationRepReq(augName) Get reputation requirement of an augmentation. getAugmentationsFromFaction(faction) Get a list of augmentation available from a faction. getAugmentationStats(name) Get the stats of an augmentation. getCompanyFavor(companyName) Get company favor. getCompanyFavorGain(companyName) Get company favor gain. getCompanyRep(companyName) Get company reputation. getCrimeChance(crime) Get chance to successfully commit a crime. getCrimeStats(crime) Get stats related to a crime. getCurrentServer() Get the current server. getCurrentWork() Get the current work the player is doing. getDarkwebProgramCost(programName) Check the price of an exploit on the dark web getDarkwebPrograms() Get a list of programs offered on the dark web. getFactionFavor(faction) Get faction favor. getFactionFavorGain(faction) Get faction favor gain. getFactionRep(faction) Get faction reputation. getOwnedAugmentations(purchased) Get a list of owned augmentation. getOwnedSourceFiles() Get a list of acquired Source-Files. getUpgradeHomeCoresCost() Get the price of upgrading home cores. getUpgradeHomeRamCost() Get the price of upgrading home RAM. goToLocation(locationName) Go to a location. gymWorkout(gymName, stat, focus) Workout at the gym. hospitalize() Hospitalize the player. installAugmentations(cbScript) Install your purchased augmentations. installBackdoor() Run the backdoor command in the terminal. isBusy() Check if the player is busy. isFocused() Check if the player is focused. joinFaction(faction) Join a faction. manualHack() Run the hack command in the terminal. purchaseAugmentation(faction, augmentation) Purchase an augmentation purchaseProgram(programName) Purchase a program from the dark web. purchaseTor() Purchase the TOR router. quitJob(companyName) Quit jobs by company. setFocus(focus) Set the players focus. softReset(cbScript) Soft reset the game. stopAction() Stop the current action. travelToCity(city) Travel to another city. universityCourse(universityName, courseName, focus) Take university class. upgradeHomeCores() Upgrade home computer cores. upgradeHomeRam() Upgrade home computer RAM. workForCompany(companyName, focus) Work for a company. workForFaction(faction, workType, focus) Work for a faction.","title":"Bitburner.singularity"},{"location":"bitburner.singularity/#singularity-interface","text":"Singularity API Signature: export interface Singularity","title":"Singularity interface"},{"location":"bitburner.singularity/#remarks","text":"This API requires Source-File 4 to use. The RAM cost of all these functions is multiplied by 16/4/1 based on Source-File 4 levels.","title":"Remarks"},{"location":"bitburner.singularity/#methods","text":"Method Description applyToCompany(companyName, field) Apply for a job at a company. b1tflum3(nextBN, callbackScript) b1t_flum3 into a different BN. checkFactionInvitations() List all current faction invitations. commitCrime(crime, focus) Commit a crime. connect(hostname) Connect to a server. createProgram(program, focus) Create a program. destroyW0r1dD43m0n(nextBN, callbackScript) Destroy the w0r1d_d43m0n and move on to the next BN. donateToFaction(faction, amount) Donate to a faction. exportGame() Backup game save. exportGameBonus() Returns Backup save bonus availability. getAugmentationBasePrice(augName) Get base price of an augmentation. getAugmentationCost(augName) Get the price and reputation of an augmentation. getAugmentationPrereq(augName) Get the pre-requisite of an augmentation. getAugmentationPrice(augName) Get price of an augmentation. getAugmentationRepReq(augName) Get reputation requirement of an augmentation. getAugmentationsFromFaction(faction) Get a list of augmentation available from a faction. getAugmentationStats(name) Get the stats of an augmentation. getCompanyFavor(companyName) Get company favor. getCompanyFavorGain(companyName) Get company favor gain. getCompanyRep(companyName) Get company reputation. getCrimeChance(crime) Get chance to successfully commit a crime. getCrimeStats(crime) Get stats related to a crime. getCurrentServer() Get the current server. getCurrentWork() Get the current work the player is doing. getDarkwebProgramCost(programName) Check the price of an exploit on the dark web getDarkwebPrograms() Get a list of programs offered on the dark web. getFactionFavor(faction) Get faction favor. getFactionFavorGain(faction) Get faction favor gain. getFactionRep(faction) Get faction reputation. getOwnedAugmentations(purchased) Get a list of owned augmentation. getOwnedSourceFiles() Get a list of acquired Source-Files. getUpgradeHomeCoresCost() Get the price of upgrading home cores. getUpgradeHomeRamCost() Get the price of upgrading home RAM. goToLocation(locationName) Go to a location. gymWorkout(gymName, stat, focus) Workout at the gym. hospitalize() Hospitalize the player. installAugmentations(cbScript) Install your purchased augmentations. installBackdoor() Run the backdoor command in the terminal. isBusy() Check if the player is busy. isFocused() Check if the player is focused. joinFaction(faction) Join a faction. manualHack() Run the hack command in the terminal. purchaseAugmentation(faction, augmentation) Purchase an augmentation purchaseProgram(programName) Purchase a program from the dark web. purchaseTor() Purchase the TOR router. quitJob(companyName) Quit jobs by company. setFocus(focus) Set the players focus. softReset(cbScript) Soft reset the game. stopAction() Stop the current action. travelToCity(city) Travel to another city. universityCourse(universityName, courseName, focus) Take university class. upgradeHomeCores() Upgrade home computer cores. upgradeHomeRam() Upgrade home computer RAM. workForCompany(companyName, focus) Work for a company. workForFaction(faction, workType, focus) Work for a faction.","title":"Methods"},{"location":"bitburner.singularity.purchaseaugmentation/","text":"Home > bitburner > Singularity > purchaseAugmentation Singularity.purchaseAugmentation() method Purchase an augmentation Signature: purchaseAugmentation(faction: string, augmentation: string): boolean; Parameters Parameter Type Description faction string Name of faction to purchase Augmentation from. augmentation string Name of Augmentation to purchase. Returns: boolean True if the Augmentation is successfully purchased, and false otherwise. Remarks RAM cost: 5 GB * 16/4/1 This function will try to purchase the specified Augmentation through the given Faction. This function will return true if the Augmentation is successfully purchased, and false otherwise.","title":"Bitburner.singularity.purchaseaugmentation"},{"location":"bitburner.singularity.purchaseaugmentation/#singularitypurchaseaugmentation-method","text":"Purchase an augmentation Signature: purchaseAugmentation(faction: string, augmentation: string): boolean;","title":"Singularity.purchaseAugmentation() method"},{"location":"bitburner.singularity.purchaseaugmentation/#parameters","text":"Parameter Type Description faction string Name of faction to purchase Augmentation from. augmentation string Name of Augmentation to purchase. Returns: boolean True if the Augmentation is successfully purchased, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.purchaseaugmentation/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function will try to purchase the specified Augmentation through the given Faction. This function will return true if the Augmentation is successfully purchased, and false otherwise.","title":"Remarks"},{"location":"bitburner.singularity.purchaseprogram/","text":"Home > bitburner > Singularity > purchaseProgram Singularity.purchaseProgram() method Purchase a program from the dark web. Signature: purchaseProgram(programName: string): boolean; Parameters Parameter Type Description programName string Name of program to purchase. Returns: boolean True if the specified program is purchased, and false otherwise. Remarks RAM cost: 2 GB * 16/4/1 This function allows you to automatically purchase programs. You MUST have a TOR router in order to use this function. The cost of purchasing programs using this function is the same as if you were purchasing them through the Dark Web using the Terminal buy command. Example 1 // NS1 purchaseProgram(\"brutessh.exe\"); Example 2 // NS2 ns.purchaseProgram(\"brutessh.exe\");","title":"Bitburner.singularity.purchaseprogram"},{"location":"bitburner.singularity.purchaseprogram/#singularitypurchaseprogram-method","text":"Purchase a program from the dark web. Signature: purchaseProgram(programName: string): boolean;","title":"Singularity.purchaseProgram() method"},{"location":"bitburner.singularity.purchaseprogram/#parameters","text":"Parameter Type Description programName string Name of program to purchase. Returns: boolean True if the specified program is purchased, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.purchaseprogram/#remarks","text":"RAM cost: 2 GB * 16/4/1 This function allows you to automatically purchase programs. You MUST have a TOR router in order to use this function. The cost of purchasing programs using this function is the same as if you were purchasing them through the Dark Web using the Terminal buy command.","title":"Remarks"},{"location":"bitburner.singularity.purchaseprogram/#example-1","text":"// NS1 purchaseProgram(\"brutessh.exe\");","title":"Example 1"},{"location":"bitburner.singularity.purchaseprogram/#example-2","text":"// NS2 ns.purchaseProgram(\"brutessh.exe\");","title":"Example 2"},{"location":"bitburner.singularity.purchasetor/","text":"Home > bitburner > Singularity > purchaseTor Singularity.purchaseTor() method Purchase the TOR router. Signature: purchaseTor(): boolean; Returns: boolean True if actions is successful or you already own TOR router, false otherwise. Remarks RAM cost: 2 GB * 16/4/1 This function allows you to automatically purchase a TOR router. The cost for purchasing a TOR router using this function is the same as if you were to manually purchase one.","title":"Bitburner.singularity.purchasetor"},{"location":"bitburner.singularity.purchasetor/#singularitypurchasetor-method","text":"Purchase the TOR router. Signature: purchaseTor(): boolean; Returns: boolean True if actions is successful or you already own TOR router, false otherwise.","title":"Singularity.purchaseTor() method"},{"location":"bitburner.singularity.purchasetor/#remarks","text":"RAM cost: 2 GB * 16/4/1 This function allows you to automatically purchase a TOR router. The cost for purchasing a TOR router using this function is the same as if you were to manually purchase one.","title":"Remarks"},{"location":"bitburner.singularity.quitjob/","text":"Home > bitburner > Singularity > quitJob Singularity.quitJob() method Quit jobs by company. Signature: quitJob(companyName?: string): void; Parameters Parameter Type Description companyName string Name of the company. Returns: void Remarks RAM cost: 3 GB * 16/4/1 This function will finish work with the company provided and quit any jobs.","title":"Bitburner.singularity.quitjob"},{"location":"bitburner.singularity.quitjob/#singularityquitjob-method","text":"Quit jobs by company. Signature: quitJob(companyName?: string): void;","title":"Singularity.quitJob() method"},{"location":"bitburner.singularity.quitjob/#parameters","text":"Parameter Type Description companyName string Name of the company. Returns: void","title":"Parameters"},{"location":"bitburner.singularity.quitjob/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will finish work with the company provided and quit any jobs.","title":"Remarks"},{"location":"bitburner.singularity.setfocus/","text":"Home > bitburner > Singularity > setFocus Singularity.setFocus() method Set the players focus. Signature: setFocus(focus: boolean): boolean; Parameters Parameter Type Description focus boolean Returns: boolean True if the focus was changed. Remarks RAM cost: 0.1 GB * 16/4/1","title":"Bitburner.singularity.setfocus"},{"location":"bitburner.singularity.setfocus/#singularitysetfocus-method","text":"Set the players focus. Signature: setFocus(focus: boolean): boolean;","title":"Singularity.setFocus() method"},{"location":"bitburner.singularity.setfocus/#parameters","text":"Parameter Type Description focus boolean Returns: boolean True if the focus was changed.","title":"Parameters"},{"location":"bitburner.singularity.setfocus/#remarks","text":"RAM cost: 0.1 GB * 16/4/1","title":"Remarks"},{"location":"bitburner.singularity.softreset/","text":"Home > bitburner > Singularity > softReset Singularity.softReset() method Soft reset the game. Signature: softReset(cbScript: string): void; Parameters Parameter Type Description cbScript string This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer. Returns: void Remarks RAM cost: 5 GB * 16/4/1 This function will perform a reset even if you don\u2019t have any augmentation installed.","title":"Bitburner.singularity.softreset"},{"location":"bitburner.singularity.softreset/#singularitysoftreset-method","text":"Soft reset the game. Signature: softReset(cbScript: string): void;","title":"Singularity.softReset() method"},{"location":"bitburner.singularity.softreset/#parameters","text":"Parameter Type Description cbScript string This is a script that will automatically be run after Augmentations are installed (after the reset). This script will be run with no arguments and 1 thread. It must be located on your home computer. Returns: void","title":"Parameters"},{"location":"bitburner.singularity.softreset/#remarks","text":"RAM cost: 5 GB * 16/4/1 This function will perform a reset even if you don\u2019t have any augmentation installed.","title":"Remarks"},{"location":"bitburner.singularity.stopaction/","text":"Home > bitburner > Singularity > stopAction Singularity.stopAction() method Stop the current action. Signature: stopAction(): boolean; Returns: boolean True if the player\u2019s action was ended, false if the player was not performing an action. Remarks RAM cost: 1 GB * 16/4/1 This function is used to end whatever \u2018action\u2019 the player is currently performing. The player will receive whatever money/experience/etc. he has earned from that action. The actions that can be stopped with this function are: * Studying at a university * Working out at a gym * Working for a company/faction * Creating a program * Committing a crime This function will return true if the player\u2019s action was ended. It will return false if the player was not performing an action when this function was called.","title":"Bitburner.singularity.stopaction"},{"location":"bitburner.singularity.stopaction/#singularitystopaction-method","text":"Stop the current action. Signature: stopAction(): boolean; Returns: boolean True if the player\u2019s action was ended, false if the player was not performing an action.","title":"Singularity.stopAction() method"},{"location":"bitburner.singularity.stopaction/#remarks","text":"RAM cost: 1 GB * 16/4/1 This function is used to end whatever \u2018action\u2019 the player is currently performing. The player will receive whatever money/experience/etc. he has earned from that action. The actions that can be stopped with this function are: * Studying at a university * Working out at a gym * Working for a company/faction * Creating a program * Committing a crime This function will return true if the player\u2019s action was ended. It will return false if the player was not performing an action when this function was called.","title":"Remarks"},{"location":"bitburner.singularity.traveltocity/","text":"Home > bitburner > Singularity > travelToCity Singularity.travelToCity() method Travel to another city. Signature: travelToCity(city: string): boolean; Parameters Parameter Type Description city string City to travel to. Returns: boolean True if action is successful, false otherwise. Remarks RAM cost: 2 GB * 16/4/1 This function allows the player to travel to any city. The cost for using this function is the same as the cost for traveling through the Travel Agency.","title":"Bitburner.singularity.traveltocity"},{"location":"bitburner.singularity.traveltocity/#singularitytraveltocity-method","text":"Travel to another city. Signature: travelToCity(city: string): boolean;","title":"Singularity.travelToCity() method"},{"location":"bitburner.singularity.traveltocity/#parameters","text":"Parameter Type Description city string City to travel to. Returns: boolean True if action is successful, false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.traveltocity/#remarks","text":"RAM cost: 2 GB * 16/4/1 This function allows the player to travel to any city. The cost for using this function is the same as the cost for traveling through the Travel Agency.","title":"Remarks"},{"location":"bitburner.singularity.universitycourse/","text":"Home > bitburner > Singularity > universityCourse Singularity.universityCourse() method Take university class. Signature: universityCourse(universityName: string, courseName: string, focus?: boolean): boolean; Parameters Parameter Type Description universityName string Name of university. You must be in the correct city for whatever university you specify. courseName string Name of course. focus boolean Acquire player focus on this class. Optional. Defaults to true. Returns: boolean True if action is successfully started, false otherwise. Remarks RAM cost: 2 GB * 16/4/1 This function will automatically set you to start taking a course at a university. If you are already in the middle of some \u201cworking\u201d action (such as working at a company, for a faction, or on a program), then running this function will automatically cancel that action and give you your earnings. The cost and experience gains for all of these universities and classes are the same as if you were to manually visit and take these classes.","title":"Bitburner.singularity.universitycourse"},{"location":"bitburner.singularity.universitycourse/#singularityuniversitycourse-method","text":"Take university class. Signature: universityCourse(universityName: string, courseName: string, focus?: boolean): boolean;","title":"Singularity.universityCourse() method"},{"location":"bitburner.singularity.universitycourse/#parameters","text":"Parameter Type Description universityName string Name of university. You must be in the correct city for whatever university you specify. courseName string Name of course. focus boolean Acquire player focus on this class. Optional. Defaults to true. Returns: boolean True if action is successfully started, false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.universitycourse/#remarks","text":"RAM cost: 2 GB * 16/4/1 This function will automatically set you to start taking a course at a university. If you are already in the middle of some \u201cworking\u201d action (such as working at a company, for a faction, or on a program), then running this function will automatically cancel that action and give you your earnings. The cost and experience gains for all of these universities and classes are the same as if you were to manually visit and take these classes.","title":"Remarks"},{"location":"bitburner.singularity.upgradehomecores/","text":"Home > bitburner > Singularity > upgradeHomeCores Singularity.upgradeHomeCores() method Upgrade home computer cores. Signature: upgradeHomeCores(): boolean; Returns: boolean True if the player\u2019s home computer cores is successfully upgraded, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will upgrade amount of cores on the player\u2019s home computer. The cost is the same as if you were to do it manually. This function will return true if the player\u2019s home computer cores is successfully upgraded, and false otherwise.","title":"Bitburner.singularity.upgradehomecores"},{"location":"bitburner.singularity.upgradehomecores/#singularityupgradehomecores-method","text":"Upgrade home computer cores. Signature: upgradeHomeCores(): boolean; Returns: boolean True if the player\u2019s home computer cores is successfully upgraded, and false otherwise.","title":"Singularity.upgradeHomeCores() method"},{"location":"bitburner.singularity.upgradehomecores/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will upgrade amount of cores on the player\u2019s home computer. The cost is the same as if you were to do it manually. This function will return true if the player\u2019s home computer cores is successfully upgraded, and false otherwise.","title":"Remarks"},{"location":"bitburner.singularity.upgradehomeram/","text":"Home > bitburner > Singularity > upgradeHomeRam Singularity.upgradeHomeRam() method Upgrade home computer RAM. Signature: upgradeHomeRam(): boolean; Returns: boolean True if the player\u2019s home computer RAM is successfully upgraded, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will upgrade amount of RAM on the player\u2019s home computer. The cost is the same as if you were to do it manually. This function will return true if the player\u2019s home computer RAM is successfully upgraded, and false otherwise.","title":"Bitburner.singularity.upgradehomeram"},{"location":"bitburner.singularity.upgradehomeram/#singularityupgradehomeram-method","text":"Upgrade home computer RAM. Signature: upgradeHomeRam(): boolean; Returns: boolean True if the player\u2019s home computer RAM is successfully upgraded, and false otherwise.","title":"Singularity.upgradeHomeRam() method"},{"location":"bitburner.singularity.upgradehomeram/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will upgrade amount of RAM on the player\u2019s home computer. The cost is the same as if you were to do it manually. This function will return true if the player\u2019s home computer RAM is successfully upgraded, and false otherwise.","title":"Remarks"},{"location":"bitburner.singularity.workforcompany/","text":"Home > bitburner > Singularity > workForCompany Singularity.workForCompany() method Work for a company. Signature: workForCompany(companyName: string, focus?: boolean): boolean; Parameters Parameter Type Description companyName string Name of company to work for. Must be an exact match. Optional. If not specified, this argument defaults to the last job that you worked focus boolean Acquire player focus on this work operation. Optional. Defaults to true. Returns: boolean True if the player starts working, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will automatically set you to start working at the company at which you are employed. If you are already in the middle of some \u201cworking\u201d action (such as working for a faction, training at a gym, or creating a program), then running this function will automatically cancel that action and give you your earnings. This function will return true if the player starts working, and false otherwise. Note that when you are working for a company, you will not actually receive your earnings (reputation, money, experience) until you FINISH the action. Example 1 // NS1: //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (getCompanyRep(COMPANY HERE) < VALUE) { workForCompany(); sleep(60000); } //This way, your company reputation will be updated every minute. Example 2 // NS2: //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (ns.getCompanyRep(COMPANY HERE) < VALUE) { ns.workForCompany(); await ns.sleep(60000); } //This way, your company reputation will be updated every minute.","title":"Bitburner.singularity.workforcompany"},{"location":"bitburner.singularity.workforcompany/#singularityworkforcompany-method","text":"Work for a company. Signature: workForCompany(companyName: string, focus?: boolean): boolean;","title":"Singularity.workForCompany() method"},{"location":"bitburner.singularity.workforcompany/#parameters","text":"Parameter Type Description companyName string Name of company to work for. Must be an exact match. Optional. If not specified, this argument defaults to the last job that you worked focus boolean Acquire player focus on this work operation. Optional. Defaults to true. Returns: boolean True if the player starts working, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.workforcompany/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will automatically set you to start working at the company at which you are employed. If you are already in the middle of some \u201cworking\u201d action (such as working for a faction, training at a gym, or creating a program), then running this function will automatically cancel that action and give you your earnings. This function will return true if the player starts working, and false otherwise. Note that when you are working for a company, you will not actually receive your earnings (reputation, money, experience) until you FINISH the action.","title":"Remarks"},{"location":"bitburner.singularity.workforcompany/#example-1","text":"// NS1: //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (getCompanyRep(COMPANY HERE) < VALUE) { workForCompany(); sleep(60000); } //This way, your company reputation will be updated every minute.","title":"Example 1"},{"location":"bitburner.singularity.workforcompany/#example-2","text":"// NS2: //If you only want to work until you get 100,000 company reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (ns.getCompanyRep(COMPANY HERE) < VALUE) { ns.workForCompany(); await ns.sleep(60000); } //This way, your company reputation will be updated every minute.","title":"Example 2"},{"location":"bitburner.singularity.workforfaction/","text":"Home > bitburner > Singularity > workForFaction Singularity.workForFaction() method Work for a faction. Signature: workForFaction(faction: string, workType: string, focus?: boolean): boolean; Parameters Parameter Type Description faction string Name of faction to work for. workType string Type of work to perform for the faction. focus boolean Acquire player focus on this work operation. Optional. Defaults to true. Returns: boolean True if the player starts working, and false otherwise. Remarks RAM cost: 3 GB * 16/4/1 This function will automatically set you to start working for the specified faction. Obviously, you must be a member of the faction or else this function will fail. If you are already in the middle of some \u201cworking\u201d action (such as working for a company, training at a gym, or creating a program), then running this function will automatically cancel that action and give you your earnings. This function will return true if you successfully start working for the specified faction, and false otherwise. Note that when you are working for a faction, you will not actually receive your earnings (reputation, experience) until you FINISH the action. Example 1 // NS1: //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (getFactionRep(FACTION NAME) < VALUE) { workForFaction(FACNAME, WORKTYPE); sleep(60000); } //This way, your faction reputation will be updated every minute. Example 2 // NS2: //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (ns.getFactionRep(FACTION NAME) < VALUE) { ns.workForFaction(FACNAME, WORKTYPE); await ns.sleep(60000); } //This way, your faction reputation will be updated every minute.","title":"Bitburner.singularity.workforfaction"},{"location":"bitburner.singularity.workforfaction/#singularityworkforfaction-method","text":"Work for a faction. Signature: workForFaction(faction: string, workType: string, focus?: boolean): boolean;","title":"Singularity.workForFaction() method"},{"location":"bitburner.singularity.workforfaction/#parameters","text":"Parameter Type Description faction string Name of faction to work for. workType string Type of work to perform for the faction. focus boolean Acquire player focus on this work operation. Optional. Defaults to true. Returns: boolean True if the player starts working, and false otherwise.","title":"Parameters"},{"location":"bitburner.singularity.workforfaction/#remarks","text":"RAM cost: 3 GB * 16/4/1 This function will automatically set you to start working for the specified faction. Obviously, you must be a member of the faction or else this function will fail. If you are already in the middle of some \u201cworking\u201d action (such as working for a company, training at a gym, or creating a program), then running this function will automatically cancel that action and give you your earnings. This function will return true if you successfully start working for the specified faction, and false otherwise. Note that when you are working for a faction, you will not actually receive your earnings (reputation, experience) until you FINISH the action.","title":"Remarks"},{"location":"bitburner.singularity.workforfaction/#example-1","text":"// NS1: //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (getFactionRep(FACTION NAME) < VALUE) { workForFaction(FACNAME, WORKTYPE); sleep(60000); } //This way, your faction reputation will be updated every minute.","title":"Example 1"},{"location":"bitburner.singularity.workforfaction/#example-2","text":"// NS2: //If you only want to work until you get 100,000 faction reputation. One small hack to get around this is to continuously restart the action to receive your earnings: while (ns.getFactionRep(FACTION NAME) < VALUE) { ns.workForFaction(FACNAME, WORKTYPE); await ns.sleep(60000); } //This way, your faction reputation will be updated every minute.","title":"Example 2"},{"location":"bitburner.skills.agility/","text":"Home > bitburner > Skills > agility Skills.agility property Signature: agility: number;","title":"Bitburner.skills.agility"},{"location":"bitburner.skills.agility/#skillsagility-property","text":"Signature: agility: number;","title":"Skills.agility property"},{"location":"bitburner.skills.charisma/","text":"Home > bitburner > Skills > charisma Skills.charisma property Signature: charisma: number;","title":"Bitburner.skills.charisma"},{"location":"bitburner.skills.charisma/#skillscharisma-property","text":"Signature: charisma: number;","title":"Skills.charisma property"},{"location":"bitburner.skills.defense/","text":"Home > bitburner > Skills > defense Skills.defense property Signature: defense: number;","title":"Bitburner.skills.defense"},{"location":"bitburner.skills.defense/#skillsdefense-property","text":"Signature: defense: number;","title":"Skills.defense property"},{"location":"bitburner.skills.dexterity/","text":"Home > bitburner > Skills > dexterity Skills.dexterity property Signature: dexterity: number;","title":"Bitburner.skills.dexterity"},{"location":"bitburner.skills.dexterity/#skillsdexterity-property","text":"Signature: dexterity: number;","title":"Skills.dexterity property"},{"location":"bitburner.skills.hacking/","text":"Home > bitburner > Skills > hacking Skills.hacking property Signature: hacking: number;","title":"Bitburner.skills.hacking"},{"location":"bitburner.skills.hacking/#skillshacking-property","text":"Signature: hacking: number;","title":"Skills.hacking property"},{"location":"bitburner.skills.intelligence/","text":"Home > bitburner > Skills > intelligence Skills.intelligence property Signature: intelligence: number;","title":"Bitburner.skills.intelligence"},{"location":"bitburner.skills.intelligence/#skillsintelligence-property","text":"Signature: intelligence: number;","title":"Skills.intelligence property"},{"location":"bitburner.skills/","text":"Home > bitburner > Skills Skills interface Signature: export interface Skills Properties Property Type Description agility number charisma number defense number dexterity number hacking number intelligence number strength number","title":"Bitburner.skills"},{"location":"bitburner.skills/#skills-interface","text":"Signature: export interface Skills","title":"Skills interface"},{"location":"bitburner.skills/#properties","text":"Property Type Description agility number charisma number defense number dexterity number hacking number intelligence number strength number","title":"Properties"},{"location":"bitburner.skills.strength/","text":"Home > bitburner > Skills > strength Skills.strength property Signature: strength: number;","title":"Bitburner.skills.strength"},{"location":"bitburner.skills.strength/#skillsstrength-property","text":"Signature: strength: number;","title":"Skills.strength property"},{"location":"bitburner.skillsformulas.calculateexp/","text":"Home > bitburner > SkillsFormulas > calculateExp SkillsFormulas.calculateExp() method Calculate exp for skill level. Signature: calculateExp(skill: number, skillMult?: number): number; Parameters Parameter Type Description skill number target skill level skillMult number Multiplier for that skill, defaults to 1. Returns: number The calculated exp required.","title":"Bitburner.skillsformulas.calculateexp"},{"location":"bitburner.skillsformulas.calculateexp/#skillsformulascalculateexp-method","text":"Calculate exp for skill level. Signature: calculateExp(skill: number, skillMult?: number): number;","title":"SkillsFormulas.calculateExp() method"},{"location":"bitburner.skillsformulas.calculateexp/#parameters","text":"Parameter Type Description skill number target skill level skillMult number Multiplier for that skill, defaults to 1. Returns: number The calculated exp required.","title":"Parameters"},{"location":"bitburner.skillsformulas.calculateskill/","text":"Home > bitburner > SkillsFormulas > calculateSkill SkillsFormulas.calculateSkill() method Calculate skill level. Signature: calculateSkill(exp: number, skillMult?: number): number; Parameters Parameter Type Description exp number experience for that skill skillMult number Multiplier for that skill, defaults to 1. Returns: number The calculated skill level.","title":"Bitburner.skillsformulas.calculateskill"},{"location":"bitburner.skillsformulas.calculateskill/#skillsformulascalculateskill-method","text":"Calculate skill level. Signature: calculateSkill(exp: number, skillMult?: number): number;","title":"SkillsFormulas.calculateSkill() method"},{"location":"bitburner.skillsformulas.calculateskill/#parameters","text":"Parameter Type Description exp number experience for that skill skillMult number Multiplier for that skill, defaults to 1. Returns: number The calculated skill level.","title":"Parameters"},{"location":"bitburner.skillsformulas/","text":"Home > bitburner > SkillsFormulas SkillsFormulas interface Skills formulas Signature: interface SkillsFormulas Methods Method Description calculateExp(skill, skillMult) Calculate exp for skill level. calculateSkill(exp, skillMult) Calculate skill level.","title":"Bitburner.skillsformulas"},{"location":"bitburner.skillsformulas/#skillsformulas-interface","text":"Skills formulas Signature: interface SkillsFormulas","title":"SkillsFormulas interface"},{"location":"bitburner.skillsformulas/#methods","text":"Method Description calculateExp(skill, skillMult) Calculate exp for skill level. calculateSkill(exp, skillMult) Calculate skill level.","title":"Methods"},{"location":"bitburner.sleeve.getinformation/","text":"Home > bitburner > Sleeve > getInformation Sleeve.getInformation() method Get information about a sleeve. Signature: getInformation(sleeveNumber: number): SleeveInformation; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to retrieve information. Returns: SleeveInformation Object containing tons of information about this sleeve. Remarks RAM cost: 4 GB Return a struct containing tons of information about this sleeve","title":"Bitburner.sleeve.getinformation"},{"location":"bitburner.sleeve.getinformation/#sleevegetinformation-method","text":"Get information about a sleeve. Signature: getInformation(sleeveNumber: number): SleeveInformation;","title":"Sleeve.getInformation() method"},{"location":"bitburner.sleeve.getinformation/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to retrieve information. Returns: SleeveInformation Object containing tons of information about this sleeve.","title":"Parameters"},{"location":"bitburner.sleeve.getinformation/#remarks","text":"RAM cost: 4 GB Return a struct containing tons of information about this sleeve","title":"Remarks"},{"location":"bitburner.sleeve.getnumsleeves/","text":"Home > bitburner > Sleeve > getNumSleeves Sleeve.getNumSleeves() method Get the number of sleeves you own. Signature: getNumSleeves(): number; Returns: number number of duplicate sleeves the player has. Remarks RAM cost: 4 GB Return the number of duplicate sleeves the player has.","title":"Bitburner.sleeve.getnumsleeves"},{"location":"bitburner.sleeve.getnumsleeves/#sleevegetnumsleeves-method","text":"Get the number of sleeves you own. Signature: getNumSleeves(): number; Returns: number number of duplicate sleeves the player has.","title":"Sleeve.getNumSleeves() method"},{"location":"bitburner.sleeve.getnumsleeves/#remarks","text":"RAM cost: 4 GB Return the number of duplicate sleeves the player has.","title":"Remarks"},{"location":"bitburner.sleeve.getsleeveaugmentationprice/","text":"Home > bitburner > Sleeve > getSleeveAugmentationPrice Sleeve.getSleeveAugmentationPrice() method Get price of an augmentation. Signature: getSleeveAugmentationPrice(augName: string): number; Parameters Parameter Type Description augName string Name of Augmentation. Returns: number Price of the augmentation. Remarks RAM cost: 4 GB","title":"Bitburner.sleeve.getsleeveaugmentationprice"},{"location":"bitburner.sleeve.getsleeveaugmentationprice/#sleevegetsleeveaugmentationprice-method","text":"Get price of an augmentation. Signature: getSleeveAugmentationPrice(augName: string): number;","title":"Sleeve.getSleeveAugmentationPrice() method"},{"location":"bitburner.sleeve.getsleeveaugmentationprice/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: number Price of the augmentation.","title":"Parameters"},{"location":"bitburner.sleeve.getsleeveaugmentationprice/#remarks","text":"RAM cost: 4 GB","title":"Remarks"},{"location":"bitburner.sleeve.getsleeveaugmentationrepreq/","text":"Home > bitburner > Sleeve > getSleeveAugmentationRepReq Sleeve.getSleeveAugmentationRepReq() method Get reputation requirement of an augmentation. Signature: getSleeveAugmentationRepReq(augName: string): number; Parameters Parameter Type Description augName string Name of Augmentation. Returns: number Reputation requirement of the augmentation. Remarks RAM cost: 4 GB","title":"Bitburner.sleeve.getsleeveaugmentationrepreq"},{"location":"bitburner.sleeve.getsleeveaugmentationrepreq/#sleevegetsleeveaugmentationrepreq-method","text":"Get reputation requirement of an augmentation. Signature: getSleeveAugmentationRepReq(augName: string): number;","title":"Sleeve.getSleeveAugmentationRepReq() method"},{"location":"bitburner.sleeve.getsleeveaugmentationrepreq/#parameters","text":"Parameter Type Description augName string Name of Augmentation. Returns: number Reputation requirement of the augmentation.","title":"Parameters"},{"location":"bitburner.sleeve.getsleeveaugmentationrepreq/#remarks","text":"RAM cost: 4 GB","title":"Remarks"},{"location":"bitburner.sleeve.getsleeveaugmentations/","text":"Home > bitburner > Sleeve > getSleeveAugmentations Sleeve.getSleeveAugmentations() method Get augmentations installed on a sleeve. Signature: getSleeveAugmentations(sleeveNumber: number): string[]; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to retrieve augmentations from. Returns: string[] List of augmentation names that this sleeve has installed. Remarks RAM cost: 4 GB Return a list of augmentation names that this sleeve has installed.","title":"Bitburner.sleeve.getsleeveaugmentations"},{"location":"bitburner.sleeve.getsleeveaugmentations/#sleevegetsleeveaugmentations-method","text":"Get augmentations installed on a sleeve. Signature: getSleeveAugmentations(sleeveNumber: number): string[];","title":"Sleeve.getSleeveAugmentations() method"},{"location":"bitburner.sleeve.getsleeveaugmentations/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to retrieve augmentations from. Returns: string[] List of augmentation names that this sleeve has installed.","title":"Parameters"},{"location":"bitburner.sleeve.getsleeveaugmentations/#remarks","text":"RAM cost: 4 GB Return a list of augmentation names that this sleeve has installed.","title":"Remarks"},{"location":"bitburner.sleeve.getsleevepurchasableaugs/","text":"Home > bitburner > Sleeve > getSleevePurchasableAugs Sleeve.getSleevePurchasableAugs() method List purchasable augs for a sleeve. Signature: getSleevePurchasableAugs(sleeveNumber: number): AugmentPair[]; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to retrieve purchasable augmentations from. Returns: AugmentPair [] List of augmentations that the player can buy for this sleeve. Remarks RAM cost: 4 GB Return a list of augmentations that the player can buy for this sleeve.","title":"Bitburner.sleeve.getsleevepurchasableaugs"},{"location":"bitburner.sleeve.getsleevepurchasableaugs/#sleevegetsleevepurchasableaugs-method","text":"List purchasable augs for a sleeve. Signature: getSleevePurchasableAugs(sleeveNumber: number): AugmentPair[];","title":"Sleeve.getSleevePurchasableAugs() method"},{"location":"bitburner.sleeve.getsleevepurchasableaugs/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to retrieve purchasable augmentations from. Returns: AugmentPair [] List of augmentations that the player can buy for this sleeve.","title":"Parameters"},{"location":"bitburner.sleeve.getsleevepurchasableaugs/#remarks","text":"RAM cost: 4 GB Return a list of augmentations that the player can buy for this sleeve.","title":"Remarks"},{"location":"bitburner.sleeve.getsleevestats/","text":"Home > bitburner > Sleeve > getSleeveStats Sleeve.getSleeveStats() method Get the stats of a sleeve. Signature: getSleeveStats(sleeveNumber: number): SleeveSkills; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to get stats of. Returns: SleeveSkills Object containing the stats of the sleeve. Remarks RAM cost: 4 GB Return a structure containing the stats of the sleeve.","title":"Bitburner.sleeve.getsleevestats"},{"location":"bitburner.sleeve.getsleevestats/#sleevegetsleevestats-method","text":"Get the stats of a sleeve. Signature: getSleeveStats(sleeveNumber: number): SleeveSkills;","title":"Sleeve.getSleeveStats() method"},{"location":"bitburner.sleeve.getsleevestats/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to get stats of. Returns: SleeveSkills Object containing the stats of the sleeve.","title":"Parameters"},{"location":"bitburner.sleeve.getsleevestats/#remarks","text":"RAM cost: 4 GB Return a structure containing the stats of the sleeve.","title":"Remarks"},{"location":"bitburner.sleeve.gettask/","text":"Home > bitburner > Sleeve > getTask Sleeve.getTask() method Get task of a sleeve. Signature: getTask(sleeveNumber: number): SleeveTask; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to retrieve task from. Returns: SleeveTask Object containing information the current task that the sleeve is performing. Remarks RAM cost: 4 GB Return the current task that the sleeve is performing. type is set to \u201cIdle\u201d if the sleeve isn\u2019t doing anything.","title":"Bitburner.sleeve.gettask"},{"location":"bitburner.sleeve.gettask/#sleevegettask-method","text":"Get task of a sleeve. Signature: getTask(sleeveNumber: number): SleeveTask;","title":"Sleeve.getTask() method"},{"location":"bitburner.sleeve.gettask/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to retrieve task from. Returns: SleeveTask Object containing information the current task that the sleeve is performing.","title":"Parameters"},{"location":"bitburner.sleeve.gettask/#remarks","text":"RAM cost: 4 GB Return the current task that the sleeve is performing. type is set to \u201cIdle\u201d if the sleeve isn\u2019t doing anything.","title":"Remarks"},{"location":"bitburner.sleeve/","text":"Home > bitburner > Sleeve Sleeve interface Sleeve API Signature: export interface Sleeve Remarks If you are not in BitNode-10, then you must have Source-File 10 in order to use this API. Methods Method Description getInformation(sleeveNumber) Get information about a sleeve. getNumSleeves() Get the number of sleeves you own. getSleeveAugmentationPrice(augName) Get price of an augmentation. getSleeveAugmentationRepReq(augName) Get reputation requirement of an augmentation. getSleeveAugmentations(sleeveNumber) Get augmentations installed on a sleeve. getSleevePurchasableAugs(sleeveNumber) List purchasable augs for a sleeve. getSleeveStats(sleeveNumber) Get the stats of a sleeve. getTask(sleeveNumber) Get task of a sleeve. purchaseSleeveAug(sleeveNumber, augName) Purchase an aug for a sleeve. setToBladeburnerAction(sleeveNumber, action, contract) Set a sleeve to perform bladeburner actions. setToCommitCrime(sleeveNumber, crimeType) Set a sleeve to commit crime. setToCompanyWork(sleeveNumber, companyName) Set a sleeve to work for a company. setToFactionWork(sleeveNumber, factionName, factionWorkType) Set a sleeve to work for a faction. setToGymWorkout(sleeveNumber, gymName, stat) Set a sleeve to workout at the gym. setToShockRecovery(sleeveNumber) Set a sleeve to shock recovery. setToSynchronize(sleeveNumber) Set a sleeve to synchronize. setToUniversityCourse(sleeveNumber, university, className) Set a sleeve to take a class at a university. travel(sleeveNumber, cityName) Make a sleeve travel to another city.","title":"Bitburner.sleeve"},{"location":"bitburner.sleeve/#sleeve-interface","text":"Sleeve API Signature: export interface Sleeve","title":"Sleeve interface"},{"location":"bitburner.sleeve/#remarks","text":"If you are not in BitNode-10, then you must have Source-File 10 in order to use this API.","title":"Remarks"},{"location":"bitburner.sleeve/#methods","text":"Method Description getInformation(sleeveNumber) Get information about a sleeve. getNumSleeves() Get the number of sleeves you own. getSleeveAugmentationPrice(augName) Get price of an augmentation. getSleeveAugmentationRepReq(augName) Get reputation requirement of an augmentation. getSleeveAugmentations(sleeveNumber) Get augmentations installed on a sleeve. getSleevePurchasableAugs(sleeveNumber) List purchasable augs for a sleeve. getSleeveStats(sleeveNumber) Get the stats of a sleeve. getTask(sleeveNumber) Get task of a sleeve. purchaseSleeveAug(sleeveNumber, augName) Purchase an aug for a sleeve. setToBladeburnerAction(sleeveNumber, action, contract) Set a sleeve to perform bladeburner actions. setToCommitCrime(sleeveNumber, crimeType) Set a sleeve to commit crime. setToCompanyWork(sleeveNumber, companyName) Set a sleeve to work for a company. setToFactionWork(sleeveNumber, factionName, factionWorkType) Set a sleeve to work for a faction. setToGymWorkout(sleeveNumber, gymName, stat) Set a sleeve to workout at the gym. setToShockRecovery(sleeveNumber) Set a sleeve to shock recovery. setToSynchronize(sleeveNumber) Set a sleeve to synchronize. setToUniversityCourse(sleeveNumber, university, className) Set a sleeve to take a class at a university. travel(sleeveNumber, cityName) Make a sleeve travel to another city.","title":"Methods"},{"location":"bitburner.sleeve.purchasesleeveaug/","text":"Home > bitburner > Sleeve > purchaseSleeveAug Sleeve.purchaseSleeveAug() method Purchase an aug for a sleeve. Signature: purchaseSleeveAug(sleeveNumber: number, augName: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to buy an aug for. augName string Name of the aug to buy. Must be an exact match. Returns: boolean True if the aug was purchased and installed on the sleeve, false otherwise. Remarks RAM cost: 4 GB Return true if the aug was purchased and installed on the sleeve.","title":"Bitburner.sleeve.purchasesleeveaug"},{"location":"bitburner.sleeve.purchasesleeveaug/#sleevepurchasesleeveaug-method","text":"Purchase an aug for a sleeve. Signature: purchaseSleeveAug(sleeveNumber: number, augName: string): boolean;","title":"Sleeve.purchaseSleeveAug() method"},{"location":"bitburner.sleeve.purchasesleeveaug/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to buy an aug for. augName string Name of the aug to buy. Must be an exact match. Returns: boolean True if the aug was purchased and installed on the sleeve, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.purchasesleeveaug/#remarks","text":"RAM cost: 4 GB Return true if the aug was purchased and installed on the sleeve.","title":"Remarks"},{"location":"bitburner.sleeve.settobladeburneraction/","text":"Home > bitburner > Sleeve > setToBladeburnerAction Sleeve.setToBladeburnerAction() method Set a sleeve to perform bladeburner actions. Signature: setToBladeburnerAction(sleeveNumber: number, action: string, contract?: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to workout at the gym. action string Name of the action to be performed. contract string Name of the contract if applicable. Returns: boolean True if the sleeve started working out, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working out.","title":"Bitburner.sleeve.settobladeburneraction"},{"location":"bitburner.sleeve.settobladeburneraction/#sleevesettobladeburneraction-method","text":"Set a sleeve to perform bladeburner actions. Signature: setToBladeburnerAction(sleeveNumber: number, action: string, contract?: string): boolean;","title":"Sleeve.setToBladeburnerAction() method"},{"location":"bitburner.sleeve.settobladeburneraction/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to workout at the gym. action string Name of the action to be performed. contract string Name of the contract if applicable. Returns: boolean True if the sleeve started working out, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settobladeburneraction/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working out.","title":"Remarks"},{"location":"bitburner.sleeve.settocommitcrime/","text":"Home > bitburner > Sleeve > setToCommitCrime Sleeve.setToCommitCrime() method Set a sleeve to commit crime. Signature: setToCommitCrime(sleeveNumber: number, crimeType: CrimeType | CrimeNames): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to start committing crime. Sleeves are numbered starting from 0. crimeType CrimeType | CrimeNames Returns: boolean True if this action was set successfully, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully (false if an invalid action is specified). Example 1 // NS1 // Assign the first 3 sleeves to commit various crimes. var crime = [\"MUG\", \"ROBSTORE\", \"SHOPLIFT\"]; for (var i = 0; i < crime.length; i++) { tprintf(\"Sleeve %d commits crime: %s\", i, crime[i]); sleeve.setToCommitCrime(i, crime[i]); } Example 2 // NS2 // Assign the first 3 sleeves to commit various crimes. const crime = [\"MUG\", \"ROBSTORE\", \"SHOPLIFT\"]; for (let i = 0; i < crime.length; i++) { ns.tprintf(\"Sleeve %d commits crime: %s\", i, crime[i]); ns.sleeve.setToCommitCrime(i, crime[i]); }","title":"Bitburner.sleeve.settocommitcrime"},{"location":"bitburner.sleeve.settocommitcrime/#sleevesettocommitcrime-method","text":"Set a sleeve to commit crime. Signature: setToCommitCrime(sleeveNumber: number, crimeType: CrimeType | CrimeNames): boolean;","title":"Sleeve.setToCommitCrime() method"},{"location":"bitburner.sleeve.settocommitcrime/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to start committing crime. Sleeves are numbered starting from 0. crimeType CrimeType | CrimeNames Returns: boolean True if this action was set successfully, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settocommitcrime/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully (false if an invalid action is specified).","title":"Remarks"},{"location":"bitburner.sleeve.settocommitcrime/#example-1","text":"// NS1 // Assign the first 3 sleeves to commit various crimes. var crime = [\"MUG\", \"ROBSTORE\", \"SHOPLIFT\"]; for (var i = 0; i < crime.length; i++) { tprintf(\"Sleeve %d commits crime: %s\", i, crime[i]); sleeve.setToCommitCrime(i, crime[i]); }","title":"Example 1"},{"location":"bitburner.sleeve.settocommitcrime/#example-2","text":"// NS2 // Assign the first 3 sleeves to commit various crimes. const crime = [\"MUG\", \"ROBSTORE\", \"SHOPLIFT\"]; for (let i = 0; i < crime.length; i++) { ns.tprintf(\"Sleeve %d commits crime: %s\", i, crime[i]); ns.sleeve.setToCommitCrime(i, crime[i]); }","title":"Example 2"},{"location":"bitburner.sleeve.settocompanywork/","text":"Home > bitburner > Sleeve > setToCompanyWork Sleeve.setToCompanyWork() method Set a sleeve to work for a company. Signature: setToCompanyWork(sleeveNumber: number, companyName: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to work for the company. companyName string Name of the company to work for. Returns: boolean True if the sleeve started working on this company, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working or this company.","title":"Bitburner.sleeve.settocompanywork"},{"location":"bitburner.sleeve.settocompanywork/#sleevesettocompanywork-method","text":"Set a sleeve to work for a company. Signature: setToCompanyWork(sleeveNumber: number, companyName: string): boolean;","title":"Sleeve.setToCompanyWork() method"},{"location":"bitburner.sleeve.settocompanywork/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to work for the company. companyName string Name of the company to work for. Returns: boolean True if the sleeve started working on this company, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settocompanywork/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working or this company.","title":"Remarks"},{"location":"bitburner.sleeve.settofactionwork/","text":"Home > bitburner > Sleeve > setToFactionWork Sleeve.setToFactionWork() method Set a sleeve to work for a faction. Signature: setToFactionWork(sleeveNumber: number, factionName: string, factionWorkType: string): boolean | undefined; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to work for the faction. factionName string Name of the faction to work for. factionWorkType string Name of the action to perform for this faction. Returns: boolean | undefined True if the sleeve started working on this faction, false otherwise, can also throw on errors Remarks RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working or this faction.","title":"Bitburner.sleeve.settofactionwork"},{"location":"bitburner.sleeve.settofactionwork/#sleevesettofactionwork-method","text":"Set a sleeve to work for a faction. Signature: setToFactionWork(sleeveNumber: number, factionName: string, factionWorkType: string): boolean | undefined;","title":"Sleeve.setToFactionWork() method"},{"location":"bitburner.sleeve.settofactionwork/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to work for the faction. factionName string Name of the faction to work for. factionWorkType string Name of the action to perform for this faction. Returns: boolean | undefined True if the sleeve started working on this faction, false otherwise, can also throw on errors","title":"Parameters"},{"location":"bitburner.sleeve.settofactionwork/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working or this faction.","title":"Remarks"},{"location":"bitburner.sleeve.settogymworkout/","text":"Home > bitburner > Sleeve > setToGymWorkout Sleeve.setToGymWorkout() method Set a sleeve to workout at the gym. Signature: setToGymWorkout(sleeveNumber: number, gymName: string, stat: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to workout at the gym. gymName string Name of the gym. stat string Name of the stat to train. Returns: boolean True if the sleeve started working out, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working out.","title":"Bitburner.sleeve.settogymworkout"},{"location":"bitburner.sleeve.settogymworkout/#sleevesettogymworkout-method","text":"Set a sleeve to workout at the gym. Signature: setToGymWorkout(sleeveNumber: number, gymName: string, stat: string): boolean;","title":"Sleeve.setToGymWorkout() method"},{"location":"bitburner.sleeve.settogymworkout/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to workout at the gym. gymName string Name of the gym. stat string Name of the stat to train. Returns: boolean True if the sleeve started working out, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settogymworkout/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not the sleeve started working out.","title":"Remarks"},{"location":"bitburner.sleeve.settoshockrecovery/","text":"Home > bitburner > Sleeve > setToShockRecovery Sleeve.setToShockRecovery() method Set a sleeve to shock recovery. Signature: setToShockRecovery(sleeveNumber: number): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to start recovery. Returns: boolean True if this action was set successfully, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Bitburner.sleeve.settoshockrecovery"},{"location":"bitburner.sleeve.settoshockrecovery/#sleevesettoshockrecovery-method","text":"Set a sleeve to shock recovery. Signature: setToShockRecovery(sleeveNumber: number): boolean;","title":"Sleeve.setToShockRecovery() method"},{"location":"bitburner.sleeve.settoshockrecovery/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to start recovery. Returns: boolean True if this action was set successfully, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settoshockrecovery/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Remarks"},{"location":"bitburner.sleeve.settosynchronize/","text":"Home > bitburner > Sleeve > setToSynchronize Sleeve.setToSynchronize() method Set a sleeve to synchronize. Signature: setToSynchronize(sleeveNumber: number): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to start synchronizing. Returns: boolean True if this action was set successfully, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Bitburner.sleeve.settosynchronize"},{"location":"bitburner.sleeve.settosynchronize/#sleevesettosynchronize-method","text":"Set a sleeve to synchronize. Signature: setToSynchronize(sleeveNumber: number): boolean;","title":"Sleeve.setToSynchronize() method"},{"location":"bitburner.sleeve.settosynchronize/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to start synchronizing. Returns: boolean True if this action was set successfully, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settosynchronize/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Remarks"},{"location":"bitburner.sleeve.settouniversitycourse/","text":"Home > bitburner > Sleeve > setToUniversityCourse Sleeve.setToUniversityCourse() method Set a sleeve to take a class at a university. Signature: setToUniversityCourse(sleeveNumber: number, university: string, className: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to start taking class. university string Name of the university to attend. className string Name of the class to follow. Returns: boolean True if this action was set successfully, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Bitburner.sleeve.settouniversitycourse"},{"location":"bitburner.sleeve.settouniversitycourse/#sleevesettouniversitycourse-method","text":"Set a sleeve to take a class at a university. Signature: setToUniversityCourse(sleeveNumber: number, university: string, className: string): boolean;","title":"Sleeve.setToUniversityCourse() method"},{"location":"bitburner.sleeve.settouniversitycourse/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to start taking class. university string Name of the university to attend. className string Name of the class to follow. Returns: boolean True if this action was set successfully, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.settouniversitycourse/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not this action was set successfully.","title":"Remarks"},{"location":"bitburner.sleeve.travel/","text":"Home > bitburner > Sleeve > travel Sleeve.travel() method Make a sleeve travel to another city. Signature: travel(sleeveNumber: number, cityName: string): boolean; Parameters Parameter Type Description sleeveNumber number Index of the sleeve to travel. cityName string Name of the destination city. Returns: boolean True if the sleeve reached destination, false otherwise. Remarks RAM cost: 4 GB Return a boolean indicating whether or not the sleeve reached destination.","title":"Bitburner.sleeve.travel"},{"location":"bitburner.sleeve.travel/#sleevetravel-method","text":"Make a sleeve travel to another city. Signature: travel(sleeveNumber: number, cityName: string): boolean;","title":"Sleeve.travel() method"},{"location":"bitburner.sleeve.travel/#parameters","text":"Parameter Type Description sleeveNumber number Index of the sleeve to travel. cityName string Name of the destination city. Returns: boolean True if the sleeve reached destination, false otherwise.","title":"Parameters"},{"location":"bitburner.sleeve.travel/#remarks","text":"RAM cost: 4 GB Return a boolean indicating whether or not the sleeve reached destination.","title":"Remarks"},{"location":"bitburner.sleeveinformation.city/","text":"Home > bitburner > SleeveInformation > city SleeveInformation.city property Location of the sleeve Signature: city: string;","title":"Bitburner.sleeveinformation.city"},{"location":"bitburner.sleeveinformation.city/#sleeveinformationcity-property","text":"Location of the sleeve Signature: city: string;","title":"SleeveInformation.city property"},{"location":"bitburner.sleeveinformation.hp/","text":"Home > bitburner > SleeveInformation > hp SleeveInformation.hp property hp of the sleeve Signature: hp: HP;","title":"Bitburner.sleeveinformation.hp"},{"location":"bitburner.sleeveinformation.hp/#sleeveinformationhp-property","text":"hp of the sleeve Signature: hp: HP;","title":"SleeveInformation.hp property"},{"location":"bitburner.sleeveinformation.jobs/","text":"Home > bitburner > SleeveInformation > jobs SleeveInformation.jobs property Jobs available to the sleeve Signature: jobs: string[];","title":"Bitburner.sleeveinformation.jobs"},{"location":"bitburner.sleeveinformation.jobs/#sleeveinformationjobs-property","text":"Jobs available to the sleeve Signature: jobs: string[];","title":"SleeveInformation.jobs property"},{"location":"bitburner.sleeveinformation.jobtitle/","text":"Home > bitburner > SleeveInformation > jobTitle SleeveInformation.jobTitle property Job titles available to the sleeve Signature: jobTitle: string[];","title":"Bitburner.sleeveinformation.jobtitle"},{"location":"bitburner.sleeveinformation.jobtitle/#sleeveinformationjobtitle-property","text":"Job titles available to the sleeve Signature: jobTitle: string[];","title":"SleeveInformation.jobTitle property"},{"location":"bitburner.sleeveinformation/","text":"Home > bitburner > SleeveInformation SleeveInformation interface Object representing sleeve information. Signature: export interface SleeveInformation Properties Property Type Description city string Location of the sleeve hp HP hp of the sleeve jobs string[] Jobs available to the sleeve jobTitle string[] Job titles available to the sleeve mult CharacterMult Sleeve multipliers tor boolean Does this sleeve have access to the tor router","title":"Bitburner.sleeveinformation"},{"location":"bitburner.sleeveinformation/#sleeveinformation-interface","text":"Object representing sleeve information. Signature: export interface SleeveInformation","title":"SleeveInformation interface"},{"location":"bitburner.sleeveinformation/#properties","text":"Property Type Description city string Location of the sleeve hp HP hp of the sleeve jobs string[] Jobs available to the sleeve jobTitle string[] Job titles available to the sleeve mult CharacterMult Sleeve multipliers tor boolean Does this sleeve have access to the tor router","title":"Properties"},{"location":"bitburner.sleeveinformation.mult/","text":"Home > bitburner > SleeveInformation > mult SleeveInformation.mult property Sleeve multipliers Signature: mult: CharacterMult;","title":"Bitburner.sleeveinformation.mult"},{"location":"bitburner.sleeveinformation.mult/#sleeveinformationmult-property","text":"Sleeve multipliers Signature: mult: CharacterMult;","title":"SleeveInformation.mult property"},{"location":"bitburner.sleeveinformation.tor/","text":"Home > bitburner > SleeveInformation > tor SleeveInformation.tor property Does this sleeve have access to the tor router Signature: tor: boolean;","title":"Bitburner.sleeveinformation.tor"},{"location":"bitburner.sleeveinformation.tor/#sleeveinformationtor-property","text":"Does this sleeve have access to the tor router Signature: tor: boolean;","title":"SleeveInformation.tor property"},{"location":"bitburner.sleeveskills.agility/","text":"Home > bitburner > SleeveSkills > agility SleeveSkills.agility property Current agility of the sleeve Signature: agility: number;","title":"Bitburner.sleeveskills.agility"},{"location":"bitburner.sleeveskills.agility/#sleeveskillsagility-property","text":"Current agility of the sleeve Signature: agility: number;","title":"SleeveSkills.agility property"},{"location":"bitburner.sleeveskills.charisma/","text":"Home > bitburner > SleeveSkills > charisma SleeveSkills.charisma property Current charisma of the sleeve Signature: charisma: number;","title":"Bitburner.sleeveskills.charisma"},{"location":"bitburner.sleeveskills.charisma/#sleeveskillscharisma-property","text":"Current charisma of the sleeve Signature: charisma: number;","title":"SleeveSkills.charisma property"},{"location":"bitburner.sleeveskills.defense/","text":"Home > bitburner > SleeveSkills > defense SleeveSkills.defense property Current defense of the sleeve Signature: defense: number;","title":"Bitburner.sleeveskills.defense"},{"location":"bitburner.sleeveskills.defense/#sleeveskillsdefense-property","text":"Current defense of the sleeve Signature: defense: number;","title":"SleeveSkills.defense property"},{"location":"bitburner.sleeveskills.dexterity/","text":"Home > bitburner > SleeveSkills > dexterity SleeveSkills.dexterity property Current dexterity of the sleeve Signature: dexterity: number;","title":"Bitburner.sleeveskills.dexterity"},{"location":"bitburner.sleeveskills.dexterity/#sleeveskillsdexterity-property","text":"Current dexterity of the sleeve Signature: dexterity: number;","title":"SleeveSkills.dexterity property"},{"location":"bitburner.sleeveskills.hacking/","text":"Home > bitburner > SleeveSkills > hacking SleeveSkills.hacking property Current hacking skill of the sleeve Signature: hacking: number;","title":"Bitburner.sleeveskills.hacking"},{"location":"bitburner.sleeveskills.hacking/#sleeveskillshacking-property","text":"Current hacking skill of the sleeve Signature: hacking: number;","title":"SleeveSkills.hacking property"},{"location":"bitburner.sleeveskills/","text":"Home > bitburner > SleeveSkills SleeveSkills interface Object representing a sleeve stats. Signature: export interface SleeveSkills Properties Property Type Description agility number Current agility of the sleeve charisma number Current charisma of the sleeve defense number Current defense of the sleeve dexterity number Current dexterity of the sleeve hacking number Current hacking skill of the sleeve memory number Current memory of the sleeve [1-100] shock number Current shock of the sleeve [0-100] strength number Current strength of the sleeve sync number Current sync of the sleeve [0-100]","title":"Bitburner.sleeveskills"},{"location":"bitburner.sleeveskills/#sleeveskills-interface","text":"Object representing a sleeve stats. Signature: export interface SleeveSkills","title":"SleeveSkills interface"},{"location":"bitburner.sleeveskills/#properties","text":"Property Type Description agility number Current agility of the sleeve charisma number Current charisma of the sleeve defense number Current defense of the sleeve dexterity number Current dexterity of the sleeve hacking number Current hacking skill of the sleeve memory number Current memory of the sleeve [1-100] shock number Current shock of the sleeve [0-100] strength number Current strength of the sleeve sync number Current sync of the sleeve [0-100]","title":"Properties"},{"location":"bitburner.sleeveskills.memory/","text":"Home > bitburner > SleeveSkills > memory SleeveSkills.memory property Current memory of the sleeve [1-100] Signature: memory: number;","title":"Bitburner.sleeveskills.memory"},{"location":"bitburner.sleeveskills.memory/#sleeveskillsmemory-property","text":"Current memory of the sleeve [1-100] Signature: memory: number;","title":"SleeveSkills.memory property"},{"location":"bitburner.sleeveskills.shock/","text":"Home > bitburner > SleeveSkills > shock SleeveSkills.shock property Current shock of the sleeve [0-100] Signature: shock: number;","title":"Bitburner.sleeveskills.shock"},{"location":"bitburner.sleeveskills.shock/#sleeveskillsshock-property","text":"Current shock of the sleeve [0-100] Signature: shock: number;","title":"SleeveSkills.shock property"},{"location":"bitburner.sleeveskills.strength/","text":"Home > bitburner > SleeveSkills > strength SleeveSkills.strength property Current strength of the sleeve Signature: strength: number;","title":"Bitburner.sleeveskills.strength"},{"location":"bitburner.sleeveskills.strength/#sleeveskillsstrength-property","text":"Current strength of the sleeve Signature: strength: number;","title":"SleeveSkills.strength property"},{"location":"bitburner.sleeveskills.sync/","text":"Home > bitburner > SleeveSkills > sync SleeveSkills.sync property Current sync of the sleeve [0-100] Signature: sync: number;","title":"Bitburner.sleeveskills.sync"},{"location":"bitburner.sleeveskills.sync/#sleeveskillssync-property","text":"Current sync of the sleeve [0-100] Signature: sync: number;","title":"SleeveSkills.sync property"},{"location":"bitburner.sleevetask/","text":"Home > bitburner > SleeveTask SleeveTask type Object representing a sleeve current task. Signature: export type SleeveTask = any;","title":"Bitburner.sleevetask"},{"location":"bitburner.sleevetask/#sleevetask-type","text":"Object representing a sleeve current task. Signature: export type SleeveTask = any;","title":"SleeveTask type"},{"location":"bitburner.sleeveworkgains/","text":"Home > bitburner > SleeveWorkGains SleeveWorkGains interface Signature: export interface SleeveWorkGains Properties Property Type Description workAgiExpGain number Agility exp gained from work workChaExpGain number Charisma exp gained from work workDefExpGain number Defense exp gained from work, workDexExpGain number Dexterity exp gained from work workHackExpGain number Hacking exp gained from work workMoneyGain number Money gained from work workStrExpGain number Strength exp gained from work","title":"Bitburner.sleeveworkgains"},{"location":"bitburner.sleeveworkgains/#sleeveworkgains-interface","text":"Signature: export interface SleeveWorkGains","title":"SleeveWorkGains interface"},{"location":"bitburner.sleeveworkgains/#properties","text":"Property Type Description workAgiExpGain number Agility exp gained from work workChaExpGain number Charisma exp gained from work workDefExpGain number Defense exp gained from work, workDexExpGain number Dexterity exp gained from work workHackExpGain number Hacking exp gained from work workMoneyGain number Money gained from work workStrExpGain number Strength exp gained from work","title":"Properties"},{"location":"bitburner.sleeveworkgains.workagiexpgain/","text":"Home > bitburner > SleeveWorkGains > workAgiExpGain SleeveWorkGains.workAgiExpGain property Agility exp gained from work Signature: workAgiExpGain: number;","title":"Bitburner.sleeveworkgains.workagiexpgain"},{"location":"bitburner.sleeveworkgains.workagiexpgain/#sleeveworkgainsworkagiexpgain-property","text":"Agility exp gained from work Signature: workAgiExpGain: number;","title":"SleeveWorkGains.workAgiExpGain property"},{"location":"bitburner.sleeveworkgains.workchaexpgain/","text":"Home > bitburner > SleeveWorkGains > workChaExpGain SleeveWorkGains.workChaExpGain property Charisma exp gained from work Signature: workChaExpGain: number;","title":"Bitburner.sleeveworkgains.workchaexpgain"},{"location":"bitburner.sleeveworkgains.workchaexpgain/#sleeveworkgainsworkchaexpgain-property","text":"Charisma exp gained from work Signature: workChaExpGain: number;","title":"SleeveWorkGains.workChaExpGain property"},{"location":"bitburner.sleeveworkgains.workdefexpgain/","text":"Home > bitburner > SleeveWorkGains > workDefExpGain SleeveWorkGains.workDefExpGain property Defense exp gained from work, Signature: workDefExpGain: number;","title":"Bitburner.sleeveworkgains.workdefexpgain"},{"location":"bitburner.sleeveworkgains.workdefexpgain/#sleeveworkgainsworkdefexpgain-property","text":"Defense exp gained from work, Signature: workDefExpGain: number;","title":"SleeveWorkGains.workDefExpGain property"},{"location":"bitburner.sleeveworkgains.workdexexpgain/","text":"Home > bitburner > SleeveWorkGains > workDexExpGain SleeveWorkGains.workDexExpGain property Dexterity exp gained from work Signature: workDexExpGain: number;","title":"Bitburner.sleeveworkgains.workdexexpgain"},{"location":"bitburner.sleeveworkgains.workdexexpgain/#sleeveworkgainsworkdexexpgain-property","text":"Dexterity exp gained from work Signature: workDexExpGain: number;","title":"SleeveWorkGains.workDexExpGain property"},{"location":"bitburner.sleeveworkgains.workhackexpgain/","text":"Home > bitburner > SleeveWorkGains > workHackExpGain SleeveWorkGains.workHackExpGain property Hacking exp gained from work Signature: workHackExpGain: number;","title":"Bitburner.sleeveworkgains.workhackexpgain"},{"location":"bitburner.sleeveworkgains.workhackexpgain/#sleeveworkgainsworkhackexpgain-property","text":"Hacking exp gained from work Signature: workHackExpGain: number;","title":"SleeveWorkGains.workHackExpGain property"},{"location":"bitburner.sleeveworkgains.workmoneygain/","text":"Home > bitburner > SleeveWorkGains > workMoneyGain SleeveWorkGains.workMoneyGain property Money gained from work Signature: workMoneyGain: number;","title":"Bitburner.sleeveworkgains.workmoneygain"},{"location":"bitburner.sleeveworkgains.workmoneygain/#sleeveworkgainsworkmoneygain-property","text":"Money gained from work Signature: workMoneyGain: number;","title":"SleeveWorkGains.workMoneyGain property"},{"location":"bitburner.sleeveworkgains.workstrexpgain/","text":"Home > bitburner > SleeveWorkGains > workStrExpGain SleeveWorkGains.workStrExpGain property Strength exp gained from work Signature: workStrExpGain: number;","title":"Bitburner.sleeveworkgains.workstrexpgain"},{"location":"bitburner.sleeveworkgains.workstrexpgain/#sleeveworkgainsworkstrexpgain-property","text":"Strength exp gained from work Signature: workStrExpGain: number;","title":"SleeveWorkGains.workStrExpGain property"},{"location":"bitburner.sourcefilelvl.lvl/","text":"Home > bitburner > SourceFileLvl > lvl SourceFileLvl.lvl property The level of the source file Signature: lvl: number;","title":"Bitburner.sourcefilelvl.lvl"},{"location":"bitburner.sourcefilelvl.lvl/#sourcefilelvllvl-property","text":"The level of the source file Signature: lvl: number;","title":"SourceFileLvl.lvl property"},{"location":"bitburner.sourcefilelvl/","text":"Home > bitburner > SourceFileLvl SourceFileLvl interface Signature: export interface SourceFileLvl Properties Property Type Description lvl number The level of the source file n number The number of the source file","title":"Bitburner.sourcefilelvl"},{"location":"bitburner.sourcefilelvl/#sourcefilelvl-interface","text":"Signature: export interface SourceFileLvl","title":"SourceFileLvl interface"},{"location":"bitburner.sourcefilelvl/#properties","text":"Property Type Description lvl number The level of the source file n number The number of the source file","title":"Properties"},{"location":"bitburner.sourcefilelvl.n/","text":"Home > bitburner > SourceFileLvl > n SourceFileLvl.n property The number of the source file Signature: n: number;","title":"Bitburner.sourcefilelvl.n"},{"location":"bitburner.sourcefilelvl.n/#sourcefilelvln-property","text":"The number of the source file Signature: n: number;","title":"SourceFileLvl.n property"},{"location":"bitburner.stanek.acceptgift/","text":"Home > bitburner > Stanek > acceptGift Stanek.acceptGift() method Accept Stanek's Gift by joining the Church of the Machine God Signature: acceptGift(): boolean; Returns: boolean true if the player is a member of the church and has the gift installed, false otherwise. Remarks RAM cost: 2 GB","title":"Bitburner.stanek.acceptgift"},{"location":"bitburner.stanek.acceptgift/#stanekacceptgift-method","text":"Accept Stanek's Gift by joining the Church of the Machine God Signature: acceptGift(): boolean; Returns: boolean true if the player is a member of the church and has the gift installed, false otherwise.","title":"Stanek.acceptGift() method"},{"location":"bitburner.stanek.acceptgift/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.stanek.activefragments/","text":"Home > bitburner > Stanek > activeFragments Stanek.activeFragments() method List of fragments in Stanek's Gift. Signature: activeFragments(): ActiveFragment[]; Returns: ActiveFragment [] List of active fragments placed on Stanek's Gift. Remarks RAM cost: 5 GB","title":"Bitburner.stanek.activefragments"},{"location":"bitburner.stanek.activefragments/#stanekactivefragments-method","text":"List of fragments in Stanek's Gift. Signature: activeFragments(): ActiveFragment[]; Returns: ActiveFragment [] List of active fragments placed on Stanek's Gift.","title":"Stanek.activeFragments() method"},{"location":"bitburner.stanek.activefragments/#remarks","text":"RAM cost: 5 GB","title":"Remarks"},{"location":"bitburner.stanek.canplacefragment/","text":"Home > bitburner > Stanek > canPlaceFragment Stanek.canPlaceFragment() method Check if fragment can be placed at specified location. Signature: canPlaceFragment(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean; Parameters Parameter Type Description rootX number rootX Root X against which to align the top left of the fragment. rootY number rootY Root Y against which to align the top left of the fragment. rotation number rotation A number from 0 to 3, the mount of 90 degree turn to take. fragmentId number fragmentId ID of the fragment to place. Returns: boolean true if the fragment can be placed at that position. false otherwise. Remarks RAM cost: 0.5 GB","title":"Bitburner.stanek.canplacefragment"},{"location":"bitburner.stanek.canplacefragment/#stanekcanplacefragment-method","text":"Check if fragment can be placed at specified location. Signature: canPlaceFragment(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean;","title":"Stanek.canPlaceFragment() method"},{"location":"bitburner.stanek.canplacefragment/#parameters","text":"Parameter Type Description rootX number rootX Root X against which to align the top left of the fragment. rootY number rootY Root Y against which to align the top left of the fragment. rotation number rotation A number from 0 to 3, the mount of 90 degree turn to take. fragmentId number fragmentId ID of the fragment to place. Returns: boolean true if the fragment can be placed at that position. false otherwise.","title":"Parameters"},{"location":"bitburner.stanek.canplacefragment/#remarks","text":"RAM cost: 0.5 GB","title":"Remarks"},{"location":"bitburner.stanek.chargefragment/","text":"Home > bitburner > Stanek > chargeFragment Stanek.chargeFragment() method Charge a fragment, increasing its power. Signature: chargeFragment(rootX: number, rootY: number): Promise<void>; Parameters Parameter Type Description rootX number rootX Root X against which to align the top left of the fragment. rootY number rootY Root Y against which to align the top left of the fragment. Returns: Promise<void> Promise that lasts until the charge action is over. Remarks RAM cost: 0.4 GB","title":"Bitburner.stanek.chargefragment"},{"location":"bitburner.stanek.chargefragment/#stanekchargefragment-method","text":"Charge a fragment, increasing its power. Signature: chargeFragment(rootX: number, rootY: number): Promise<void>;","title":"Stanek.chargeFragment() method"},{"location":"bitburner.stanek.chargefragment/#parameters","text":"Parameter Type Description rootX number rootX Root X against which to align the top left of the fragment. rootY number rootY Root Y against which to align the top left of the fragment. Returns: Promise<void> Promise that lasts until the charge action is over.","title":"Parameters"},{"location":"bitburner.stanek.chargefragment/#remarks","text":"RAM cost: 0.4 GB","title":"Remarks"},{"location":"bitburner.stanek.cleargift/","text":"Home > bitburner > Stanek > clearGift Stanek.clearGift() method Clear the board of all fragments. Signature: clearGift(): void; Returns: void Remarks RAM cost: 0 GB","title":"Bitburner.stanek.cleargift"},{"location":"bitburner.stanek.cleargift/#stanekcleargift-method","text":"Clear the board of all fragments. Signature: clearGift(): void; Returns: void","title":"Stanek.clearGift() method"},{"location":"bitburner.stanek.cleargift/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.stanek.fragmentdefinitions/","text":"Home > bitburner > Stanek > fragmentDefinitions Stanek.fragmentDefinitions() method List possible fragments. Signature: fragmentDefinitions(): Fragment[]; Returns: Fragment [] List of possible fragments. Remarks RAM cost: 0 GB","title":"Bitburner.stanek.fragmentdefinitions"},{"location":"bitburner.stanek.fragmentdefinitions/#stanekfragmentdefinitions-method","text":"List possible fragments. Signature: fragmentDefinitions(): Fragment[]; Returns: Fragment [] List of possible fragments.","title":"Stanek.fragmentDefinitions() method"},{"location":"bitburner.stanek.fragmentdefinitions/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.stanek.getfragment/","text":"Home > bitburner > Stanek > getFragment Stanek.getFragment() method Get placed fragment at location. Signature: getFragment(rootX: number, rootY: number): ActiveFragment | undefined; Parameters Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. Returns: ActiveFragment | undefined The fragment at [rootX, rootY], if any. Remarks RAM cost: 5 GB","title":"Bitburner.stanek.getfragment"},{"location":"bitburner.stanek.getfragment/#stanekgetfragment-method","text":"Get placed fragment at location. Signature: getFragment(rootX: number, rootY: number): ActiveFragment | undefined;","title":"Stanek.getFragment() method"},{"location":"bitburner.stanek.getfragment/#parameters","text":"Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. Returns: ActiveFragment | undefined The fragment at [rootX, rootY], if any.","title":"Parameters"},{"location":"bitburner.stanek.getfragment/#remarks","text":"RAM cost: 5 GB","title":"Remarks"},{"location":"bitburner.stanek.giftheight/","text":"Home > bitburner > Stanek > giftHeight Stanek.giftHeight() method Stanek's Gift height. Signature: giftHeight(): number; Returns: number The height of the gift. Remarks RAM cost: 0.4 GB","title":"Bitburner.stanek.giftheight"},{"location":"bitburner.stanek.giftheight/#stanekgiftheight-method","text":"Stanek's Gift height. Signature: giftHeight(): number; Returns: number The height of the gift.","title":"Stanek.giftHeight() method"},{"location":"bitburner.stanek.giftheight/#remarks","text":"RAM cost: 0.4 GB","title":"Remarks"},{"location":"bitburner.stanek.giftwidth/","text":"Home > bitburner > Stanek > giftWidth Stanek.giftWidth() method Stanek's Gift width. Signature: giftWidth(): number; Returns: number The width of the gift. Remarks RAM cost: 0.4 GB","title":"Bitburner.stanek.giftwidth"},{"location":"bitburner.stanek.giftwidth/#stanekgiftwidth-method","text":"Stanek's Gift width. Signature: giftWidth(): number; Returns: number The width of the gift.","title":"Stanek.giftWidth() method"},{"location":"bitburner.stanek.giftwidth/#remarks","text":"RAM cost: 0.4 GB","title":"Remarks"},{"location":"bitburner.stanek/","text":"Home > bitburner > Stanek Stanek interface Stanek's Gift API. Signature: interface Stanek Methods Method Description acceptGift() Accept Stanek's Gift by joining the Church of the Machine God activeFragments() List of fragments in Stanek's Gift. canPlaceFragment(rootX, rootY, rotation, fragmentId) Check if fragment can be placed at specified location. chargeFragment(rootX, rootY) Charge a fragment, increasing its power. clearGift() Clear the board of all fragments. fragmentDefinitions() List possible fragments. getFragment(rootX, rootY) Get placed fragment at location. giftHeight() Stanek's Gift height. giftWidth() Stanek's Gift width. placeFragment(rootX, rootY, rotation, fragmentId) Place fragment on Stanek's Gift. removeFragment(rootX, rootY) Remove fragment at location.","title":"Bitburner.stanek"},{"location":"bitburner.stanek/#stanek-interface","text":"Stanek's Gift API. Signature: interface Stanek","title":"Stanek interface"},{"location":"bitburner.stanek/#methods","text":"Method Description acceptGift() Accept Stanek's Gift by joining the Church of the Machine God activeFragments() List of fragments in Stanek's Gift. canPlaceFragment(rootX, rootY, rotation, fragmentId) Check if fragment can be placed at specified location. chargeFragment(rootX, rootY) Charge a fragment, increasing its power. clearGift() Clear the board of all fragments. fragmentDefinitions() List possible fragments. getFragment(rootX, rootY) Get placed fragment at location. giftHeight() Stanek's Gift height. giftWidth() Stanek's Gift width. placeFragment(rootX, rootY, rotation, fragmentId) Place fragment on Stanek's Gift. removeFragment(rootX, rootY) Remove fragment at location.","title":"Methods"},{"location":"bitburner.stanek.placefragment/","text":"Home > bitburner > Stanek > placeFragment Stanek.placeFragment() method Place fragment on Stanek's Gift. Signature: placeFragment(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean; Parameters Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. rotation number A number from 0 to 3, the mount of 90 degree turn to take. fragmentId number ID of the fragment to place. Returns: boolean true if the fragment can be placed at that position. false otherwise. Remarks RAM cost: 5 GB","title":"Bitburner.stanek.placefragment"},{"location":"bitburner.stanek.placefragment/#stanekplacefragment-method","text":"Place fragment on Stanek's Gift. Signature: placeFragment(rootX: number, rootY: number, rotation: number, fragmentId: number): boolean;","title":"Stanek.placeFragment() method"},{"location":"bitburner.stanek.placefragment/#parameters","text":"Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. rotation number A number from 0 to 3, the mount of 90 degree turn to take. fragmentId number ID of the fragment to place. Returns: boolean true if the fragment can be placed at that position. false otherwise.","title":"Parameters"},{"location":"bitburner.stanek.placefragment/#remarks","text":"RAM cost: 5 GB","title":"Remarks"},{"location":"bitburner.stanek.removefragment/","text":"Home > bitburner > Stanek > removeFragment Stanek.removeFragment() method Remove fragment at location. Signature: removeFragment(rootX: number, rootY: number): boolean; Parameters Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. Returns: boolean The fragment at [rootX, rootY], if any. Remarks RAM cost: 0.15 GB","title":"Bitburner.stanek.removefragment"},{"location":"bitburner.stanek.removefragment/#stanekremovefragment-method","text":"Remove fragment at location. Signature: removeFragment(rootX: number, rootY: number): boolean;","title":"Stanek.removeFragment() method"},{"location":"bitburner.stanek.removefragment/#parameters","text":"Parameter Type Description rootX number X against which to align the top left of the fragment. rootY number Y against which to align the top left of the fragment. Returns: boolean The fragment at [rootX, rootY], if any.","title":"Parameters"},{"location":"bitburner.stanek.removefragment/#remarks","text":"RAM cost: 0.15 GB","title":"Remarks"},{"location":"bitburner.stockorder/","text":"Home > bitburner > StockOrder StockOrder interface Return value of getOrders Keys are stock symbols, properties are arrays of StockOrderObject Signature: export interface StockOrder","title":"Bitburner.stockorder"},{"location":"bitburner.stockorder/#stockorder-interface","text":"Return value of getOrders Keys are stock symbols, properties are arrays of StockOrderObject Signature: export interface StockOrder","title":"StockOrder interface"},{"location":"bitburner.stockorderobject/","text":"Home > bitburner > StockOrderObject StockOrderObject interface Value in map of StockOrder Signature: export interface StockOrderObject Properties Property Type Description position PositionTypes Order position price number Price per share shares number Number of shares type OrderTypes Order type","title":"Bitburner.stockorderobject"},{"location":"bitburner.stockorderobject/#stockorderobject-interface","text":"Value in map of StockOrder Signature: export interface StockOrderObject","title":"StockOrderObject interface"},{"location":"bitburner.stockorderobject/#properties","text":"Property Type Description position PositionTypes Order position price number Price per share shares number Number of shares type OrderTypes Order type","title":"Properties"},{"location":"bitburner.stockorderobject.position/","text":"Home > bitburner > StockOrderObject > position StockOrderObject.position property Order position Signature: position: PositionTypes;","title":"Bitburner.stockorderobject.position"},{"location":"bitburner.stockorderobject.position/#stockorderobjectposition-property","text":"Order position Signature: position: PositionTypes;","title":"StockOrderObject.position property"},{"location":"bitburner.stockorderobject.price/","text":"Home > bitburner > StockOrderObject > price StockOrderObject.price property Price per share Signature: price: number;","title":"Bitburner.stockorderobject.price"},{"location":"bitburner.stockorderobject.price/#stockorderobjectprice-property","text":"Price per share Signature: price: number;","title":"StockOrderObject.price property"},{"location":"bitburner.stockorderobject.shares/","text":"Home > bitburner > StockOrderObject > shares StockOrderObject.shares property Number of shares Signature: shares: number;","title":"Bitburner.stockorderobject.shares"},{"location":"bitburner.stockorderobject.shares/#stockorderobjectshares-property","text":"Number of shares Signature: shares: number;","title":"StockOrderObject.shares property"},{"location":"bitburner.stockorderobject.type/","text":"Home > bitburner > StockOrderObject > type StockOrderObject.type property Order type Signature: type: OrderTypes;","title":"Bitburner.stockorderobject.type"},{"location":"bitburner.stockorderobject.type/#stockorderobjecttype-property","text":"Order type Signature: type: OrderTypes;","title":"StockOrderObject.type property"},{"location":"bitburner.tix.buyshort/","text":"Home > bitburner > TIX > buyShort TIX.buyShort() method Short stocks. Signature: buyShort(sym: string, shares: number): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to short. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased. Remarks RAM cost: 2.5 GB Attempts to purchase a short position of a stock using a Market Order. The ability to short a stock is **not** immediately available to the player and must be unlocked later on in the game. If the player does not have enough money to purchase the specified number of shares, then no shares will be purchased. Remember that every transaction on the stock exchange costs a certain commission fee. If the purchase is successful, this function will return the stock price at which each share was purchased. Otherwise, it will return 0.","title":"Bitburner.tix.buyshort"},{"location":"bitburner.tix.buyshort/#tixbuyshort-method","text":"Short stocks. Signature: buyShort(sym: string, shares: number): number;","title":"TIX.buyShort() method"},{"location":"bitburner.tix.buyshort/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to short. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased.","title":"Parameters"},{"location":"bitburner.tix.buyshort/#remarks","text":"RAM cost: 2.5 GB Attempts to purchase a short position of a stock using a Market Order. The ability to short a stock is **not** immediately available to the player and must be unlocked later on in the game. If the player does not have enough money to purchase the specified number of shares, then no shares will be purchased. Remember that every transaction on the stock exchange costs a certain commission fee. If the purchase is successful, this function will return the stock price at which each share was purchased. Otherwise, it will return 0.","title":"Remarks"},{"location":"bitburner.tix.buystock/","text":"Home > bitburner > TIX > buyStock TIX.buyStock() method Buy stocks. Signature: buyStock(sym: string, shares: number): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to purchased. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased. Remarks RAM cost: 2.5 GB Attempts to purchase shares of a stock using a Market Order. If the player does not have enough money to purchase the specified number of shares, then no shares will be purchased. Remember that every transaction on the stock exchange costs a certain commission fee. If this function successfully purchases the shares, it will return the stock price at which each share was purchased. Otherwise, it will return 0.","title":"Bitburner.tix.buystock"},{"location":"bitburner.tix.buystock/#tixbuystock-method","text":"Buy stocks. Signature: buyStock(sym: string, shares: number): number;","title":"TIX.buyStock() method"},{"location":"bitburner.tix.buystock/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to purchased. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was purchased, otherwise 0 if the shares weren't purchased.","title":"Parameters"},{"location":"bitburner.tix.buystock/#remarks","text":"RAM cost: 2.5 GB Attempts to purchase shares of a stock using a Market Order. If the player does not have enough money to purchase the specified number of shares, then no shares will be purchased. Remember that every transaction on the stock exchange costs a certain commission fee. If this function successfully purchases the shares, it will return the stock price at which each share was purchased. Otherwise, it will return 0.","title":"Remarks"},{"location":"bitburner.tix.cancelorder/","text":"Home > bitburner > TIX > cancelOrder TIX.cancelOrder() method Cancel order for stocks. Signature: cancelOrder(sym: string, shares: number, price: number, type: string, pos: string): void; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares for order. Must be positive. Will be rounded to nearest integer. price number Execution price for the order. type string Type of order. pos string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: void Remarks RAM cost: 2.5 GB Cancels an outstanding Limit or Stop order on the stock market. The ability to use limit and stop orders is **not** immediately available to the player and must be unlocked later on in the game.","title":"Bitburner.tix.cancelorder"},{"location":"bitburner.tix.cancelorder/#tixcancelorder-method","text":"Cancel order for stocks. Signature: cancelOrder(sym: string, shares: number, price: number, type: string, pos: string): void;","title":"TIX.cancelOrder() method"},{"location":"bitburner.tix.cancelorder/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares for order. Must be positive. Will be rounded to nearest integer. price number Execution price for the order. type string Type of order. pos string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: void","title":"Parameters"},{"location":"bitburner.tix.cancelorder/#remarks","text":"RAM cost: 2.5 GB Cancels an outstanding Limit or Stop order on the stock market. The ability to use limit and stop orders is **not** immediately available to the player and must be unlocked later on in the game.","title":"Remarks"},{"location":"bitburner.tix.getaskprice/","text":"Home > bitburner > TIX > getAskPrice TIX.getAskPrice() method Returns the ask price of that stock. Signature: getAskPrice(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number The ask price of a stock. Remarks RAM cost: 2 GB","title":"Bitburner.tix.getaskprice"},{"location":"bitburner.tix.getaskprice/#tixgetaskprice-method","text":"Returns the ask price of that stock. Signature: getAskPrice(sym: string): number;","title":"TIX.getAskPrice() method"},{"location":"bitburner.tix.getaskprice/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number The ask price of a stock.","title":"Parameters"},{"location":"bitburner.tix.getaskprice/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.tix.getbidprice/","text":"Home > bitburner > TIX > getBidPrice TIX.getBidPrice() method Returns the bid price of that stock. Signature: getBidPrice(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number The bid price of a stock. Remarks RAM cost: 2 GB","title":"Bitburner.tix.getbidprice"},{"location":"bitburner.tix.getbidprice/#tixgetbidprice-method","text":"Returns the bid price of that stock. Signature: getBidPrice(sym: string): number;","title":"TIX.getBidPrice() method"},{"location":"bitburner.tix.getbidprice/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number The bid price of a stock.","title":"Parameters"},{"location":"bitburner.tix.getbidprice/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.tix.getforecast/","text":"Home > bitburner > TIX > getForecast TIX.getForecast() method Returns the probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick. Signature: getForecast(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number Probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick. Remarks RAM cost: 2.5 GB The probability is returned as a decimal value, NOT a percentage (e.g. if a stock has a 60% chance of increasing, then this function will return 0.6, NOT 60). In other words, if this function returned 0.30 for a stock, then this means that the stock\u2019s price has a 30% chance of increasing and a 70% chance of decreasing during the next tick. In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.","title":"Bitburner.tix.getforecast"},{"location":"bitburner.tix.getforecast/#tixgetforecast-method","text":"Returns the probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick. Signature: getForecast(sym: string): number;","title":"TIX.getForecast() method"},{"location":"bitburner.tix.getforecast/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number Probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick.","title":"Parameters"},{"location":"bitburner.tix.getforecast/#remarks","text":"RAM cost: 2.5 GB The probability is returned as a decimal value, NOT a percentage (e.g. if a stock has a 60% chance of increasing, then this function will return 0.6, NOT 60). In other words, if this function returned 0.30 for a stock, then this means that the stock\u2019s price has a 30% chance of increasing and a 70% chance of decreasing during the next tick. In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.","title":"Remarks"},{"location":"bitburner.tix.getmaxshares/","text":"Home > bitburner > TIX > getMaxShares TIX.getMaxShares() method Returns the maximum number of shares of a stock. Signature: getMaxShares(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number Maximum number of shares that the stock has. Remarks RAM cost: 2 GB This is the maximum amount of the stock that can be purchased in both the Long and Short positions combined.","title":"Bitburner.tix.getmaxshares"},{"location":"bitburner.tix.getmaxshares/#tixgetmaxshares-method","text":"Returns the maximum number of shares of a stock. Signature: getMaxShares(sym: string): number;","title":"TIX.getMaxShares() method"},{"location":"bitburner.tix.getmaxshares/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number Maximum number of shares that the stock has.","title":"Parameters"},{"location":"bitburner.tix.getmaxshares/#remarks","text":"RAM cost: 2 GB This is the maximum amount of the stock that can be purchased in both the Long and Short positions combined.","title":"Remarks"},{"location":"bitburner.tix.getorders/","text":"Home > bitburner > TIX > getOrders TIX.getOrders() method Returns your order book for the stock market. Signature: getOrders(): StockOrder; Returns: StockOrder Object containing information for all the Limit and Stop Orders you have in the stock market. Remarks RAM cost: 2.5 GB This is an object containing information for all the Limit and Stop Orders you have in the stock market. For each symbol you have a position in, the returned object will have a key with that symbol's name. The object's properties are each an array of StockOrderObject The object has the following structure: { string1: [ // Array of orders for this stock { shares: Order quantity price: Order price type: Order type position: Either \"L\" or \"S\" for Long or Short position }, { ... }, ... ], string2: [ // Array of orders for this stock ... ], ... } The \u201cOrder type\u201d property can have one of the following four values: \"Limit Buy Order\", \"Limit Sell Order\", \"Stop Buy Order\", \"Stop Sell Order\". Note that the order book will only contain information for stocks that you actually have orders in. Example \"If you do not have orders in Nova Medical (NVMD), then the returned object will not have a \u201cNVMD\u201d property.\" { ECP: [ { shares: 5, price: 100,000 type: \"Stop Buy Order\", position: \"S\", }, { shares: 25, price: 125,000 type: \"Limit Sell Order\", position: \"L\", }, ], SYSC: [ { shares: 100, price: 10,000 type: \"Limit Buy Order\", position: \"L\", }, ], }","title":"Bitburner.tix.getorders"},{"location":"bitburner.tix.getorders/#tixgetorders-method","text":"Returns your order book for the stock market. Signature: getOrders(): StockOrder; Returns: StockOrder Object containing information for all the Limit and Stop Orders you have in the stock market.","title":"TIX.getOrders() method"},{"location":"bitburner.tix.getorders/#remarks","text":"RAM cost: 2.5 GB This is an object containing information for all the Limit and Stop Orders you have in the stock market. For each symbol you have a position in, the returned object will have a key with that symbol's name. The object's properties are each an array of StockOrderObject The object has the following structure: { string1: [ // Array of orders for this stock { shares: Order quantity price: Order price type: Order type position: Either \"L\" or \"S\" for Long or Short position }, { ... }, ... ], string2: [ // Array of orders for this stock ... ], ... } The \u201cOrder type\u201d property can have one of the following four values: \"Limit Buy Order\", \"Limit Sell Order\", \"Stop Buy Order\", \"Stop Sell Order\". Note that the order book will only contain information for stocks that you actually have orders in.","title":"Remarks"},{"location":"bitburner.tix.getorders/#example","text":"\"If you do not have orders in Nova Medical (NVMD), then the returned object will not have a \u201cNVMD\u201d property.\" { ECP: [ { shares: 5, price: 100,000 type: \"Stop Buy Order\", position: \"S\", }, { shares: 25, price: 125,000 type: \"Limit Sell Order\", position: \"L\", }, ], SYSC: [ { shares: 100, price: 10,000 type: \"Limit Buy Order\", position: \"L\", }, ], }","title":"Example"},{"location":"bitburner.tix.getposition/","text":"Home > bitburner > TIX > getPosition TIX.getPosition() method Returns the player\u2019s position in a stock. Signature: getPosition(sym: string): [number, number, number, number]; Parameters Parameter Type Description sym string Stock symbol. Returns: [number, number, number, number] Array of four elements that represents the player\u2019s position in a stock. Remarks RAM cost: 2 GB Returns an array of four elements that represents the player\u2019s position in a stock. The first element is the returned array is the number of shares the player owns of the stock in the Long position. The second element in the array is the average price of the player\u2019s shares in the Long position. The third element in the array is the number of shares the player owns of the stock in the Short position. The fourth element in the array is the average price of the player\u2019s Short position. All elements in the returned array are numeric. Example 1 // NS1 var pos = stock.getPosition(\"ECP\"); var shares = pos[0]; var avgPx = pos[1]; var sharesShort = pos[2]; var avgPxShort = pos[3]; Example 2 // NS2 const [shares, avgPx, sharesShort, avgPxShort] = ns.stock.getPosition(\"ECP\");","title":"Bitburner.tix.getposition"},{"location":"bitburner.tix.getposition/#tixgetposition-method","text":"Returns the player\u2019s position in a stock. Signature: getPosition(sym: string): [number, number, number, number];","title":"TIX.getPosition() method"},{"location":"bitburner.tix.getposition/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: [number, number, number, number] Array of four elements that represents the player\u2019s position in a stock.","title":"Parameters"},{"location":"bitburner.tix.getposition/#remarks","text":"RAM cost: 2 GB Returns an array of four elements that represents the player\u2019s position in a stock. The first element is the returned array is the number of shares the player owns of the stock in the Long position. The second element in the array is the average price of the player\u2019s shares in the Long position. The third element in the array is the number of shares the player owns of the stock in the Short position. The fourth element in the array is the average price of the player\u2019s Short position. All elements in the returned array are numeric.","title":"Remarks"},{"location":"bitburner.tix.getposition/#example-1","text":"// NS1 var pos = stock.getPosition(\"ECP\"); var shares = pos[0]; var avgPx = pos[1]; var sharesShort = pos[2]; var avgPxShort = pos[3];","title":"Example 1"},{"location":"bitburner.tix.getposition/#example-2","text":"// NS2 const [shares, avgPx, sharesShort, avgPxShort] = ns.stock.getPosition(\"ECP\");","title":"Example 2"},{"location":"bitburner.tix.getprice/","text":"Home > bitburner > TIX > getPrice TIX.getPrice() method Returns the price of a stock. Signature: getPrice(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number The price of a stock. Remarks RAM cost: 2 GB The stock\u2019s price is the average of its bid and ask prices. This function requires that you have the following: WSE Account TIX API Access Example 1 // NS1 stock.getPrice(\"FSIG\"); // Choose the first stock symbol from the array of stock symbols. Get the price // of the corresponding stock. var sym = stock.getSymbols()[0]; tprint(\"Stock symbol: \" + sym); tprint(\"Stock price: \" + stock.getPrice(sym)); Example 2 // NS2 ns.stock.getPrice(\"FSIG\"); // Choose the first stock symbol from the array of stock symbols. Get the price // of the corresponding stock. const sym = ns.stock.getSymbols()[0]; ns.tprint(\"Stock symbol: \" + sym); ns.tprint(\"Stock price: \" + ns.stock.getPrice(sym));","title":"Bitburner.tix.getprice"},{"location":"bitburner.tix.getprice/#tixgetprice-method","text":"Returns the price of a stock. Signature: getPrice(sym: string): number;","title":"TIX.getPrice() method"},{"location":"bitburner.tix.getprice/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number The price of a stock.","title":"Parameters"},{"location":"bitburner.tix.getprice/#remarks","text":"RAM cost: 2 GB The stock\u2019s price is the average of its bid and ask prices. This function requires that you have the following: WSE Account TIX API Access","title":"Remarks"},{"location":"bitburner.tix.getprice/#example-1","text":"// NS1 stock.getPrice(\"FSIG\"); // Choose the first stock symbol from the array of stock symbols. Get the price // of the corresponding stock. var sym = stock.getSymbols()[0]; tprint(\"Stock symbol: \" + sym); tprint(\"Stock price: \" + stock.getPrice(sym));","title":"Example 1"},{"location":"bitburner.tix.getprice/#example-2","text":"// NS2 ns.stock.getPrice(\"FSIG\"); // Choose the first stock symbol from the array of stock symbols. Get the price // of the corresponding stock. const sym = ns.stock.getSymbols()[0]; ns.tprint(\"Stock symbol: \" + sym); ns.tprint(\"Stock price: \" + ns.stock.getPrice(sym));","title":"Example 2"},{"location":"bitburner.tix.getpurchasecost/","text":"Home > bitburner > TIX > getPurchaseCost TIX.getPurchaseCost() method Calculates cost of buying stocks. Signature: getPurchaseCost(sym: string, shares: number, posType: string): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to purchase. posType string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: number Cost to buy a given number of shares of a stock. Remarks RAM cost: 2 GB Calculates and returns how much it would cost to buy a given number of shares of a stock. This takes into account spread, large transactions influencing the price of the stock and commission fees.","title":"Bitburner.tix.getpurchasecost"},{"location":"bitburner.tix.getpurchasecost/#tixgetpurchasecost-method","text":"Calculates cost of buying stocks. Signature: getPurchaseCost(sym: string, shares: number, posType: string): number;","title":"TIX.getPurchaseCost() method"},{"location":"bitburner.tix.getpurchasecost/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to purchase. posType string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: number Cost to buy a given number of shares of a stock.","title":"Parameters"},{"location":"bitburner.tix.getpurchasecost/#remarks","text":"RAM cost: 2 GB Calculates and returns how much it would cost to buy a given number of shares of a stock. This takes into account spread, large transactions influencing the price of the stock and commission fees.","title":"Remarks"},{"location":"bitburner.tix.getsalegain/","text":"Home > bitburner > TIX > getSaleGain TIX.getSaleGain() method Calculate profit of selling stocks. Signature: getSaleGain(sym: string, shares: number, posType: string): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. posType string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: number Gain from selling a given number of shares of a stock. Remarks RAM cost: 2 GB Calculates and returns how much you would gain from selling a given number of shares of a stock. This takes into account spread, large transactions influencing the price of the stock and commission fees.","title":"Bitburner.tix.getsalegain"},{"location":"bitburner.tix.getsalegain/#tixgetsalegain-method","text":"Calculate profit of selling stocks. Signature: getSaleGain(sym: string, shares: number, posType: string): number;","title":"TIX.getSaleGain() method"},{"location":"bitburner.tix.getsalegain/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. posType string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: number Gain from selling a given number of shares of a stock.","title":"Parameters"},{"location":"bitburner.tix.getsalegain/#remarks","text":"RAM cost: 2 GB Calculates and returns how much you would gain from selling a given number of shares of a stock. This takes into account spread, large transactions influencing the price of the stock and commission fees.","title":"Remarks"},{"location":"bitburner.tix.getsymbols/","text":"Home > bitburner > TIX > getSymbols TIX.getSymbols() method Returns an array of the symbols of the tradable stocks Signature: getSymbols(): string[]; Returns: string[] Array of the symbols of the tradable stocks. Remarks RAM cost: 2 GB","title":"Bitburner.tix.getsymbols"},{"location":"bitburner.tix.getsymbols/#tixgetsymbols-method","text":"Returns an array of the symbols of the tradable stocks Signature: getSymbols(): string[]; Returns: string[] Array of the symbols of the tradable stocks.","title":"TIX.getSymbols() method"},{"location":"bitburner.tix.getsymbols/#remarks","text":"RAM cost: 2 GB","title":"Remarks"},{"location":"bitburner.tix.getvolatility/","text":"Home > bitburner > TIX > getVolatility TIX.getVolatility() method Returns the volatility of the specified stock. Signature: getVolatility(sym: string): number; Parameters Parameter Type Description sym string Stock symbol. Returns: number Volatility of the specified stock. Remarks RAM cost: 2.5 GB Volatility represents the maximum percentage by which a stock\u2019s price can change every tick. The volatility is returned as a decimal value, NOT a percentage (e.g. if a stock has a volatility of 3%, then this function will return 0.03, NOT 3). In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.","title":"Bitburner.tix.getvolatility"},{"location":"bitburner.tix.getvolatility/#tixgetvolatility-method","text":"Returns the volatility of the specified stock. Signature: getVolatility(sym: string): number;","title":"TIX.getVolatility() method"},{"location":"bitburner.tix.getvolatility/#parameters","text":"Parameter Type Description sym string Stock symbol. Returns: number Volatility of the specified stock.","title":"Parameters"},{"location":"bitburner.tix.getvolatility/#remarks","text":"RAM cost: 2.5 GB Volatility represents the maximum percentage by which a stock\u2019s price can change every tick. The volatility is returned as a decimal value, NOT a percentage (e.g. if a stock has a volatility of 3%, then this function will return 0.03, NOT 3). In order to use this function, you must first purchase access to the Four Sigma (4S) Market Data TIX API.","title":"Remarks"},{"location":"bitburner.tix.has4sdata/","text":"Home > bitburner > TIX > has4SData TIX.has4SData() method Returns true if the player has access to the 4S Data Signature: has4SData(): boolean; Returns: boolean Remarks RAM cost: 0.05 GB","title":"Bitburner.tix.has4sdata"},{"location":"bitburner.tix.has4sdata/#tixhas4sdata-method","text":"Returns true if the player has access to the 4S Data Signature: has4SData(): boolean; Returns: boolean","title":"TIX.has4SData() method"},{"location":"bitburner.tix.has4sdata/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.tix.has4sdatatixapi/","text":"Home > bitburner > TIX > has4SDataTIXAPI TIX.has4SDataTIXAPI() method Returns true if the player has access to the 4SData TIX API Signature: has4SDataTIXAPI(): boolean; Returns: boolean Remarks RAM cost: 0.05 GB","title":"Bitburner.tix.has4sdatatixapi"},{"location":"bitburner.tix.has4sdatatixapi/#tixhas4sdatatixapi-method","text":"Returns true if the player has access to the 4SData TIX API Signature: has4SDataTIXAPI(): boolean; Returns: boolean","title":"TIX.has4SDataTIXAPI() method"},{"location":"bitburner.tix.has4sdatatixapi/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.tix.hastixapiaccess/","text":"Home > bitburner > TIX > hasTIXAPIAccess TIX.hasTIXAPIAccess() method Returns true if the player has access to the TIX API Signature: hasTIXAPIAccess(): boolean; Returns: boolean Remarks RAM cost: 0.05 GB","title":"Bitburner.tix.hastixapiaccess"},{"location":"bitburner.tix.hastixapiaccess/#tixhastixapiaccess-method","text":"Returns true if the player has access to the TIX API Signature: hasTIXAPIAccess(): boolean; Returns: boolean","title":"TIX.hasTIXAPIAccess() method"},{"location":"bitburner.tix.hastixapiaccess/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.tix.haswseaccount/","text":"Home > bitburner > TIX > hasWSEAccount TIX.hasWSEAccount() method Returns true if the player has access to a WSE Account Signature: hasWSEAccount(): boolean; Returns: boolean Remarks RAM cost: 0.05 GB","title":"Bitburner.tix.haswseaccount"},{"location":"bitburner.tix.haswseaccount/#tixhaswseaccount-method","text":"Returns true if the player has access to a WSE Account Signature: hasWSEAccount(): boolean; Returns: boolean","title":"TIX.hasWSEAccount() method"},{"location":"bitburner.tix.haswseaccount/#remarks","text":"RAM cost: 0.05 GB","title":"Remarks"},{"location":"bitburner.tix/","text":"Home > bitburner > TIX TIX interface Stock market API Signature: export interface TIX Methods Method Description buyShort(sym, shares) Short stocks. buyStock(sym, shares) Buy stocks. cancelOrder(sym, shares, price, type, pos) Cancel order for stocks. getAskPrice(sym) Returns the ask price of that stock. getBidPrice(sym) Returns the bid price of that stock. getForecast(sym) Returns the probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick. getMaxShares(sym) Returns the maximum number of shares of a stock. getOrders() Returns your order book for the stock market. getPosition(sym) Returns the player\u2019s position in a stock. getPrice(sym) Returns the price of a stock. getPurchaseCost(sym, shares, posType) Calculates cost of buying stocks. getSaleGain(sym, shares, posType) Calculate profit of selling stocks. getSymbols() Returns an array of the symbols of the tradable stocks getVolatility(sym) Returns the volatility of the specified stock. has4SData() Returns true if the player has access to the 4S Data has4SDataTIXAPI() Returns true if the player has access to the 4SData TIX API hasTIXAPIAccess() Returns true if the player has access to the TIX API hasWSEAccount() Returns true if the player has access to a WSE Account placeOrder(sym, shares, price, type, pos) Place order for stocks. purchase4SMarketData() Purchase 4S Market Data Access. purchase4SMarketDataTixApi() Purchase 4S Market Data TIX API Access. purchaseTixApi() Purchase TIX API Access purchaseWseAccount() Purchase WSE Account. sellShort(sym, shares) Sell short stock. sellStock(sym, shares) Sell stocks.","title":"Bitburner.tix"},{"location":"bitburner.tix/#tix-interface","text":"Stock market API Signature: export interface TIX","title":"TIX interface"},{"location":"bitburner.tix/#methods","text":"Method Description buyShort(sym, shares) Short stocks. buyStock(sym, shares) Buy stocks. cancelOrder(sym, shares, price, type, pos) Cancel order for stocks. getAskPrice(sym) Returns the ask price of that stock. getBidPrice(sym) Returns the bid price of that stock. getForecast(sym) Returns the probability that the specified stock\u2019s price will increase (as opposed to decrease) during the next tick. getMaxShares(sym) Returns the maximum number of shares of a stock. getOrders() Returns your order book for the stock market. getPosition(sym) Returns the player\u2019s position in a stock. getPrice(sym) Returns the price of a stock. getPurchaseCost(sym, shares, posType) Calculates cost of buying stocks. getSaleGain(sym, shares, posType) Calculate profit of selling stocks. getSymbols() Returns an array of the symbols of the tradable stocks getVolatility(sym) Returns the volatility of the specified stock. has4SData() Returns true if the player has access to the 4S Data has4SDataTIXAPI() Returns true if the player has access to the 4SData TIX API hasTIXAPIAccess() Returns true if the player has access to the TIX API hasWSEAccount() Returns true if the player has access to a WSE Account placeOrder(sym, shares, price, type, pos) Place order for stocks. purchase4SMarketData() Purchase 4S Market Data Access. purchase4SMarketDataTixApi() Purchase 4S Market Data TIX API Access. purchaseTixApi() Purchase TIX API Access purchaseWseAccount() Purchase WSE Account. sellShort(sym, shares) Sell short stock. sellStock(sym, shares) Sell stocks.","title":"Methods"},{"location":"bitburner.tix.placeorder/","text":"Home > bitburner > TIX > placeOrder TIX.placeOrder() method Place order for stocks. Signature: placeOrder(sym: string, shares: number, price: number, type: string, pos: string): boolean; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares for order. Must be positive. Will be rounded to nearest integer. price number Execution price for the order. type string Type of order. pos string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: boolean True if the order is successfully placed, and false otherwise. Remarks RAM cost: 2.5 GB Places an order on the stock market. This function only works for Limit and Stop Orders. The ability to place limit and stop orders is **not** immediately available to the player and must be unlocked later on in the game. Returns true if the order is successfully placed, and false otherwise.","title":"Bitburner.tix.placeorder"},{"location":"bitburner.tix.placeorder/#tixplaceorder-method","text":"Place order for stocks. Signature: placeOrder(sym: string, shares: number, price: number, type: string, pos: string): boolean;","title":"TIX.placeOrder() method"},{"location":"bitburner.tix.placeorder/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares for order. Must be positive. Will be rounded to nearest integer. price number Execution price for the order. type string Type of order. pos string Specifies whether the order is a \u201cLong\u201d or \u201cShort\u201d position. Returns: boolean True if the order is successfully placed, and false otherwise.","title":"Parameters"},{"location":"bitburner.tix.placeorder/#remarks","text":"RAM cost: 2.5 GB Places an order on the stock market. This function only works for Limit and Stop Orders. The ability to place limit and stop orders is **not** immediately available to the player and must be unlocked later on in the game. Returns true if the order is successfully placed, and false otherwise.","title":"Remarks"},{"location":"bitburner.tix.purchase4smarketdata/","text":"Home > bitburner > TIX > purchase4SMarketData TIX.purchase4SMarketData() method Purchase 4S Market Data Access. Signature: purchase4SMarketData(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise. Remarks RAM cost: 2.5 GB","title":"Bitburner.tix.purchase4smarketdata"},{"location":"bitburner.tix.purchase4smarketdata/#tixpurchase4smarketdata-method","text":"Purchase 4S Market Data Access. Signature: purchase4SMarketData(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise.","title":"TIX.purchase4SMarketData() method"},{"location":"bitburner.tix.purchase4smarketdata/#remarks","text":"RAM cost: 2.5 GB","title":"Remarks"},{"location":"bitburner.tix.purchase4smarketdatatixapi/","text":"Home > bitburner > TIX > purchase4SMarketDataTixApi TIX.purchase4SMarketDataTixApi() method Purchase 4S Market Data TIX API Access. Signature: purchase4SMarketDataTixApi(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise. Remarks RAM cost: 2.5 GB","title":"Bitburner.tix.purchase4smarketdatatixapi"},{"location":"bitburner.tix.purchase4smarketdatatixapi/#tixpurchase4smarketdatatixapi-method","text":"Purchase 4S Market Data TIX API Access. Signature: purchase4SMarketDataTixApi(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise.","title":"TIX.purchase4SMarketDataTixApi() method"},{"location":"bitburner.tix.purchase4smarketdatatixapi/#remarks","text":"RAM cost: 2.5 GB","title":"Remarks"},{"location":"bitburner.tix.purchasetixapi/","text":"Home > bitburner > TIX > purchaseTixApi TIX.purchaseTixApi() method Purchase TIX API Access Signature: purchaseTixApi(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise. Remarks RAM cost: 2.5 GB","title":"Bitburner.tix.purchasetixapi"},{"location":"bitburner.tix.purchasetixapi/#tixpurchasetixapi-method","text":"Purchase TIX API Access Signature: purchaseTixApi(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise.","title":"TIX.purchaseTixApi() method"},{"location":"bitburner.tix.purchasetixapi/#remarks","text":"RAM cost: 2.5 GB","title":"Remarks"},{"location":"bitburner.tix.purchasewseaccount/","text":"Home > bitburner > TIX > purchaseWseAccount TIX.purchaseWseAccount() method Purchase WSE Account. Signature: purchaseWseAccount(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise. Remarks RAM cost: 2.5 GB","title":"Bitburner.tix.purchasewseaccount"},{"location":"bitburner.tix.purchasewseaccount/#tixpurchasewseaccount-method","text":"Purchase WSE Account. Signature: purchaseWseAccount(): boolean; Returns: boolean True if you successfully purchased it or if you already have access, false otherwise.","title":"TIX.purchaseWseAccount() method"},{"location":"bitburner.tix.purchasewseaccount/#remarks","text":"RAM cost: 2.5 GB","title":"Remarks"},{"location":"bitburner.tix.sellshort/","text":"Home > bitburner > TIX > sellShort TIX.sellShort() method Sell short stock. Signature: sellShort(sym: string, shares: number): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was sold, otherwise 0 if the shares weren't sold. Remarks RAM cost: 2.5 GB Attempts to sell a short position of a stock using a Market Order. The ability to short a stock is **not** immediately available to the player and must be unlocked later on in the game. If the specified number of shares exceeds the amount that the player actually owns, then this function will sell all owned shares. Remember that every transaction on the stock exchange costs a certain commission fee. If the sale is successful, this function will return the stock price at which each share was sold. Otherwise it will return 0.","title":"Bitburner.tix.sellshort"},{"location":"bitburner.tix.sellshort/#tixsellshort-method","text":"Sell short stock. Signature: sellShort(sym: string, shares: number): number;","title":"TIX.sellShort() method"},{"location":"bitburner.tix.sellshort/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was sold, otherwise 0 if the shares weren't sold.","title":"Parameters"},{"location":"bitburner.tix.sellshort/#remarks","text":"RAM cost: 2.5 GB Attempts to sell a short position of a stock using a Market Order. The ability to short a stock is **not** immediately available to the player and must be unlocked later on in the game. If the specified number of shares exceeds the amount that the player actually owns, then this function will sell all owned shares. Remember that every transaction on the stock exchange costs a certain commission fee. If the sale is successful, this function will return the stock price at which each share was sold. Otherwise it will return 0.","title":"Remarks"},{"location":"bitburner.tix.sellstock/","text":"Home > bitburner > TIX > sellStock TIX.sellStock() method Sell stocks. Signature: sellStock(sym: string, shares: number): number; Parameters Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was sold, otherwise 0 if the shares weren't sold. Remarks RAM cost: 2.5 GB Attempts to sell shares of a stock using a Market Order. If the specified number of shares in the function exceeds the amount that the player actually owns, then this function will sell all owned shares. Remember that every transaction on the stock exchange costs a certain commission fee. The net profit made from selling stocks with this function is reflected in the script\u2019s statistics. This net profit is calculated as: shares * (sell_price - average_price_of_purchased_shares) If the sale is successful, this function will return the stock price at which each share was sold. Otherwise, it will return 0.","title":"Bitburner.tix.sellstock"},{"location":"bitburner.tix.sellstock/#tixsellstock-method","text":"Sell stocks. Signature: sellStock(sym: string, shares: number): number;","title":"TIX.sellStock() method"},{"location":"bitburner.tix.sellstock/#parameters","text":"Parameter Type Description sym string Stock symbol. shares number Number of shares to sell. Must be positive. Will be rounded to nearest integer. Returns: number The stock price at which each share was sold, otherwise 0 if the shares weren't sold.","title":"Parameters"},{"location":"bitburner.tix.sellstock/#remarks","text":"RAM cost: 2.5 GB Attempts to sell shares of a stock using a Market Order. If the specified number of shares in the function exceeds the amount that the player actually owns, then this function will sell all owned shares. Remember that every transaction on the stock exchange costs a certain commission fee. The net profit made from selling stocks with this function is reflected in the script\u2019s statistics. This net profit is calculated as: shares * (sell_price - average_price_of_purchased_shares) If the sale is successful, this function will return the stock price at which each share was sold. Otherwise, it will return 0.","title":"Remarks"},{"location":"bitburner.toasttypes/","text":"Home > bitburner > ToastTypes ToastTypes type Signature: export type ToastTypes = `${ToastVariant}`; References: ToastVariant","title":"Bitburner.toasttypes"},{"location":"bitburner.toasttypes/#toasttypes-type","text":"Signature: export type ToastTypes = `${ToastVariant}`; References: ToastVariant","title":"ToastTypes type"},{"location":"bitburner.toastvariant/","text":"Home > bitburner > ToastVariant ToastVariant enum Signature: declare enum ToastVariant Enumeration Members Member Value Description ERROR \"error\" INFO \"info\" SUCCESS \"success\" WARNING \"warning\"","title":"Bitburner.toastvariant"},{"location":"bitburner.toastvariant/#toastvariant-enum","text":"Signature: declare enum ToastVariant","title":"ToastVariant enum"},{"location":"bitburner.toastvariant/#enumeration-members","text":"Member Value Description ERROR \"error\" INFO \"info\" SUCCESS \"success\" WARNING \"warning\"","title":"Enumeration Members"},{"location":"bitburner.userinterface.clearterminal/","text":"Home > bitburner > UserInterface > clearTerminal UserInterface.clearTerminal() method Clear the Terminal window, as if the player ran clear in the terminal Signature: clearTerminal(): void; Returns: void Remarks RAM cost: 0.2 GB","title":"Bitburner.userinterface.clearterminal"},{"location":"bitburner.userinterface.clearterminal/#userinterfaceclearterminal-method","text":"Clear the Terminal window, as if the player ran clear in the terminal Signature: clearTerminal(): void; Returns: void","title":"UserInterface.clearTerminal() method"},{"location":"bitburner.userinterface.clearterminal/#remarks","text":"RAM cost: 0.2 GB","title":"Remarks"},{"location":"bitburner.userinterface.getgameinfo/","text":"Home > bitburner > UserInterface > getGameInfo UserInterface.getGameInfo() method Gets the current game information (version, commit, ...) Signature: getGameInfo(): GameInfo; Returns: GameInfo Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.getgameinfo"},{"location":"bitburner.userinterface.getgameinfo/#userinterfacegetgameinfo-method","text":"Gets the current game information (version, commit, ...) Signature: getGameInfo(): GameInfo; Returns: GameInfo","title":"UserInterface.getGameInfo() method"},{"location":"bitburner.userinterface.getgameinfo/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.getstyles/","text":"Home > bitburner > UserInterface > getStyles UserInterface.getStyles() method Get the current styles Signature: getStyles(): IStyleSettings; Returns: IStyleSettings An object containing the player's styles Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.getstyles"},{"location":"bitburner.userinterface.getstyles/#userinterfacegetstyles-method","text":"Get the current styles Signature: getStyles(): IStyleSettings; Returns: IStyleSettings An object containing the player's styles","title":"UserInterface.getStyles() method"},{"location":"bitburner.userinterface.getstyles/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.gettheme/","text":"Home > bitburner > UserInterface > getTheme UserInterface.getTheme() method Get the current theme Signature: getTheme(): UserInterfaceTheme; Returns: UserInterfaceTheme An object containing the theme's colors Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.gettheme"},{"location":"bitburner.userinterface.gettheme/#userinterfacegettheme-method","text":"Get the current theme Signature: getTheme(): UserInterfaceTheme; Returns: UserInterfaceTheme An object containing the theme's colors","title":"UserInterface.getTheme() method"},{"location":"bitburner.userinterface.gettheme/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface/","text":"Home > bitburner > UserInterface UserInterface interface User Interface API. Signature: interface UserInterface Methods Method Description clearTerminal() Clear the Terminal window, as if the player ran clear in the terminal getGameInfo() Gets the current game information (version, commit, ...) getStyles() Get the current styles getTheme() Get the current theme resetStyles() Resets the player's styles to the default values resetTheme() Resets the player's theme to the default values setStyles(newStyles) Sets the current styles setTheme(newTheme) Sets the current theme windowSize() Get the current window size","title":"Bitburner.userinterface"},{"location":"bitburner.userinterface/#userinterface-interface","text":"User Interface API. Signature: interface UserInterface","title":"UserInterface interface"},{"location":"bitburner.userinterface/#methods","text":"Method Description clearTerminal() Clear the Terminal window, as if the player ran clear in the terminal getGameInfo() Gets the current game information (version, commit, ...) getStyles() Get the current styles getTheme() Get the current theme resetStyles() Resets the player's styles to the default values resetTheme() Resets the player's theme to the default values setStyles(newStyles) Sets the current styles setTheme(newTheme) Sets the current theme windowSize() Get the current window size","title":"Methods"},{"location":"bitburner.userinterface.resetstyles/","text":"Home > bitburner > UserInterface > resetStyles UserInterface.resetStyles() method Resets the player's styles to the default values Signature: resetStyles(): void; Returns: void Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.resetstyles"},{"location":"bitburner.userinterface.resetstyles/#userinterfaceresetstyles-method","text":"Resets the player's styles to the default values Signature: resetStyles(): void; Returns: void","title":"UserInterface.resetStyles() method"},{"location":"bitburner.userinterface.resetstyles/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.resettheme/","text":"Home > bitburner > UserInterface > resetTheme UserInterface.resetTheme() method Resets the player's theme to the default values Signature: resetTheme(): void; Returns: void Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.resettheme"},{"location":"bitburner.userinterface.resettheme/#userinterfaceresettheme-method","text":"Resets the player's theme to the default values Signature: resetTheme(): void; Returns: void","title":"UserInterface.resetTheme() method"},{"location":"bitburner.userinterface.resettheme/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.setstyles/","text":"Home > bitburner > UserInterface > setStyles UserInterface.setStyles() method Sets the current styles Signature: setStyles(newStyles: IStyleSettings): void; Parameters Parameter Type Description newStyles IStyleSettings Returns: void Remarks RAM cost: 0 GB Example Usage example (NS2) const styles = ns.ui.getStyles(); styles.fontFamily = 'Comic Sans Ms'; ns.ui.setStyles(styles);","title":"Bitburner.userinterface.setstyles"},{"location":"bitburner.userinterface.setstyles/#userinterfacesetstyles-method","text":"Sets the current styles Signature: setStyles(newStyles: IStyleSettings): void;","title":"UserInterface.setStyles() method"},{"location":"bitburner.userinterface.setstyles/#parameters","text":"Parameter Type Description newStyles IStyleSettings Returns: void","title":"Parameters"},{"location":"bitburner.userinterface.setstyles/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.setstyles/#example","text":"Usage example (NS2) const styles = ns.ui.getStyles(); styles.fontFamily = 'Comic Sans Ms'; ns.ui.setStyles(styles);","title":"Example"},{"location":"bitburner.userinterface.settheme/","text":"Home > bitburner > UserInterface > setTheme UserInterface.setTheme() method Sets the current theme Signature: setTheme(newTheme: UserInterfaceTheme): void; Parameters Parameter Type Description newTheme UserInterfaceTheme Returns: void Remarks RAM cost: 0 GB Example Usage example (NS2) const theme = ns.ui.getTheme(); theme.primary = '#ff5500'; ns.ui.setTheme(theme);","title":"Bitburner.userinterface.settheme"},{"location":"bitburner.userinterface.settheme/#userinterfacesettheme-method","text":"Sets the current theme Signature: setTheme(newTheme: UserInterfaceTheme): void;","title":"UserInterface.setTheme() method"},{"location":"bitburner.userinterface.settheme/#parameters","text":"Parameter Type Description newTheme UserInterfaceTheme Returns: void","title":"Parameters"},{"location":"bitburner.userinterface.settheme/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterface.settheme/#example","text":"Usage example (NS2) const theme = ns.ui.getTheme(); theme.primary = '#ff5500'; ns.ui.setTheme(theme);","title":"Example"},{"location":"bitburner.userinterface.windowsize/","text":"Home > bitburner > UserInterface > windowSize UserInterface.windowSize() method Get the current window size Signature: windowSize(): [number, number]; Returns: [number, number] An array of 2 value containing the window width and height. Remarks RAM cost: 0 GB","title":"Bitburner.userinterface.windowsize"},{"location":"bitburner.userinterface.windowsize/#userinterfacewindowsize-method","text":"Get the current window size Signature: windowSize(): [number, number]; Returns: [number, number] An array of 2 value containing the window width and height.","title":"UserInterface.windowSize() method"},{"location":"bitburner.userinterface.windowsize/#remarks","text":"RAM cost: 0 GB","title":"Remarks"},{"location":"bitburner.userinterfacetheme.backgroundprimary/","text":"Home > bitburner > UserInterfaceTheme > backgroundprimary UserInterfaceTheme.backgroundprimary property Signature: backgroundprimary: string;","title":"Bitburner.userinterfacetheme.backgroundprimary"},{"location":"bitburner.userinterfacetheme.backgroundprimary/#userinterfacethemebackgroundprimary-property","text":"Signature: backgroundprimary: string;","title":"UserInterfaceTheme.backgroundprimary property"},{"location":"bitburner.userinterfacetheme.backgroundsecondary/","text":"Home > bitburner > UserInterfaceTheme > backgroundsecondary UserInterfaceTheme.backgroundsecondary property Signature: backgroundsecondary: string;","title":"Bitburner.userinterfacetheme.backgroundsecondary"},{"location":"bitburner.userinterfacetheme.backgroundsecondary/#userinterfacethemebackgroundsecondary-property","text":"Signature: backgroundsecondary: string;","title":"UserInterfaceTheme.backgroundsecondary property"},{"location":"bitburner.userinterfacetheme.black/","text":"Home > bitburner > UserInterfaceTheme > black UserInterfaceTheme.black property Signature: black: string;","title":"Bitburner.userinterfacetheme.black"},{"location":"bitburner.userinterfacetheme.black/#userinterfacethemeblack-property","text":"Signature: black: string;","title":"UserInterfaceTheme.black property"},{"location":"bitburner.userinterfacetheme.button/","text":"Home > bitburner > UserInterfaceTheme > button UserInterfaceTheme.button property Signature: button: string;","title":"Bitburner.userinterfacetheme.button"},{"location":"bitburner.userinterfacetheme.button/#userinterfacethemebutton-property","text":"Signature: button: string;","title":"UserInterfaceTheme.button property"},{"location":"bitburner.userinterfacetheme.cha/","text":"Home > bitburner > UserInterfaceTheme > cha UserInterfaceTheme.cha property Signature: cha: string;","title":"Bitburner.userinterfacetheme.cha"},{"location":"bitburner.userinterfacetheme.cha/#userinterfacethemecha-property","text":"Signature: cha: string;","title":"UserInterfaceTheme.cha property"},{"location":"bitburner.userinterfacetheme.combat/","text":"Home > bitburner > UserInterfaceTheme > combat UserInterfaceTheme.combat property Signature: combat: string;","title":"Bitburner.userinterfacetheme.combat"},{"location":"bitburner.userinterfacetheme.combat/#userinterfacethemecombat-property","text":"Signature: combat: string;","title":"UserInterfaceTheme.combat property"},{"location":"bitburner.userinterfacetheme.disabled/","text":"Home > bitburner > UserInterfaceTheme > disabled UserInterfaceTheme.disabled property Signature: disabled: string;","title":"Bitburner.userinterfacetheme.disabled"},{"location":"bitburner.userinterfacetheme.disabled/#userinterfacethemedisabled-property","text":"Signature: disabled: string;","title":"UserInterfaceTheme.disabled property"},{"location":"bitburner.userinterfacetheme.error/","text":"Home > bitburner > UserInterfaceTheme > error UserInterfaceTheme.error property Signature: error: string;","title":"Bitburner.userinterfacetheme.error"},{"location":"bitburner.userinterfacetheme.error/#userinterfacethemeerror-property","text":"Signature: error: string;","title":"UserInterfaceTheme.error property"},{"location":"bitburner.userinterfacetheme.errordark/","text":"Home > bitburner > UserInterfaceTheme > errordark UserInterfaceTheme.errordark property Signature: errordark: string;","title":"Bitburner.userinterfacetheme.errordark"},{"location":"bitburner.userinterfacetheme.errordark/#userinterfacethemeerrordark-property","text":"Signature: errordark: string;","title":"UserInterfaceTheme.errordark property"},{"location":"bitburner.userinterfacetheme.errorlight/","text":"Home > bitburner > UserInterfaceTheme > errorlight UserInterfaceTheme.errorlight property Signature: errorlight: string;","title":"Bitburner.userinterfacetheme.errorlight"},{"location":"bitburner.userinterfacetheme.errorlight/#userinterfacethemeerrorlight-property","text":"Signature: errorlight: string;","title":"UserInterfaceTheme.errorlight property"},{"location":"bitburner.userinterfacetheme.hack/","text":"Home > bitburner > UserInterfaceTheme > hack UserInterfaceTheme.hack property Signature: hack: string;","title":"Bitburner.userinterfacetheme.hack"},{"location":"bitburner.userinterfacetheme.hack/#userinterfacethemehack-property","text":"Signature: hack: string;","title":"UserInterfaceTheme.hack property"},{"location":"bitburner.userinterfacetheme.hp/","text":"Home > bitburner > UserInterfaceTheme > hp UserInterfaceTheme.hp property Signature: hp: string;","title":"Bitburner.userinterfacetheme.hp"},{"location":"bitburner.userinterfacetheme.hp/#userinterfacethemehp-property","text":"Signature: hp: string;","title":"UserInterfaceTheme.hp property"},{"location":"bitburner.userinterfacetheme.info/","text":"Home > bitburner > UserInterfaceTheme > info UserInterfaceTheme.info property Signature: info: string;","title":"Bitburner.userinterfacetheme.info"},{"location":"bitburner.userinterfacetheme.info/#userinterfacethemeinfo-property","text":"Signature: info: string;","title":"UserInterfaceTheme.info property"},{"location":"bitburner.userinterfacetheme.infodark/","text":"Home > bitburner > UserInterfaceTheme > infodark UserInterfaceTheme.infodark property Signature: infodark: string;","title":"Bitburner.userinterfacetheme.infodark"},{"location":"bitburner.userinterfacetheme.infodark/#userinterfacethemeinfodark-property","text":"Signature: infodark: string;","title":"UserInterfaceTheme.infodark property"},{"location":"bitburner.userinterfacetheme.infolight/","text":"Home > bitburner > UserInterfaceTheme > infolight UserInterfaceTheme.infolight property Signature: infolight: string;","title":"Bitburner.userinterfacetheme.infolight"},{"location":"bitburner.userinterfacetheme.infolight/#userinterfacethemeinfolight-property","text":"Signature: infolight: string;","title":"UserInterfaceTheme.infolight property"},{"location":"bitburner.userinterfacetheme.int/","text":"Home > bitburner > UserInterfaceTheme > int UserInterfaceTheme.int property Signature: int: string;","title":"Bitburner.userinterfacetheme.int"},{"location":"bitburner.userinterfacetheme.int/#userinterfacethemeint-property","text":"Signature: int: string;","title":"UserInterfaceTheme.int property"},{"location":"bitburner.userinterfacetheme/","text":"Home > bitburner > UserInterfaceTheme UserInterfaceTheme interface Interface Theme Signature: interface UserInterfaceTheme Properties Property Type Description backgroundprimary string backgroundsecondary string black string button string cha string combat string disabled string error string errordark string errorlight string hack string hp string info string infodark string infolight string int string money string primary string primarydark string primarylight string rep string secondary string secondarydark string secondarylight string success string successdark string successlight string warning string warningdark string warninglight string well string welllight string white string","title":"Bitburner.userinterfacetheme"},{"location":"bitburner.userinterfacetheme/#userinterfacetheme-interface","text":"Interface Theme Signature: interface UserInterfaceTheme","title":"UserInterfaceTheme interface"},{"location":"bitburner.userinterfacetheme/#properties","text":"Property Type Description backgroundprimary string backgroundsecondary string black string button string cha string combat string disabled string error string errordark string errorlight string hack string hp string info string infodark string infolight string int string money string primary string primarydark string primarylight string rep string secondary string secondarydark string secondarylight string success string successdark string successlight string warning string warningdark string warninglight string well string welllight string white string","title":"Properties"},{"location":"bitburner.userinterfacetheme.money/","text":"Home > bitburner > UserInterfaceTheme > money UserInterfaceTheme.money property Signature: money: string;","title":"Bitburner.userinterfacetheme.money"},{"location":"bitburner.userinterfacetheme.money/#userinterfacethememoney-property","text":"Signature: money: string;","title":"UserInterfaceTheme.money property"},{"location":"bitburner.userinterfacetheme.primary/","text":"Home > bitburner > UserInterfaceTheme > primary UserInterfaceTheme.primary property Signature: primary: string;","title":"Bitburner.userinterfacetheme.primary"},{"location":"bitburner.userinterfacetheme.primary/#userinterfacethemeprimary-property","text":"Signature: primary: string;","title":"UserInterfaceTheme.primary property"},{"location":"bitburner.userinterfacetheme.primarydark/","text":"Home > bitburner > UserInterfaceTheme > primarydark UserInterfaceTheme.primarydark property Signature: primarydark: string;","title":"Bitburner.userinterfacetheme.primarydark"},{"location":"bitburner.userinterfacetheme.primarydark/#userinterfacethemeprimarydark-property","text":"Signature: primarydark: string;","title":"UserInterfaceTheme.primarydark property"},{"location":"bitburner.userinterfacetheme.primarylight/","text":"Home > bitburner > UserInterfaceTheme > primarylight UserInterfaceTheme.primarylight property Signature: primarylight: string;","title":"Bitburner.userinterfacetheme.primarylight"},{"location":"bitburner.userinterfacetheme.primarylight/#userinterfacethemeprimarylight-property","text":"Signature: primarylight: string;","title":"UserInterfaceTheme.primarylight property"},{"location":"bitburner.userinterfacetheme.rep/","text":"Home > bitburner > UserInterfaceTheme > rep UserInterfaceTheme.rep property Signature: rep: string;","title":"Bitburner.userinterfacetheme.rep"},{"location":"bitburner.userinterfacetheme.rep/#userinterfacethemerep-property","text":"Signature: rep: string;","title":"UserInterfaceTheme.rep property"},{"location":"bitburner.userinterfacetheme.secondary/","text":"Home > bitburner > UserInterfaceTheme > secondary UserInterfaceTheme.secondary property Signature: secondary: string;","title":"Bitburner.userinterfacetheme.secondary"},{"location":"bitburner.userinterfacetheme.secondary/#userinterfacethemesecondary-property","text":"Signature: secondary: string;","title":"UserInterfaceTheme.secondary property"},{"location":"bitburner.userinterfacetheme.secondarydark/","text":"Home > bitburner > UserInterfaceTheme > secondarydark UserInterfaceTheme.secondarydark property Signature: secondarydark: string;","title":"Bitburner.userinterfacetheme.secondarydark"},{"location":"bitburner.userinterfacetheme.secondarydark/#userinterfacethemesecondarydark-property","text":"Signature: secondarydark: string;","title":"UserInterfaceTheme.secondarydark property"},{"location":"bitburner.userinterfacetheme.secondarylight/","text":"Home > bitburner > UserInterfaceTheme > secondarylight UserInterfaceTheme.secondarylight property Signature: secondarylight: string;","title":"Bitburner.userinterfacetheme.secondarylight"},{"location":"bitburner.userinterfacetheme.secondarylight/#userinterfacethemesecondarylight-property","text":"Signature: secondarylight: string;","title":"UserInterfaceTheme.secondarylight property"},{"location":"bitburner.userinterfacetheme.success/","text":"Home > bitburner > UserInterfaceTheme > success UserInterfaceTheme.success property Signature: success: string;","title":"Bitburner.userinterfacetheme.success"},{"location":"bitburner.userinterfacetheme.success/#userinterfacethemesuccess-property","text":"Signature: success: string;","title":"UserInterfaceTheme.success property"},{"location":"bitburner.userinterfacetheme.successdark/","text":"Home > bitburner > UserInterfaceTheme > successdark UserInterfaceTheme.successdark property Signature: successdark: string;","title":"Bitburner.userinterfacetheme.successdark"},{"location":"bitburner.userinterfacetheme.successdark/#userinterfacethemesuccessdark-property","text":"Signature: successdark: string;","title":"UserInterfaceTheme.successdark property"},{"location":"bitburner.userinterfacetheme.successlight/","text":"Home > bitburner > UserInterfaceTheme > successlight UserInterfaceTheme.successlight property Signature: successlight: string;","title":"Bitburner.userinterfacetheme.successlight"},{"location":"bitburner.userinterfacetheme.successlight/#userinterfacethemesuccesslight-property","text":"Signature: successlight: string;","title":"UserInterfaceTheme.successlight property"},{"location":"bitburner.userinterfacetheme.warning/","text":"Home > bitburner > UserInterfaceTheme > warning UserInterfaceTheme.warning property Signature: warning: string;","title":"Bitburner.userinterfacetheme.warning"},{"location":"bitburner.userinterfacetheme.warning/#userinterfacethemewarning-property","text":"Signature: warning: string;","title":"UserInterfaceTheme.warning property"},{"location":"bitburner.userinterfacetheme.warningdark/","text":"Home > bitburner > UserInterfaceTheme > warningdark UserInterfaceTheme.warningdark property Signature: warningdark: string;","title":"Bitburner.userinterfacetheme.warningdark"},{"location":"bitburner.userinterfacetheme.warningdark/#userinterfacethemewarningdark-property","text":"Signature: warningdark: string;","title":"UserInterfaceTheme.warningdark property"},{"location":"bitburner.userinterfacetheme.warninglight/","text":"Home > bitburner > UserInterfaceTheme > warninglight UserInterfaceTheme.warninglight property Signature: warninglight: string;","title":"Bitburner.userinterfacetheme.warninglight"},{"location":"bitburner.userinterfacetheme.warninglight/#userinterfacethemewarninglight-property","text":"Signature: warninglight: string;","title":"UserInterfaceTheme.warninglight property"},{"location":"bitburner.userinterfacetheme.well/","text":"Home > bitburner > UserInterfaceTheme > well UserInterfaceTheme.well property Signature: well: string;","title":"Bitburner.userinterfacetheme.well"},{"location":"bitburner.userinterfacetheme.well/#userinterfacethemewell-property","text":"Signature: well: string;","title":"UserInterfaceTheme.well property"},{"location":"bitburner.userinterfacetheme.welllight/","text":"Home > bitburner > UserInterfaceTheme > welllight UserInterfaceTheme.welllight property Signature: welllight: string;","title":"Bitburner.userinterfacetheme.welllight"},{"location":"bitburner.userinterfacetheme.welllight/#userinterfacethemewelllight-property","text":"Signature: welllight: string;","title":"UserInterfaceTheme.welllight property"},{"location":"bitburner.userinterfacetheme.white/","text":"Home > bitburner > UserInterfaceTheme > white UserInterfaceTheme.white property Signature: white: string;","title":"Bitburner.userinterfacetheme.white"},{"location":"bitburner.userinterfacetheme.white/#userinterfacethemewhite-property","text":"Signature: white: string;","title":"UserInterfaceTheme.white property"},{"location":"bitburner.warehouse.level/","text":"Home > bitburner > Warehouse > level Warehouse.level property Amount of size upgrade bought Signature: level: number;","title":"Bitburner.warehouse.level"},{"location":"bitburner.warehouse.level/#warehouselevel-property","text":"Amount of size upgrade bought Signature: level: number;","title":"Warehouse.level property"},{"location":"bitburner.warehouse.loc/","text":"Home > bitburner > Warehouse > loc Warehouse.loc property City in which the warehouse is located Signature: loc: string;","title":"Bitburner.warehouse.loc"},{"location":"bitburner.warehouse.loc/#warehouseloc-property","text":"City in which the warehouse is located Signature: loc: string;","title":"Warehouse.loc property"},{"location":"bitburner.warehouse/","text":"Home > bitburner > Warehouse Warehouse interface Warehouse for a division in a city Signature: interface Warehouse Properties Property Type Description level number Amount of size upgrade bought loc string City in which the warehouse is located size number Total space in the warehouse sizeUsed number Used space in the warehouse smartSupplyEnabled boolean Smart Supply status in the warehouse","title":"Bitburner.warehouse"},{"location":"bitburner.warehouse/#warehouse-interface","text":"Warehouse for a division in a city Signature: interface Warehouse","title":"Warehouse interface"},{"location":"bitburner.warehouse/#properties","text":"Property Type Description level number Amount of size upgrade bought loc string City in which the warehouse is located size number Total space in the warehouse sizeUsed number Used space in the warehouse smartSupplyEnabled boolean Smart Supply status in the warehouse","title":"Properties"},{"location":"bitburner.warehouse.size/","text":"Home > bitburner > Warehouse > size Warehouse.size property Total space in the warehouse Signature: size: number;","title":"Bitburner.warehouse.size"},{"location":"bitburner.warehouse.size/#warehousesize-property","text":"Total space in the warehouse Signature: size: number;","title":"Warehouse.size property"},{"location":"bitburner.warehouse.sizeused/","text":"Home > bitburner > Warehouse > sizeUsed Warehouse.sizeUsed property Used space in the warehouse Signature: sizeUsed: number;","title":"Bitburner.warehouse.sizeused"},{"location":"bitburner.warehouse.sizeused/#warehousesizeused-property","text":"Used space in the warehouse Signature: sizeUsed: number;","title":"Warehouse.sizeUsed property"},{"location":"bitburner.warehouse.smartsupplyenabled/","text":"Home > bitburner > Warehouse > smartSupplyEnabled Warehouse.smartSupplyEnabled property Smart Supply status in the warehouse Signature: smartSupplyEnabled: boolean;","title":"Bitburner.warehouse.smartsupplyenabled"},{"location":"bitburner.warehouse.smartsupplyenabled/#warehousesmartsupplyenabled-property","text":"Smart Supply status in the warehouse Signature: smartSupplyEnabled: boolean;","title":"Warehouse.smartSupplyEnabled property"},{"location":"bitburner.warehouseapi.bulkpurchase/","text":"Home > bitburner > WarehouseAPI > bulkPurchase WarehouseAPI.bulkPurchase() method Set material to bulk buy Signature: bulkPurchase(divisionName: string, cityName: string, materialName: string, amt: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt number Amount of material to buy Returns: void","title":"Bitburner.warehouseapi.bulkpurchase"},{"location":"bitburner.warehouseapi.bulkpurchase/#warehouseapibulkpurchase-method","text":"Set material to bulk buy Signature: bulkPurchase(divisionName: string, cityName: string, materialName: string, amt: number): void;","title":"WarehouseAPI.bulkPurchase() method"},{"location":"bitburner.warehouseapi.bulkpurchase/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt number Amount of material to buy Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.buymaterial/","text":"Home > bitburner > WarehouseAPI > buyMaterial WarehouseAPI.buyMaterial() method Set material buy data Signature: buyMaterial(divisionName: string, cityName: string, materialName: string, amt: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt number Amount of material to buy Returns: void","title":"Bitburner.warehouseapi.buymaterial"},{"location":"bitburner.warehouseapi.buymaterial/#warehouseapibuymaterial-method","text":"Set material buy data Signature: buyMaterial(divisionName: string, cityName: string, materialName: string, amt: number): void;","title":"WarehouseAPI.buyMaterial() method"},{"location":"bitburner.warehouseapi.buymaterial/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt number Amount of material to buy Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.cancelexportmaterial/","text":"Home > bitburner > WarehouseAPI > cancelExportMaterial WarehouseAPI.cancelExportMaterial() method Cancel material export Signature: cancelExportMaterial( sourceDivision: string, sourceCity: string, targetDivision: string, targetCity: string, materialName: string, amt: number, ): void; Parameters Parameter Type Description sourceDivision string Source division sourceCity string Source city targetDivision string Target division targetCity string Target city materialName string Name of the material amt number Amount of material to export. Returns: void","title":"Bitburner.warehouseapi.cancelexportmaterial"},{"location":"bitburner.warehouseapi.cancelexportmaterial/#warehouseapicancelexportmaterial-method","text":"Cancel material export Signature: cancelExportMaterial( sourceDivision: string, sourceCity: string, targetDivision: string, targetCity: string, materialName: string, amt: number, ): void;","title":"WarehouseAPI.cancelExportMaterial() method"},{"location":"bitburner.warehouseapi.cancelexportmaterial/#parameters","text":"Parameter Type Description sourceDivision string Source division sourceCity string Source city targetDivision string Target division targetCity string Target city materialName string Name of the material amt number Amount of material to export. Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.discontinueproduct/","text":"Home > bitburner > WarehouseAPI > discontinueProduct WarehouseAPI.discontinueProduct() method Discontinue a product. Signature: discontinueProduct(divisionName: string, productName: string): void; Parameters Parameter Type Description divisionName string Name of the division productName string Name of the product Returns: void","title":"Bitburner.warehouseapi.discontinueproduct"},{"location":"bitburner.warehouseapi.discontinueproduct/#warehouseapidiscontinueproduct-method","text":"Discontinue a product. Signature: discontinueProduct(divisionName: string, productName: string): void;","title":"WarehouseAPI.discontinueProduct() method"},{"location":"bitburner.warehouseapi.discontinueproduct/#parameters","text":"Parameter Type Description divisionName string Name of the division productName string Name of the product Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.exportmaterial/","text":"Home > bitburner > WarehouseAPI > exportMaterial WarehouseAPI.exportMaterial() method Set material export data Signature: exportMaterial( sourceDivision: string, sourceCity: string, targetDivision: string, targetCity: string, materialName: string, amt: number, ): void; Parameters Parameter Type Description sourceDivision string Source division sourceCity string Source city targetDivision string Target division targetCity string Target city materialName string Name of the material amt number Amount of material to export. Returns: void","title":"Bitburner.warehouseapi.exportmaterial"},{"location":"bitburner.warehouseapi.exportmaterial/#warehouseapiexportmaterial-method","text":"Set material export data Signature: exportMaterial( sourceDivision: string, sourceCity: string, targetDivision: string, targetCity: string, materialName: string, amt: number, ): void;","title":"WarehouseAPI.exportMaterial() method"},{"location":"bitburner.warehouseapi.exportmaterial/#parameters","text":"Parameter Type Description sourceDivision string Source division sourceCity string Source city targetDivision string Target division targetCity string Target city materialName string Name of the material amt number Amount of material to export. Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.getmaterial/","text":"Home > bitburner > WarehouseAPI > getMaterial WarehouseAPI.getMaterial() method Get material data Signature: getMaterial(divisionName: string, cityName: string, materialName: string): Material; Parameters Parameter Type Description divisionName string Name of the division cityName string materialName string Name of the material Returns: Material material data","title":"Bitburner.warehouseapi.getmaterial"},{"location":"bitburner.warehouseapi.getmaterial/#warehouseapigetmaterial-method","text":"Get material data Signature: getMaterial(divisionName: string, cityName: string, materialName: string): Material;","title":"WarehouseAPI.getMaterial() method"},{"location":"bitburner.warehouseapi.getmaterial/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string materialName string Name of the material Returns: Material material data","title":"Parameters"},{"location":"bitburner.warehouseapi.getproduct/","text":"Home > bitburner > WarehouseAPI > getProduct WarehouseAPI.getProduct() method Get product data Signature: getProduct(divisionName: string, productName: string): Product; Parameters Parameter Type Description divisionName string Name of the division productName string Name of the product Returns: Product product data","title":"Bitburner.warehouseapi.getproduct"},{"location":"bitburner.warehouseapi.getproduct/#warehouseapigetproduct-method","text":"Get product data Signature: getProduct(divisionName: string, productName: string): Product;","title":"WarehouseAPI.getProduct() method"},{"location":"bitburner.warehouseapi.getproduct/#parameters","text":"Parameter Type Description divisionName string Name of the division productName string Name of the product Returns: Product product data","title":"Parameters"},{"location":"bitburner.warehouseapi.getpurchasewarehousecost/","text":"Home > bitburner > WarehouseAPI > getPurchaseWarehouseCost WarehouseAPI.getPurchaseWarehouseCost() method Gets the cost to purchase a warehouse Signature: getPurchaseWarehouseCost(): number; Returns: number cost","title":"Bitburner.warehouseapi.getpurchasewarehousecost"},{"location":"bitburner.warehouseapi.getpurchasewarehousecost/#warehouseapigetpurchasewarehousecost-method","text":"Gets the cost to purchase a warehouse Signature: getPurchaseWarehouseCost(): number; Returns: number cost","title":"WarehouseAPI.getPurchaseWarehouseCost() method"},{"location":"bitburner.warehouseapi.getupgradewarehousecost/","text":"Home > bitburner > WarehouseAPI > getUpgradeWarehouseCost WarehouseAPI.getUpgradeWarehouseCost() method Gets the cost to upgrade a warehouse to the next level Signature: getUpgradeWarehouseCost(adivisionName: string, acityName: string, amt?: number): number; Parameters Parameter Type Description adivisionName string acityName string amt number amount of upgrades defaults to 1 Returns: number cost to upgrade","title":"Bitburner.warehouseapi.getupgradewarehousecost"},{"location":"bitburner.warehouseapi.getupgradewarehousecost/#warehouseapigetupgradewarehousecost-method","text":"Gets the cost to upgrade a warehouse to the next level Signature: getUpgradeWarehouseCost(adivisionName: string, acityName: string, amt?: number): number;","title":"WarehouseAPI.getUpgradeWarehouseCost() method"},{"location":"bitburner.warehouseapi.getupgradewarehousecost/#parameters","text":"Parameter Type Description adivisionName string acityName string amt number amount of upgrades defaults to 1 Returns: number cost to upgrade","title":"Parameters"},{"location":"bitburner.warehouseapi.getwarehouse/","text":"Home > bitburner > WarehouseAPI > getWarehouse WarehouseAPI.getWarehouse() method Get warehouse data Signature: getWarehouse(divisionName: string, cityName: string): Warehouse; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Warehouse warehouse data","title":"Bitburner.warehouseapi.getwarehouse"},{"location":"bitburner.warehouseapi.getwarehouse/#warehouseapigetwarehouse-method","text":"Get warehouse data Signature: getWarehouse(divisionName: string, cityName: string): Warehouse;","title":"WarehouseAPI.getWarehouse() method"},{"location":"bitburner.warehouseapi.getwarehouse/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: Warehouse warehouse data","title":"Parameters"},{"location":"bitburner.warehouseapi.haswarehouse/","text":"Home > bitburner > WarehouseAPI > hasWarehouse WarehouseAPI.hasWarehouse() method Check if you have a warehouse in city Signature: hasWarehouse(adivisionName: string, acityName: string): boolean; Parameters Parameter Type Description adivisionName string acityName string Returns: boolean true if warehouse is present, false if not","title":"Bitburner.warehouseapi.haswarehouse"},{"location":"bitburner.warehouseapi.haswarehouse/#warehouseapihaswarehouse-method","text":"Check if you have a warehouse in city Signature: hasWarehouse(adivisionName: string, acityName: string): boolean;","title":"WarehouseAPI.hasWarehouse() method"},{"location":"bitburner.warehouseapi.haswarehouse/#parameters","text":"Parameter Type Description adivisionName string acityName string Returns: boolean true if warehouse is present, false if not","title":"Parameters"},{"location":"bitburner.warehouseapi.limitmaterialproduction/","text":"Home > bitburner > WarehouseAPI > limitMaterialProduction WarehouseAPI.limitMaterialProduction() method Limit Material Production. Signature: limitMaterialProduction(divisionName: string, cityName: string, materialName: string, qty: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material qty number Amount to limit to Returns: void","title":"Bitburner.warehouseapi.limitmaterialproduction"},{"location":"bitburner.warehouseapi.limitmaterialproduction/#warehouseapilimitmaterialproduction-method","text":"Limit Material Production. Signature: limitMaterialProduction(divisionName: string, cityName: string, materialName: string, qty: number): void;","title":"WarehouseAPI.limitMaterialProduction() method"},{"location":"bitburner.warehouseapi.limitmaterialproduction/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material qty number Amount to limit to Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.limitproductproduction/","text":"Home > bitburner > WarehouseAPI > limitProductProduction WarehouseAPI.limitProductProduction() method Limit Product Production. Signature: limitProductProduction(divisionName: string, cityName: string, productName: string, qty: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product qty number Amount to limit to Returns: void","title":"Bitburner.warehouseapi.limitproductproduction"},{"location":"bitburner.warehouseapi.limitproductproduction/#warehouseapilimitproductproduction-method","text":"Limit Product Production. Signature: limitProductProduction(divisionName: string, cityName: string, productName: string, qty: number): void;","title":"WarehouseAPI.limitProductProduction() method"},{"location":"bitburner.warehouseapi.limitproductproduction/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product qty number Amount to limit to Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.makeproduct/","text":"Home > bitburner > WarehouseAPI > makeProduct WarehouseAPI.makeProduct() method Create a new product Signature: makeProduct( divisionName: string, cityName: string, productName: string, designInvest: number, marketingInvest: number, ): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product designInvest number Amount to invest for the design of the product. marketingInvest number Amount to invest for the marketing of the product. Returns: void","title":"Bitburner.warehouseapi.makeproduct"},{"location":"bitburner.warehouseapi.makeproduct/#warehouseapimakeproduct-method","text":"Create a new product Signature: makeProduct( divisionName: string, cityName: string, productName: string, designInvest: number, marketingInvest: number, ): void;","title":"WarehouseAPI.makeProduct() method"},{"location":"bitburner.warehouseapi.makeproduct/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product designInvest number Amount to invest for the design of the product. marketingInvest number Amount to invest for the marketing of the product. Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi/","text":"Home > bitburner > WarehouseAPI WarehouseAPI interface Corporation Warehouse API Signature: export interface WarehouseAPI Remarks Requires the Warehouse API upgrade from your corporation. Methods Method Description bulkPurchase(divisionName, cityName, materialName, amt) Set material to bulk buy buyMaterial(divisionName, cityName, materialName, amt) Set material buy data cancelExportMaterial(sourceDivision, sourceCity, targetDivision, targetCity, materialName, amt) Cancel material export discontinueProduct(divisionName, productName) Discontinue a product. exportMaterial(sourceDivision, sourceCity, targetDivision, targetCity, materialName, amt) Set material export data getMaterial(divisionName, cityName, materialName) Get material data getProduct(divisionName, productName) Get product data getPurchaseWarehouseCost() Gets the cost to purchase a warehouse getUpgradeWarehouseCost(adivisionName, acityName, amt) Gets the cost to upgrade a warehouse to the next level getWarehouse(divisionName, cityName) Get warehouse data hasWarehouse(adivisionName, acityName) Check if you have a warehouse in city limitMaterialProduction(divisionName, cityName, materialName, qty) Limit Material Production. limitProductProduction(divisionName, cityName, productName, qty) Limit Product Production. makeProduct(divisionName, cityName, productName, designInvest, marketingInvest) Create a new product purchaseWarehouse(divisionName, cityName) Purchase warehouse for a new city sellMaterial(divisionName, cityName, materialName, amt, price) Set material sell data. sellProduct(divisionName, cityName, productName, amt, price, all) Set product sell data. setMaterialMarketTA1(divisionName, cityName, materialName, on) Set market TA 1 for a material. setMaterialMarketTA2(divisionName, cityName, materialName, on) Set market TA 2 for a material. setProductMarketTA1(divisionName, productName, on) Set market TA 1 for a product. setProductMarketTA2(divisionName, productName, on) Set market TA 2 for a product. setSmartSupply(divisionName, cityName, enabled) Set smart supply setSmartSupplyUseLeftovers(divisionName, cityName, materialName, enabled) Set whether smart supply uses leftovers before buying upgradeWarehouse(divisionName, cityName, amt) Upgrade warehouse","title":"Bitburner.warehouseapi"},{"location":"bitburner.warehouseapi/#warehouseapi-interface","text":"Corporation Warehouse API Signature: export interface WarehouseAPI","title":"WarehouseAPI interface"},{"location":"bitburner.warehouseapi/#remarks","text":"Requires the Warehouse API upgrade from your corporation.","title":"Remarks"},{"location":"bitburner.warehouseapi/#methods","text":"Method Description bulkPurchase(divisionName, cityName, materialName, amt) Set material to bulk buy buyMaterial(divisionName, cityName, materialName, amt) Set material buy data cancelExportMaterial(sourceDivision, sourceCity, targetDivision, targetCity, materialName, amt) Cancel material export discontinueProduct(divisionName, productName) Discontinue a product. exportMaterial(sourceDivision, sourceCity, targetDivision, targetCity, materialName, amt) Set material export data getMaterial(divisionName, cityName, materialName) Get material data getProduct(divisionName, productName) Get product data getPurchaseWarehouseCost() Gets the cost to purchase a warehouse getUpgradeWarehouseCost(adivisionName, acityName, amt) Gets the cost to upgrade a warehouse to the next level getWarehouse(divisionName, cityName) Get warehouse data hasWarehouse(adivisionName, acityName) Check if you have a warehouse in city limitMaterialProduction(divisionName, cityName, materialName, qty) Limit Material Production. limitProductProduction(divisionName, cityName, productName, qty) Limit Product Production. makeProduct(divisionName, cityName, productName, designInvest, marketingInvest) Create a new product purchaseWarehouse(divisionName, cityName) Purchase warehouse for a new city sellMaterial(divisionName, cityName, materialName, amt, price) Set material sell data. sellProduct(divisionName, cityName, productName, amt, price, all) Set product sell data. setMaterialMarketTA1(divisionName, cityName, materialName, on) Set market TA 1 for a material. setMaterialMarketTA2(divisionName, cityName, materialName, on) Set market TA 2 for a material. setProductMarketTA1(divisionName, productName, on) Set market TA 1 for a product. setProductMarketTA2(divisionName, productName, on) Set market TA 2 for a product. setSmartSupply(divisionName, cityName, enabled) Set smart supply setSmartSupplyUseLeftovers(divisionName, cityName, materialName, enabled) Set whether smart supply uses leftovers before buying upgradeWarehouse(divisionName, cityName, amt) Upgrade warehouse","title":"Methods"},{"location":"bitburner.warehouseapi.purchasewarehouse/","text":"Home > bitburner > WarehouseAPI > purchaseWarehouse WarehouseAPI.purchaseWarehouse() method Purchase warehouse for a new city Signature: purchaseWarehouse(divisionName: string, cityName: string): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: void","title":"Bitburner.warehouseapi.purchasewarehouse"},{"location":"bitburner.warehouseapi.purchasewarehouse/#warehouseapipurchasewarehouse-method","text":"Purchase warehouse for a new city Signature: purchaseWarehouse(divisionName: string, cityName: string): void;","title":"WarehouseAPI.purchaseWarehouse() method"},{"location":"bitburner.warehouseapi.purchasewarehouse/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.sellmaterial/","text":"Home > bitburner > WarehouseAPI > sellMaterial WarehouseAPI.sellMaterial() method Set material sell data. Signature: sellMaterial(divisionName: string, cityName: string, materialName: string, amt: string, price: string): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt string Amount to sell, can be \"MAX\" price string Price to sell, can be \"MP\" Returns: void","title":"Bitburner.warehouseapi.sellmaterial"},{"location":"bitburner.warehouseapi.sellmaterial/#warehouseapisellmaterial-method","text":"Set material sell data. Signature: sellMaterial(divisionName: string, cityName: string, materialName: string, amt: string, price: string): void;","title":"WarehouseAPI.sellMaterial() method"},{"location":"bitburner.warehouseapi.sellmaterial/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material amt string Amount to sell, can be \"MAX\" price string Price to sell, can be \"MP\" Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.sellproduct/","text":"Home > bitburner > WarehouseAPI > sellProduct WarehouseAPI.sellProduct() method Set product sell data. Signature: sellProduct( divisionName: string, cityName: string, productName: string, amt: string, price: string, all: boolean, ): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product amt string Amount to sell, can be \"MAX\" price string Price to sell, can be \"MP\" all boolean Sell in all city Returns: void","title":"Bitburner.warehouseapi.sellproduct"},{"location":"bitburner.warehouseapi.sellproduct/#warehouseapisellproduct-method","text":"Set product sell data. Signature: sellProduct( divisionName: string, cityName: string, productName: string, amt: string, price: string, all: boolean, ): void;","title":"WarehouseAPI.sellProduct() method"},{"location":"bitburner.warehouseapi.sellproduct/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city productName string Name of the product amt string Amount to sell, can be \"MAX\" price string Price to sell, can be \"MP\" all boolean Sell in all city Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setmaterialmarketta1/","text":"Home > bitburner > WarehouseAPI > setMaterialMarketTA1 WarehouseAPI.setMaterialMarketTA1() method Set market TA 1 for a material. Signature: setMaterialMarketTA1(divisionName: string, cityName: string, materialName: string, on: boolean): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material on boolean market ta enabled Returns: void","title":"Bitburner.warehouseapi.setmaterialmarketta1"},{"location":"bitburner.warehouseapi.setmaterialmarketta1/#warehouseapisetmaterialmarketta1-method","text":"Set market TA 1 for a material. Signature: setMaterialMarketTA1(divisionName: string, cityName: string, materialName: string, on: boolean): void;","title":"WarehouseAPI.setMaterialMarketTA1() method"},{"location":"bitburner.warehouseapi.setmaterialmarketta1/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material on boolean market ta enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setmaterialmarketta2/","text":"Home > bitburner > WarehouseAPI > setMaterialMarketTA2 WarehouseAPI.setMaterialMarketTA2() method Set market TA 2 for a material. Signature: setMaterialMarketTA2(divisionName: string, cityName: string, materialName: string, on: boolean): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material on boolean market ta enabled Returns: void","title":"Bitburner.warehouseapi.setmaterialmarketta2"},{"location":"bitburner.warehouseapi.setmaterialmarketta2/#warehouseapisetmaterialmarketta2-method","text":"Set market TA 2 for a material. Signature: setMaterialMarketTA2(divisionName: string, cityName: string, materialName: string, on: boolean): void;","title":"WarehouseAPI.setMaterialMarketTA2() method"},{"location":"bitburner.warehouseapi.setmaterialmarketta2/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material on boolean market ta enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setproductmarketta1/","text":"Home > bitburner > WarehouseAPI > setProductMarketTA1 WarehouseAPI.setProductMarketTA1() method Set market TA 1 for a product. Signature: setProductMarketTA1(divisionName: string, productName: string, on: boolean): void; Parameters Parameter Type Description divisionName string Name of the division productName string Name of the product on boolean market ta enabled Returns: void","title":"Bitburner.warehouseapi.setproductmarketta1"},{"location":"bitburner.warehouseapi.setproductmarketta1/#warehouseapisetproductmarketta1-method","text":"Set market TA 1 for a product. Signature: setProductMarketTA1(divisionName: string, productName: string, on: boolean): void;","title":"WarehouseAPI.setProductMarketTA1() method"},{"location":"bitburner.warehouseapi.setproductmarketta1/#parameters","text":"Parameter Type Description divisionName string Name of the division productName string Name of the product on boolean market ta enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setproductmarketta2/","text":"Home > bitburner > WarehouseAPI > setProductMarketTA2 WarehouseAPI.setProductMarketTA2() method Set market TA 2 for a product. Signature: setProductMarketTA2(divisionName: string, productName: string, on: boolean): void; Parameters Parameter Type Description divisionName string Name of the division productName string Name of the product on boolean market ta enabled Returns: void","title":"Bitburner.warehouseapi.setproductmarketta2"},{"location":"bitburner.warehouseapi.setproductmarketta2/#warehouseapisetproductmarketta2-method","text":"Set market TA 2 for a product. Signature: setProductMarketTA2(divisionName: string, productName: string, on: boolean): void;","title":"WarehouseAPI.setProductMarketTA2() method"},{"location":"bitburner.warehouseapi.setproductmarketta2/#parameters","text":"Parameter Type Description divisionName string Name of the division productName string Name of the product on boolean market ta enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setsmartsupply/","text":"Home > bitburner > WarehouseAPI > setSmartSupply WarehouseAPI.setSmartSupply() method Set smart supply Signature: setSmartSupply(divisionName: string, cityName: string, enabled: boolean): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city enabled boolean smart supply enabled Returns: void","title":"Bitburner.warehouseapi.setsmartsupply"},{"location":"bitburner.warehouseapi.setsmartsupply/#warehouseapisetsmartsupply-method","text":"Set smart supply Signature: setSmartSupply(divisionName: string, cityName: string, enabled: boolean): void;","title":"WarehouseAPI.setSmartSupply() method"},{"location":"bitburner.warehouseapi.setsmartsupply/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city enabled boolean smart supply enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.setsmartsupplyuseleftovers/","text":"Home > bitburner > WarehouseAPI > setSmartSupplyUseLeftovers WarehouseAPI.setSmartSupplyUseLeftovers() method Set whether smart supply uses leftovers before buying Signature: setSmartSupplyUseLeftovers(divisionName: string, cityName: string, materialName: string, enabled: boolean): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material enabled boolean smart supply use leftovers enabled Returns: void","title":"Bitburner.warehouseapi.setsmartsupplyuseleftovers"},{"location":"bitburner.warehouseapi.setsmartsupplyuseleftovers/#warehouseapisetsmartsupplyuseleftovers-method","text":"Set whether smart supply uses leftovers before buying Signature: setSmartSupplyUseLeftovers(divisionName: string, cityName: string, materialName: string, enabled: boolean): void;","title":"WarehouseAPI.setSmartSupplyUseLeftovers() method"},{"location":"bitburner.warehouseapi.setsmartsupplyuseleftovers/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city materialName string Name of the material enabled boolean smart supply use leftovers enabled Returns: void","title":"Parameters"},{"location":"bitburner.warehouseapi.upgradewarehouse/","text":"Home > bitburner > WarehouseAPI > upgradeWarehouse WarehouseAPI.upgradeWarehouse() method Upgrade warehouse Signature: upgradeWarehouse(divisionName: string, cityName: string, amt?: number): void; Parameters Parameter Type Description divisionName string Name of the division cityName string Name of the city amt number amount of upgrades defaults to 1 Returns: void","title":"Bitburner.warehouseapi.upgradewarehouse"},{"location":"bitburner.warehouseapi.upgradewarehouse/#warehouseapiupgradewarehouse-method","text":"Upgrade warehouse Signature: upgradeWarehouse(divisionName: string, cityName: string, amt?: number): void;","title":"WarehouseAPI.upgradeWarehouse() method"},{"location":"bitburner.warehouseapi.upgradewarehouse/#parameters","text":"Parameter Type Description divisionName string Name of the division cityName string Name of the city amt number amount of upgrades defaults to 1 Returns: void","title":"Parameters"},{"location":"bitburner.workformulas.classgains/","text":"Home > bitburner > WorkFormulas > classGains WorkFormulas.classGains() method Signature: classGains(player: Player, classType: string, locationName: string): WorkStats; Parameters Parameter Type Description player Player classType string locationName string Returns: WorkStats","title":"Bitburner.workformulas.classgains"},{"location":"bitburner.workformulas.classgains/#workformulasclassgains-method","text":"Signature: classGains(player: Player, classType: string, locationName: string): WorkStats;","title":"WorkFormulas.classGains() method"},{"location":"bitburner.workformulas.classgains/#parameters","text":"Parameter Type Description player Player classType string locationName string Returns: WorkStats","title":"Parameters"},{"location":"bitburner.workformulas.crimegains/","text":"Home > bitburner > WorkFormulas > crimeGains WorkFormulas.crimeGains() method Signature: crimeGains(crimeType: CrimeType | CrimeNames): WorkStats; Parameters Parameter Type Description crimeType CrimeType | CrimeNames Returns: WorkStats","title":"Bitburner.workformulas.crimegains"},{"location":"bitburner.workformulas.crimegains/#workformulascrimegains-method","text":"Signature: crimeGains(crimeType: CrimeType | CrimeNames): WorkStats;","title":"WorkFormulas.crimeGains() method"},{"location":"bitburner.workformulas.crimegains/#parameters","text":"Parameter Type Description crimeType CrimeType | CrimeNames Returns: WorkStats","title":"Parameters"},{"location":"bitburner.workformulas.factiongains/","text":"Home > bitburner > WorkFormulas > factionGains WorkFormulas.factionGains() method Signature: factionGains(player: Player, workType: string, favor: number): WorkStats; Parameters Parameter Type Description player Player workType string favor number Returns: WorkStats","title":"Bitburner.workformulas.factiongains"},{"location":"bitburner.workformulas.factiongains/#workformulasfactiongains-method","text":"Signature: factionGains(player: Player, workType: string, favor: number): WorkStats;","title":"WorkFormulas.factionGains() method"},{"location":"bitburner.workformulas.factiongains/#parameters","text":"Parameter Type Description player Player workType string favor number Returns: WorkStats","title":"Parameters"},{"location":"bitburner.workformulas/","text":"Home > bitburner > WorkFormulas WorkFormulas interface Work formulas Signature: interface WorkFormulas Methods Method Description classGains(player, classType, locationName) crimeGains(crimeType) factionGains(player, workType, favor)","title":"Bitburner.workformulas"},{"location":"bitburner.workformulas/#workformulas-interface","text":"Work formulas Signature: interface WorkFormulas","title":"WorkFormulas interface"},{"location":"bitburner.workformulas/#methods","text":"Method Description classGains(player, classType, locationName) crimeGains(crimeType) factionGains(player, workType, favor)","title":"Methods"},{"location":"bitburner.workstats.agiexp/","text":"Home > bitburner > WorkStats > agiExp WorkStats.agiExp property Signature: agiExp: number;","title":"Bitburner.workstats.agiexp"},{"location":"bitburner.workstats.agiexp/#workstatsagiexp-property","text":"Signature: agiExp: number;","title":"WorkStats.agiExp property"},{"location":"bitburner.workstats.chaexp/","text":"Home > bitburner > WorkStats > chaExp WorkStats.chaExp property Signature: chaExp: number;","title":"Bitburner.workstats.chaexp"},{"location":"bitburner.workstats.chaexp/#workstatschaexp-property","text":"Signature: chaExp: number;","title":"WorkStats.chaExp property"},{"location":"bitburner.workstats.defexp/","text":"Home > bitburner > WorkStats > defExp WorkStats.defExp property Signature: defExp: number;","title":"Bitburner.workstats.defexp"},{"location":"bitburner.workstats.defexp/#workstatsdefexp-property","text":"Signature: defExp: number;","title":"WorkStats.defExp property"},{"location":"bitburner.workstats.dexexp/","text":"Home > bitburner > WorkStats > dexExp WorkStats.dexExp property Signature: dexExp: number;","title":"Bitburner.workstats.dexexp"},{"location":"bitburner.workstats.dexexp/#workstatsdexexp-property","text":"Signature: dexExp: number;","title":"WorkStats.dexExp property"},{"location":"bitburner.workstats.hackexp/","text":"Home > bitburner > WorkStats > hackExp WorkStats.hackExp property Signature: hackExp: number;","title":"Bitburner.workstats.hackexp"},{"location":"bitburner.workstats.hackexp/#workstatshackexp-property","text":"Signature: hackExp: number;","title":"WorkStats.hackExp property"},{"location":"bitburner.workstats.intexp/","text":"Home > bitburner > WorkStats > intExp WorkStats.intExp property Signature: intExp: number;","title":"Bitburner.workstats.intexp"},{"location":"bitburner.workstats.intexp/#workstatsintexp-property","text":"Signature: intExp: number;","title":"WorkStats.intExp property"},{"location":"bitburner.workstats/","text":"Home > bitburner > WorkStats WorkStats interface Signature: export interface WorkStats Properties Property Type Description agiExp number chaExp number defExp number dexExp number hackExp number intExp number money number reputation number strExp number","title":"Bitburner.workstats"},{"location":"bitburner.workstats/#workstats-interface","text":"Signature: export interface WorkStats","title":"WorkStats interface"},{"location":"bitburner.workstats/#properties","text":"Property Type Description agiExp number chaExp number defExp number dexExp number hackExp number intExp number money number reputation number strExp number","title":"Properties"},{"location":"bitburner.workstats.money/","text":"Home > bitburner > WorkStats > money WorkStats.money property Signature: money: number;","title":"Bitburner.workstats.money"},{"location":"bitburner.workstats.money/#workstatsmoney-property","text":"Signature: money: number;","title":"WorkStats.money property"},{"location":"bitburner.workstats.reputation/","text":"Home > bitburner > WorkStats > reputation WorkStats.reputation property Signature: reputation: number;","title":"Bitburner.workstats.reputation"},{"location":"bitburner.workstats.reputation/#workstatsreputation-property","text":"Signature: reputation: number;","title":"WorkStats.reputation property"},{"location":"bitburner.workstats.strexp/","text":"Home > bitburner > WorkStats > strExp WorkStats.strExp property Signature: strExp: number;","title":"Bitburner.workstats.strexp"},{"location":"bitburner.workstats.strexp/#workstatsstrexp-property","text":"Signature: strExp: number;","title":"WorkStats.strExp property"}]}